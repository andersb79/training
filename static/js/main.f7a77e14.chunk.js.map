{"version":3,"sources":["components/VideoControl.js","components/EditDrill.js","components/Game.js","components/ViewDrill.js","components/Game2.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Presence.js","components/Division.js","components/Trainings.js","components/PlayerProfile.js","components/Players.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/Training.js","models/Player.js","models/Rating.js","models/Stat.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","videoId","react_default","a","createElement","YouTube","opts","width","playerVars","autoplay","enablejsapi","hasSharedPath","onClick","loop","playsInline","preload","muted","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","onBack","_React$useState","React","useState","name","description","details","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","ArrowBackIos_default","selectedCategory","TextField","label","onChange","margin","e","file","files","processFile","text","Button","variant","VideoCall_default","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","level","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","_React$useState5","Boolean","_React$useState6","newDrill","setNewDrill","getAvatarColor","category","backgroundColor","selectCategory","filteredLevels","length","AddCircle_default","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","fileType","components_VideoControl","Chip","playerCount","Typography","color","component","components_EditDrill","selectedDrill","selectDrill","minPlayers","maxPlayers","dense","secondary","List","ListItem","lev","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_ViewDrill","root","flexGrow","maxWidth","demo","palette","background","paper","spacing","listCategories","cat","goToDrill","components_Game2","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","selectProfile","noValidate","autoComplete","disabled","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","players","player","toggleTraining","isTraining","VerifiedUserOutlined_default","filteredPlayersInTraining","currentStat","setMenu","currentTraining","date","ButtonGroup","components_Presence","components_Division","selectedPlayer","onUpdateRating","rating","setRating","updatePlayer","goToPlayer","selectPlayer","ratings","toggleSelect","selected","filteredPlayers","ratingText","components_PlayerProfile","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","CalendarToday_default","Group_default","Settings_default","Person_default","components_Drills","components_Trainings","components_Players","components_Help","components_Profile","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","Training","trainingId","Player","allStat","stat","stats","toggleIsTraining","updateStat","insertStat","Rating","Stat","statId","levelFilters","categories","LevelStore","array","trainings","byHighscore","slice","sort","b","y","reverse","byRating","xx","training","initzialize","levelFilter","api","currentSeason","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","_data","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","fetchPlayers","fetchTrainings","fetchStats","forEach","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context3","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","isImage","uploadUrl","insertLevel","config","base","table","view","apiKey","maxRecords","url","TrainingApi","generalRequest","conf","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_x","_getUsers","body","Content-Type","_fetchLevels","_callee3","_fetchTrainings","_callee4","_context4","_fetchStats","_callee5","_context5","_fetchPlayers","_callee6","_context6","_fetchItems","_callee7","_context7","addNewDrill","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7a77e14.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.videoId) {\r\n    const opts = {\r\n      width: \"100%\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        enablejsapi: 1\r\n      }\r\n    };\r\n    return <YouTube id={settings.id} videoId={settings.videoId} opts={opts} />;\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction EditDrill({ store, onBack }) {\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    details: \"\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, values, text => {\r\n      onBack();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-drill\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Namn\"\r\n        value={values.name}\r\n        onChange={handleChange(\"name\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        value={values.description}\r\n        onChange={handleChange(\"description\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"details\"\r\n        label=\"details\"\r\n        value={values.details}\r\n        onChange={handleChange(\"details\")}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            Ladda upp <VideoIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(EditDrill);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [newDrill, setNewDrill] = React.useState(false);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function addDrill() {\r\n    setNewDrill(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!newDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n            <div className=\"action\">\r\n              <AddCircleIcon onClick={addDrill} />\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    level.hasSharedPath && <img src={level.src} />}\r\n\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    !level.hasSharedPath && (\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={level.publicId}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    )}\r\n\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {newDrill && (\r\n        <EditDrill store={store} onBack={() => setNewDrill(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nfunction ViewDrill({ store, onBack }) {\r\n  const level = store.selectedDrill;\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"back\">\r\n          <div className=\"left\">\r\n            <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n          </div>\r\n          <div className=\"right\">{store.selectedCategory.name}</div>\r\n        </div>\r\n        <div className=\"drill\">\r\n          <div>{store.selectedDrill.name}</div>\r\n          {level.fileType === \"mp4\" && (\r\n            <VideoControl store={store} settings={level} />\r\n          )}\r\n          {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            level.hasSharedPath && <img src={level.src} />}\r\n\r\n          {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            !level.hasSharedPath && (\r\n              <Image\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            )}\r\n          <div className=\"desc\">Setup</div>\r\n          <div className=\"desc\">{level.details}</div>\r\n          <div>{level.minPlayers}</div>\r\n          <div>{level.maxPlayers}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ViewDrill);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ViewDrill from \"./ViewDrill\";\r\n\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction Game2({ store }) {\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  function selectDrill(lev) {\r\n    store.selectDrill(lev);\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          <List dense={dense}>\r\n            {store.filteredLevels.map(level => (\r\n              <ListItem key={level.id} onClick={() => selectDrill(level)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={level.name}\r\n                  secondary={secondary ? \"Secondary text\" : null}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                    <KeyboardArrowRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {store.selectedDrill && <ViewDrill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game2);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game2 from \"./Game2\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game2 store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Presence({store }) {\r\n  const classes = useStyles();\r\n   return (\r\n    <List className={classes.paper}>\r\n    {store.players.map(player => (\r\n      <>\r\n      <ListItem onClick={() => player.toggleTraining()}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={player.player} secondary={player.type} />\r\n        <ListItemSecondaryAction>\r\n        {player.isTraining ? <VerifiedUserOutlinedIcon  />: \"\"}\r\n       </ListItemSecondaryAction>\r\n      </ListItem>\r\n       <Divider />\r\n       </>\r\n    ))}\r\n  </List>\r\n  );\r\n}\r\n\r\nexport default observer(Presence);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Division({store }) {\r\n  const classes = useStyles();\r\n   return (\r\n    <List className={classes.paper}>\r\n    {store.filteredPlayersInTraining.map(player => (\r\n      <>\r\n      <ListItem onClick={() => player.toggleTraining()}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={player.player} secondary={player.currentStat.level} />\r\n        \r\n      </ListItem>\r\n       <Divider />\r\n       </>\r\n    ))}\r\n  </List>\r\n  );\r\n}\r\n\r\nexport default observer(Division);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction Trainings({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n  \r\n  function Roll({ classes, store }) {\r\n    return (\r\n    <div>roll</div>);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>{store.currentTraining.date} - {menu}</div>\r\n      <ButtonGroup>       \r\n          <Button\r\n           \r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => setMenu(0)}\r\n          >\r\n            Närvaro\r\n          </Button>\r\n          <Button\r\n            \r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => setMenu(1)}\r\n          >\r\n            Dagens indelning\r\n          </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store}/>}\r\n      {menu === 1 && <Division classes={classes} store={store}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Trainings);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction PlayerProfile({ store, onBack }) {\r\n  const classes = useStyles();\r\n\r\n  const player = store.selectedPlayer;\r\n\r\n  function onUpdateRating(rating) {\r\n    player.setRating(rating);\r\n    store.updatePlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{player.player}</div>\r\n      </div>\r\n\r\n      <div onClick={() => onUpdateRating(\"1\")}>Nivå 1</div>\r\n      <div onClick={() => onUpdateRating(\"2\")}>Nivå 2</div>\r\n      <div onClick={() => onUpdateRating(\"3\")}>Nivå 3</div>\r\n      <div onClick={() => onUpdateRating(\"4\")}>Nivå 4</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PlayerProfile);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport PlayerProfile from \"./PlayerProfile\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Players({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function goToPlayer(player) {\r\n    store.selectPlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup>\r\n        {store.ratings.map(rating => (\r\n          <Button\r\n            key={rating.id}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => rating.toggleSelect()}\r\n          >\r\n            {rating.name} - {rating.selected ? \"x\" : \"\"}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div>-</div>\r\n      {!store.selectedPlayer && (\r\n        <List className={classes.paper}>\r\n          {store.filteredPlayers.map(player => (\r\n            <>\r\n              <ListItem key={player.id} onClick={() => goToPlayer(player)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={player.player}\r\n                  secondary={player.ratingText}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedPlayer && (\r\n        <PlayerProfile store={store} onBack={() => goToPlayer(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Players);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 0;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random <= 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random <= 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random <= 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random <= 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Trainings from \"./Trainings\";\r\nimport Players from \"./Players\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(2);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<CalendarTodayIcon />} />\r\n          <Tab icon={<GroupIcon />} />\r\n          <Tab icon={<SettingsIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Trainings store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Players store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Training = types.model(\"Training\", {\r\n  id: types.string,\r\n  trainingId: types.integer,\r\n  date: types.string  \r\n});\r\n\r\nexport default Training;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.string,\r\n    player: types.string,\r\n    rating: types.string\r\n  })\r\n  .views(self => ({\r\n    get ratingText() {\r\n      return `Nivå ${self.rating}`;\r\n    },\r\n    get allStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(x => x.player === self.player);\r\n      if(stat){\r\n      return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get currentStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(x => x.trainingId === levelStore.currentTraining.trainingId && x.player === self.player);\r\n      if(stat){\r\n      return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get isTraining(){\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(x => x.trainingId === levelStore.currentTraining.trainingId && x.player === self.player);\r\n      if(stat){\r\n      return stat.isTraining;\r\n      }\r\n      return false;\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setRating(rating) {\r\n      self.rating = rating;\r\n    },\r\n    toggleTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(x => x.trainingId === levelStore.currentTraining.trainingId && x.player === self.player);\r\n      if(stat) {\r\n        stat.toggleIsTraining();\r\n        levelStore.updateStat(stat);\r\n      } else {\r\n        levelStore.insertStat({trainingId: levelStore.currentTraining.trainingId, player: self.player, isTraining: true, level: 1});\r\n      }      \r\n    }\r\n  }));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Rating = types\r\n  .model(\"Rating\", {\r\n    id: types.string,\r\n    name: types.string,\r\n    selected: types.boolean\r\n  })\r\n  .actions(self => ({\r\n    toggleSelect() {\r\n      self.selected = !self.selected;\r\n    }\r\n  }));\r\n\r\nexport default Rating;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Stat = types.model(\"Stat\", {\r\n  id: types.string,\r\n  statId: types.integer,\r\n  trainingId: types.integer,\r\n  player: types.string,\r\n  isTraining: types.maybeNull(types.boolean),\r\n  level : types.maybeNull(types.integer)\r\n})\r\n.actions(self => ({  \r\n  toggleIsTraining() {    \r\n    self.isTraining = !self.isTraining;\r\n  }\r\n}));\r\n\r\nexport default Stat;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Training from \"./Training\";\r\nimport Player from \"./Player\";\r\nimport Rating from \"./Rating\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"BALLMASTERY\", name: \"DEL 1 - Teknik/Passningar\" },\r\n  { id: 1, category: \"PASSINGDRILLS\", name: \"DEL 2 - Kombinationer\" },\r\n  { id: 2, category: \"POSSESION\", name: \"DEL 3 - Possession/spel\" }\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    trainings: types.array(Training),\r\n    players: types.array(Player),\r\n    ratings: types.array(Rating),\r\n    stats: types.array(Stat)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get filteredPlayersInTraining() {\r\n      var players = self.players.filter(x =>\r\n        x.isTraining);\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayers() {\r\n      var players = self.players.filter(x =>\r\n        self.ratings.find(xx => xx.selected && xx.id === x.rating)\r\n      );\r\n\r\n      var byRating = players.slice(0);\r\n      byRating.sort((a, b) => {\r\n        var x = a.rating;\r\n        var y = b.rating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byRating.reverse();\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get currentTraining() {\r\n      const training = self.trainings[0];\r\n      console.log(training);\r\n      return training;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedPlayer: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1\r\n  }))\r\n  .actions(self => ({\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectPlayer(player) {\r\n      self.selectedPlayer = player;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n      var players = await self.api.fetchPlayers();\r\n      var trainings = await self.api.fetchTrainings();\r\n      var stats = await self.api.fetchStats();\r\n      console.log(stats);\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        trainings: [],        \r\n        trainings: [],\r\n        stats: [],\r\n        players: [],\r\n        ratings: [\r\n          { id: \"1\", name: \"Nivå 1\", selected: true },\r\n          { id: \"2\", name: \"Nivå 2\", selected: true },\r\n          { id: \"3\", name: \"Nivå 3\", selected: true },\r\n          { id: \"4\", name: \"Nivå 4\", selected: true }\r\n        ]\r\n      };\r\n\r\n      stats.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.stats.push(elm.fields);\r\n      });\r\n\r\n      trainings.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.trainings.push(elm.fields);\r\n      });\r\n\r\n      players.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.players.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    updatePlayer(player) {\r\n      self.api.updatePlayer(player);\r\n    },\r\n    insertStat(stat) {\r\n      self.api.insertStat(stat);\r\n\r\n      self.refresh();\r\n    },\r\n    updateStat(stat) {\r\n      self.api.updateStat(stat);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, values, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"raw\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: values.name,\r\n          description: values.description,\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1,\r\n          fileType: isImage ? \"jpg\" : \"mp4\"\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 100,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    return new Request(\r\n      `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${conf.view}`,\r\n      {\r\n        method: \"get\",\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${conf.apiKey}`\r\n        })\r\n      }\r\n    );\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  updatePlayer(player) {\r\n    const url = `${config.url}/Players/${player.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            player: player.player,\r\n            rating: player.rating\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    return this.response({ table: \"Levels\" });\r\n  },\r\n  async fetchTrainings() {\r\n    return this.response({ table: \"Trainings\" });\r\n  },\r\n  async fetchStats() {\r\n    return this.response({ table: \"Stat\" });\r\n  },\r\n  async fetchPlayers() {\r\n    return this.response({ table: \"Players\" });\r\n  },\r\n  async fetchItems() {\r\n    return this.response({ table: \"Items\" });\r\n  },\r\n  addNewDrill(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  },\r\n  insertLevel(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  },\r\n  updateStat(stat) {    \r\n    const url = `${config.url}/Stat/${stat.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {            \r\n            trainingId: stat.trainingId,\r\n            player : stat.player,\r\n            isTraining : stat.isTraining,\r\n            level: stat.level\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  insertStat(stat) {\r\n    fetch(\r\n      new Request(`${config.url}/Stat`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: stat\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}