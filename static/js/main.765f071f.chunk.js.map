{"version":3,"sources":["components/VideoControl.js","components/EditDrill.js","components/Game.js","components/ViewDrill.js","components/Game2.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Presence.js","components/Division.js","components/Trainings.js","components/PlayerProfile.js","components/Players.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/Training.js","models/Player.js","models/Rating.js","models/Stat.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","videoId","react_default","a","createElement","YouTube","opts","width","playerVars","autoplay","enablejsapi","hasSharedPath","onClick","loop","playsInline","preload","muted","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","onBack","_React$useState","React","useState","name","description","details","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","ArrowBackIos_default","selectedCategory","TextField","label","onChange","margin","e","file","files","processFile","text","Button","variant","VideoCall_default","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","level","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","_React$useState5","Boolean","_React$useState6","newDrill","setNewDrill","getAvatarColor","category","backgroundColor","selectCategory","filteredLevels","length","AddCircle_default","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","fileType","components_VideoControl","Chip","playerCount","Typography","color","component","components_EditDrill","selectedDrill","selectDrill","minPlayers","maxPlayers","marginRight","marginBottom","red","dense","expanded","setExpanded","handleExpandClick","List","action","IconButton","MoreVert_default","subheader","index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","index","CardActions","disableSpacing","Favorite_default","Share_default","clsx","aria-expanded","ExpandMore_default","Collapse","in","timeout","unmountOnExit","paragraph","components_ViewDrill","root","flexGrow","maxWidth","demo","palette","background","paper","spacing","secondary","listCategories","cat","ListItem","goToDrill","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","edge","KeyboardArrowRight_default","components_Game2","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","selectProfile","noValidate","autoComplete","disabled","components_VideoList","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","hasComment","fontSize","comment","displayText","components_ProfileReadOnly","onLogout","loggedIn","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","Tablet_default","location","reload","hasStats","players","player","toggleTraining","myRatioText","isTraining","VerifiedUserOutlined_default","startTraining","updateLevelOnStat","filteredPlayersInTrainingUn","failRate","filteredPlayersInTrainingEasy","currentStat","filteredPlayersInTrainingHard","setMenu","setPrevTraining","currentTraining","date","trainingId","setNextTraining","ButtonGroup","components_Presence","components_Division","selectedPlayer","onUpdateRating","rating","setRating","updatePlayer","goToPlayer","selectPlayer","ratings","toggleSelect","selected","filteredPlayers","components_PlayerProfile","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","CalendarToday_default","Group_default","Settings_default","Person_default","components_Drills","components_Trainings","components_Players","components_Help","components_Profile","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","Training","Player","ratingText","benchmarkHard","benchmarkHardValue","allStat","stat","stats","myRatio","al","easy","hard","isNaN","allHard","trainings","diff","val","ratio","nextLevel","toggleIsTraining","updateStat","insertStat","Rating","Stat","statId","setLevel","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","filteredPlayersInTraining","orderedPlayers","byRating","xx","trainingIndex","orderdPlayers","forEach","initzialize","levelFilter","api","currentSeason","setTrainingIndex","easyCount","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","fetchPlayers","fetchTrainings","fetchStats","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","findNextTraining","_context3","indexOf","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","isImage","uploadUrl","insertLevel","base","Airtable","apiKey","configure","config","table","view","maxRecords","url","TrainingApi","generalRequest","conf","Request","method","headers","Headers","Authorization","fetchAllWithOffset","_fetchAllWithOffset","allRecords","resp","json","fetch","err","_x","_x2","response","_response","records","_x3","_getUsers","_callee3","u","update","record","get","body","Content-Type","_fetchLevels","_callee4","_context4","select","all","_fetchTrainings","_callee5","_context5","_fetchStats","_callee6","_context6","_fetchPlayers","_callee7","_context7","_fetchItems","_callee8","_context8","addNewDrill","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.765f071f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.videoId) {\r\n    const opts = {\r\n      width: \"100%\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        enablejsapi: 1\r\n      }\r\n    };\r\n    return <YouTube id={settings.id} videoId={settings.videoId} opts={opts} />;\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction EditDrill({ store, onBack }) {\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    details: \"\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, values, text => {\r\n      onBack();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-drill\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Namn\"\r\n        value={values.name}\r\n        onChange={handleChange(\"name\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        value={values.description}\r\n        onChange={handleChange(\"description\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"details\"\r\n        label=\"details\"\r\n        value={values.details}\r\n        onChange={handleChange(\"details\")}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            Ladda upp <VideoIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(EditDrill);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [newDrill, setNewDrill] = React.useState(false);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function addDrill() {\r\n    setNewDrill(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!newDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n            <div className=\"action\">\r\n              <AddCircleIcon onClick={addDrill} />\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    level.hasSharedPath && <img src={level.src} />}\r\n\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    !level.hasSharedPath && (\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={level.publicId}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    )}\r\n\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {newDrill && (\r\n        <EditDrill store={store} onBack={() => setNewDrill(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nfunction ViewDrill({ store, onBack }) {\r\n  const level = store.selectedDrill;\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"back\">\r\n          <div className=\"left\">\r\n            <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n          </div>\r\n          <div className=\"right\">{store.selectedCategory.name}</div>\r\n        </div>\r\n        <div className=\"drill\">\r\n          <div>{store.selectedDrill.name}</div>\r\n          {level.fileType === \"mp4\" && (\r\n            <VideoControl store={store} settings={level} />\r\n          )}\r\n          {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            level.hasSharedPath && <img src={level.src} />}\r\n\r\n          {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            !level.hasSharedPath && (\r\n              <Image\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            )}\r\n          <div className=\"desc\">Setup</div>\r\n          <div className=\"desc\">{level.details}</div>\r\n          <div>{level.minPlayers}</div>\r\n          <div>{level.maxPlayers}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ViewDrill);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ViewDrill from \"./ViewDrill\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport {\r\n  CarouselProvider,\r\n  Slider,\r\n  Slide,\r\n  ButtonBack,\r\n  ButtonNext\r\n} from \"pure-react-carousel\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\n\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginBottom: 10\r\n  },\r\n  media: {\r\n    height: 0\r\n    // paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game2({ store }) {\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  function selectDrill(lev) {\r\n    store.selectDrill(lev);\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          <List dense={dense}>\r\n            {store.filteredLevels.map(level => (\r\n              <Card className={classes.card} key={level.id}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                      R\r\n                    </Avatar>\r\n                  }\r\n                  action={\r\n                    <IconButton aria-label=\"settings\">\r\n                      <MoreVertIcon />\r\n                    </IconButton>\r\n                  }\r\n                  title={level.name}\r\n                  subheader=\"September 14, 2016\"\r\n                />\r\n                <CarouselProvider\r\n                  naturalSlideWidth={100}\r\n                  naturalSlideHeight={125}\r\n                  totalSlides={3}\r\n                >\r\n                  <Slider>\r\n                    <Slide index={0}>\r\n                      {level.fileType === \"mp4\" && (\r\n                        <VideoControl store={store} settings={level} />\r\n                      )}\r\n                      {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                        level.hasSharedPath && <img src={level.src} />}\r\n\r\n                      {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                        !level.hasSharedPath && (\r\n                          <Image\r\n                            cloudName=\"deolievif\"\r\n                            publicId={level.publicId}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                          />\r\n                        )}\r\n                    </Slide>\r\n                    <Slide index={1}>I am the second Slide.</Slide>\r\n                    <Slide index={2}>I am the third Slide.</Slide>\r\n                  </Slider>\r\n                </CarouselProvider>\r\n\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {level.details}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                  <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                  </IconButton>\r\n                  <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    className={clsx(classes.expand, {\r\n                      [classes.expandOpen]: expanded\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                  <CardContent>\r\n                    <Typography paragraph>Method:</Typography>\r\n                    <Typography paragraph>\r\n                      Heat 1/2 cup of the broth in a pot until simmering, add\r\n                      saffron and set aside for 10 minutes.\r\n                    </Typography>\r\n                    <Typography paragraph>\r\n                      Heat oil in a (14- to 16-inch) paella pan or a large, deep\r\n                      skillet over medium-high heat. Add chicken, shrimp and\r\n                      chorizo, and cook, stirring occasionally until lightly\r\n                      browned, 6 to 8 minutes. Transfer shrimp to a large plate\r\n                      and set aside, leaving chicken and chorizo in the pan. Add\r\n                      pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n                      pepper, and cook, stirring often until thickened and\r\n                      fragrant, about 10 minutes. Add saffron broth and\r\n                      remaining 4 1/2 cups chicken broth; bring to a boil.\r\n                    </Typography>\r\n                    <Typography paragraph>\r\n                      Add rice and stir very gently to distribute. Top with\r\n                      artichokes and peppers, and cook without stirring, until\r\n                      most of the liquid is absorbed, 15 to 18 minutes. Reduce\r\n                      heat to medium-low, add reserved shrimp and mussels,\r\n                      tucking them down into the rice, and cook again without\r\n                      stirring, until mussels have opened and rice is just\r\n                      tender, 5 to 7 minutes more. (Discard any mussels that\r\n                      don’t open.)\r\n                    </Typography>\r\n                    <Typography>\r\n                      Set aside off of the heat to let rest for 10 minutes, and\r\n                      then serve.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Collapse>\r\n              </Card>\r\n\r\n              // <ListItem key={level.id} onClick={() => selectDrill(level)}>\r\n              //   <ListItemAvatar>\r\n              //     <Avatar>\r\n              //       <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n              //     </Avatar>\r\n              //   </ListItemAvatar>\r\n              //   <ListItemText\r\n              //     primary={level.name}\r\n              //     secondary={secondary ? \"Secondary text\" : null}\r\n              //   />\r\n              //   <ListItemSecondaryAction>\r\n              //     <IconButton edge=\"end\" aria-label=\"Delete\">\r\n              //       <KeyboardArrowRightIcon />\r\n              //     </IconButton>\r\n              //   </ListItemSecondaryAction>\r\n              // </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {store.selectedDrill && <ViewDrill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game2);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game2 from \"./Game2\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game2 store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Presence({ store }) {\r\n  const classes = useStyles();\r\n  const hasStat = store.hasStats;\r\n\r\n  if (!hasStat) {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.startTraining()}\r\n      >\r\n        Starta närvaro\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className={classes.paper}>\r\n      {store.players.map(player => (\r\n        <>\r\n          <ListItem onClick={() => player.toggleTraining()}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ImageIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={player.player}\r\n              secondary={player.myRatioText}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              {player.isTraining ? <VerifiedUserOutlinedIcon /> : \"\"}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default observer(Presence);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Division({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.updateLevelOnStat()}\r\n      >\r\n        Dela in\r\n      </Button>\r\n      {store.filteredPlayersInTrainingUn.length > 0 && (\r\n        <span>okatogoriserade</span>\r\n      )}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingUn.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.failRate}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Lätt {store.filteredPlayersInTrainingEasy.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingEasy.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Svår {store.filteredPlayersInTrainingHard.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingHard.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Division);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Trainings({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n\r\n  function Roll({ classes, store }) {\r\n    return <div>roll</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setPrevTraining()}\r\n        >\r\n          -\r\n        </Button>\r\n        {store.currentTraining.date} {store.currentTraining.trainingId} - {menu}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setNextTraining()}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(0)}\r\n        >\r\n          Närvaro\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(1)}\r\n        >\r\n          Dagens indelning\r\n        </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store} />}\r\n      {menu === 1 && <Division classes={classes} store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Trainings);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction PlayerProfile({ store, onBack }) {\r\n  const classes = useStyles();\r\n\r\n  const player = store.selectedPlayer;\r\n\r\n  function onUpdateRating(rating) {\r\n    player.setRating(rating);\r\n    store.updatePlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{player.player}</div>\r\n      </div>\r\n\r\n      <div onClick={() => onUpdateRating(\"1\")}>Nivå 1</div>\r\n      <div onClick={() => onUpdateRating(\"2\")}>Nivå 2</div>\r\n      <div onClick={() => onUpdateRating(\"3\")}>Nivå 3</div>\r\n      <div onClick={() => onUpdateRating(\"4\")}>Nivå 4</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PlayerProfile);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport PlayerProfile from \"./PlayerProfile\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Players({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function goToPlayer(player) {\r\n    store.selectPlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup>\r\n        {store.ratings.map(rating => (\r\n          <Button\r\n            key={rating.id}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => rating.toggleSelect()}\r\n          >\r\n            {rating.name} - {rating.selected ? \"x\" : \"\"}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div>-</div>\r\n      {!store.selectedPlayer && (\r\n        <List className={classes.paper}>\r\n          {store.filteredPlayers.map(player => (\r\n            <>\r\n              <ListItem key={player.id} onClick={() => goToPlayer(player)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={player.player}\r\n                  secondary={player.myRatioText}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedPlayer && (\r\n        <PlayerProfile store={store} onBack={() => goToPlayer(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Players);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 0;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random <= 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random <= 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random <= 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random <= 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Trainings from \"./Trainings\";\r\nimport Players from \"./Players\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(2);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<CalendarTodayIcon />} />\r\n          <Tab icon={<GroupIcon />} />\r\n          <Tab icon={<SettingsIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Trainings store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Players store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${x.publicId}.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Training = types.model(\"Training\", {\r\n  id: types.string,\r\n  trainingId: types.integer,\r\n  date: types.string\r\n});\r\n\r\nexport default Training;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.string,\r\n    player: types.string,\r\n    rating: types.string\r\n  })\r\n  .views(self => ({\r\n    get ratingText() {\r\n      return `Nivå ${self.rating} - ${self.benchmarkHard}, ${self.benchmarkHardValue}`;\r\n    },\r\n    get allStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.filter(\r\n        x =>\r\n          x.player === self.player &&\r\n          x.isTraining &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get myRatio() {\r\n      const allStat = self.allStat;\r\n\r\n      const allEasy = allStat.filter(x => x.level === 1).length;\r\n      const allHard = allStat.filter(x => x.level === 2).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      const a = { easy: 100 - al, hard: al };\r\n\r\n      if (isNaN(a.easy)) {\r\n        a.easy = 0;\r\n      }\r\n\r\n      if (isNaN(a.hard)) {\r\n        a.hard = 0;\r\n      }\r\n\r\n      return a;\r\n    },\r\n    get failRate() {\r\n      if (self.rating === \"1\") {\r\n        return 100 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 75 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 25 - self.myRatio.easy;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHard() {\r\n      if (self.rating === \"1\") {\r\n        return 0;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 25;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 75;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHardValue() {\r\n      const allStat = self.allStat;\r\n      const levelStore = getRoot(self);\r\n      if (self.player == \"Arvid Lilja\") {\r\n        const a = \"b\";\r\n      }\r\n\r\n      const allHard = allStat.filter(\r\n        x =>\r\n          x.level === 2 &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      ).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      if (!trainings) {\r\n        return self.benchmarkHard;\r\n      }\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      return al;\r\n    },\r\n    get diff() {\r\n      // Hur mycket svår tränbing de ska ha minus så mycket de har haft\r\n      let val = self.benchmarkHard - self.benchmarkHardValue;\r\n      if (val < 0) {\r\n        val = val * -1;\r\n      }\r\n      return val;\r\n    },\r\n    get myRatioText() {\r\n      return (\r\n        self.myRatio.easy +\r\n        \"% Lätt, \" +\r\n        self.myRatio.hard +\r\n        \"% Svår (\" +\r\n        self.ratio +\r\n        \")\"\r\n      );\r\n    },\r\n    get nextLevel() {\r\n      const myRatio = self.myRatio;\r\n      if (self.rating === \"1\") {\r\n        return 1;\r\n      }\r\n\r\n      if (self.benchmarkHardValue < self.benchmarkHard) {\r\n        return 2;\r\n      }\r\n\r\n      if (self.rating === \"2\") {\r\n        return myRatio.easy < 75 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return myRatio.easy < 50 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return myRatio.easy < 25 ? 1 : 2;\r\n      }\r\n      return 1;\r\n    },\r\n    get ratio() {\r\n      const allStat = self.allStat;\r\n      if (self.rating === \"1\") {\r\n        return \"100% Lätt\";\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return \"75% Lätt 1, 25% Svår\";\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return \"50% Lätt, 50 % Svår\";\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return \"25% Lätt, 75% Svår\";\r\n      }\r\n      return \"tom\";\r\n    },\r\n    get currentStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get isTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat.isTraining;\r\n      }\r\n      return false;\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setRating(rating) {\r\n      self.rating = rating;\r\n    },\r\n    toggleTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        stat.toggleIsTraining();\r\n        //stat.setLevel(self.nextLevel);\r\n        levelStore.updateStat(stat);\r\n      } else {\r\n        levelStore.insertStat({\r\n          trainingId: levelStore.currentTraining.trainingId,\r\n          player: self.player,\r\n          isTraining: true\r\n        });\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Rating = types\r\n  .model(\"Rating\", {\r\n    id: types.string,\r\n    name: types.string,\r\n    selected: types.boolean\r\n  })\r\n  .actions(self => ({\r\n    toggleSelect() {\r\n      self.selected = !self.selected;\r\n    }\r\n  }));\r\n\r\nexport default Rating;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Stat = types\r\n  .model(\"Stat\", {\r\n    id: types.string,\r\n    statId: types.integer,\r\n    trainingId: types.integer,\r\n    player: types.string,\r\n    isTraining: types.maybeNull(types.boolean),\r\n    level: types.maybeNull(types.integer)\r\n  })\r\n  .actions(self => ({\r\n    toggleIsTraining() {\r\n      self.isTraining = !self.isTraining;\r\n    },\r\n    setLevel(level) {\r\n      self.level = level;\r\n    }\r\n  }));\r\n\r\nexport default Stat;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Training from \"./Training\";\r\nimport Player from \"./Player\";\r\nimport Rating from \"./Rating\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"BALLMASTERY\", name: \"DEL 1 - Teknik/Passningar\" },\r\n  { id: 1, category: \"PASSINGDRILLS\", name: \"DEL 2 - Kombinationer\" },\r\n  { id: 2, category: \"POSSESION\", name: \"DEL 3 - Possession/spel\" }\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    trainings: types.array(Training),\r\n    players: types.array(Player),\r\n    ratings: types.array(Rating),\r\n    stats: types.array(Stat)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get filteredPlayersInTraining() {\r\n      var players = self.players.filter(x => x.isTraining);\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingEasy() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 1\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingHard() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 2\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingUn() {\r\n      var players = self.orderedPlayers.filter(\r\n        x => x.isTraining && x.currentStat.level === null\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayers() {\r\n      var players = self.players.filter(x =>\r\n        self.ratings.find(xx => xx.selected && xx.id === x.rating)\r\n      );\r\n\r\n      var byRating = players.slice(0);\r\n      byRating.sort((a, b) => {\r\n        var x = a.rating;\r\n        var y = b.rating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byRating.reverse();\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get currentTraining() {\r\n      return self.trainings[self.trainingIndex];\r\n    },\r\n    get hasStats() {\r\n      const stat = self.stats.find(\r\n        x => x.trainingId === self.currentTraining.trainingId\r\n      );\r\n\r\n      return stat ? true : false;\r\n    },\r\n    get orderedPlayers() {\r\n      var orderdPlayers = self.filteredPlayersInTraining.slice(0);\r\n      orderdPlayers.sort((a, b) => {\r\n        var x = a.diff;\r\n        var y = b.diff;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n\r\n      orderdPlayers.reverse();\r\n\r\n      orderdPlayers.forEach(x => {\r\n        console.log(\r\n          `Namn: ${x.player} Nuvarande diff: ${x.diff} _ Ska ha:  ${x.benchmarkHard} svår _ har ${x.benchmarkHardValue}`\r\n        );\r\n      });\r\n\r\n      return orderdPlayers;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedPlayer: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1,\r\n    trainingIndex: 3\r\n  }))\r\n  .actions(self => ({\r\n    setPrevTraining() {\r\n      console.log(self.trainingIndex);\r\n      if (self.trainingIndex !== 0) {\r\n        self.trainingIndex--;\r\n      }\r\n    },\r\n    setNextTraining() {\r\n      if (self.trainings.length - 1 !== self.trainingIndex) {\r\n        self.trainingIndex++;\r\n      }\r\n    },\r\n    setTrainingIndex(index) {\r\n      self.trainingIndex = index;\r\n    },\r\n    updateLevelOnStat() {\r\n      const count = self.filteredPlayersInTraining.length;\r\n      const easy = count / 2;\r\n      let easyCount = 0;\r\n\r\n      //lägg på rating 1 användare\r\n      self.orderedPlayers\r\n        .filter(x => x.rating === \"1\")\r\n        .forEach(x => {\r\n          x.currentStat.setLevel(1);\r\n          easyCount++;\r\n\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      self.orderedPlayers\r\n        .filter(x => x.rating !== \"1\")\r\n        .forEach(x => {\r\n          if (x.nextLevel === 1 && easyCount <= easy) {\r\n            x.currentStat.setLevel(1);\r\n            easyCount++;\r\n          } else {\r\n            x.currentStat.setLevel(2);\r\n          }\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      //lägg på rating 2 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"2\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(1);\r\n      //       easyCount++;\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 3 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"3\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 4 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"4\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      self.refresh();\r\n    },\r\n    startTraining() {\r\n      self.players.forEach(x => {\r\n        self.api.insertStat({\r\n          trainingId: self.currentTraining.trainingId,\r\n          player: x.player,\r\n          isTraining: false\r\n        });\r\n      });\r\n\r\n      self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectPlayer(player) {\r\n      self.selectedPlayer = player;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n      var players = await self.api.fetchPlayers();\r\n      var trainings = await self.api.fetchTrainings();\r\n      var stats = await self.api.fetchStats();\r\n      console.log(stats);\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        trainings: [],\r\n        stats: [],\r\n        players: [],\r\n        ratings: [\r\n          { id: \"1\", name: \"Nivå 1\", selected: true },\r\n          { id: \"2\", name: \"Nivå 2\", selected: true },\r\n          { id: \"3\", name: \"Nivå 3\", selected: true },\r\n          { id: \"4\", name: \"Nivå 4\", selected: true }\r\n        ]\r\n      };\r\n\r\n      stats.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.stats.push(elm.fields);\r\n      });\r\n\r\n      trainings.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.trainings.push(elm.fields);\r\n      });\r\n\r\n      players.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.players.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    updatePlayer(player) {\r\n      self.api.updatePlayer(player);\r\n    },\r\n    insertStat(stat) {\r\n      self.api.insertStat(stat);\r\n\r\n      self.refresh();\r\n    },\r\n    updateStat(stat) {\r\n      self.api.updateStat(stat);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      const date = new Date();\r\n      const findNextTraining = data.trainings.find(\r\n        x => new Date(x.date) > date\r\n      );\r\n\r\n      self.trainingIndex = data.trainings.indexOf(findNextTraining);\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, values, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"raw\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: values.name,\r\n          description: values.description,\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1,\r\n          fileType: isImage ? \"jpg\" : \"mp4\"\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import { all } from \"q\";\r\nimport Airtable from \"airtable\";\r\n\r\nconst base = new Airtable({ apiKey: \"keyHQ5GM7ktar7YtG\" }).base(\r\n  \"app9IO48CYcfaIY4Z\"\r\n);\r\n\r\nAirtable.configure({ apiKey: \"YOUR_SECRET_API_KEY\" });\r\n\r\nconst config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view, offset }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    let url = `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${conf.view}`;\r\n\r\n    if (offset) {\r\n      url = `${url}&offset=${offset}`;\r\n    }\r\n\r\n    return new Request(url, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: `Bearer ${conf.apiKey}`\r\n      })\r\n    });\r\n  },\r\n\r\n  async fetchAllWithOffset(conf, allRecords) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      if (json.offset) {\r\n        conf.offset = json.offset;\r\n        allRecords.push.apply(\r\n          allRecords,\r\n          this.fetchAllWithOffset(conf, allRecords)\r\n        );\r\n      }\r\n\r\n      return allRecords;\r\n    }\r\n  },\r\n\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n      // let allRecords = json.records;\r\n\r\n      // if (json.offset) {\r\n      //   conf.offset = json.offset;\r\n      //   allRecords = await this.fetchAllWithOffset(conf, allRecords);\r\n      // }\r\n\r\n      // return allRecords;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    // const url = `${config.url}/Users/${user.id}`;\r\n\r\n    // fetch(\r\n    //   new Request(url, {\r\n    //     method: \"put\",\r\n    //     body: JSON.stringify({\r\n    //       fields: {\r\n    //         name: user.name,\r\n    //         userName: user.userName,\r\n    //         password: user.password,\r\n    //         profileImage: user.profileImage,\r\n    //         favoriteTeam: user.favoriteTeam,\r\n    //         playerTeam: user.playerTeam,\r\n    //         position: user.position,\r\n    //         shirtNumber: user.shirtNumber\r\n    //       }\r\n    //     }),\r\n    //     headers: new Headers({\r\n    //       Authorization: `Bearer ${config.apiKey}`,\r\n    //       \"Content-Type\": \"application/json\"\r\n    //     })\r\n    //   })\r\n    // ).catch(err => {\r\n    //   alert(err);\r\n    // });\r\n    //Update user på user model skickar bara in fel prop\r\n    console.log(user.JSON);\r\n    const u = {\r\n      id: user.id,\r\n      fields: {\r\n        name: user.name,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        profileImage: user.profileImage,\r\n        favoriteTeam: user.favoriteTeam,\r\n        playerTeam: user.playerTeam,\r\n        position: user.position,\r\n        shirtNumber: user.shirtNumber\r\n      }\r\n    };\r\n    base(\"Users\").update([u], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.get(\"name\"));\r\n      });\r\n    });\r\n  },\r\n  updatePlayer(player) {\r\n    const url = `${config.url}/Players/${player.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            player: player.player,\r\n            rating: player.rating\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    const data = await base(\"Levels\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchTrainings() {\r\n    const data = await base(\"Trainings\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n\r\n    //return this.response({ table: \"Trainings\" });\r\n  },\r\n  async fetchStats() {\r\n    const data = await base(\"Stat\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n\r\n    // return this.response({ table: \"Stat\" });\r\n  },\r\n  async fetchPlayers() {\r\n    const data = await base(\"Players\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchItems() {\r\n    const data = await base(\"Items\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  addNewDrill(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  },\r\n  insertLevel(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  },\r\n  updateStat(stat) {\r\n    const url = `${config.url}/Stat/${stat.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            trainingId: stat.trainingId,\r\n            player: stat.player,\r\n            isTraining: stat.isTraining,\r\n            level: stat.level\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  insertStat(stat) {\r\n    fetch(\r\n      new Request(`${config.url}/Stat`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: stat\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}