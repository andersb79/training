{"version":3,"sources":["components/VideoControl.js","components/EditDrill.js","components/Game.js","components/ViewDrill.js","components/Game2.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Presence.js","components/Division.js","components/Trainings.js","components/PlayerProfile.js","components/Players.js","components/Number.js","components/Training.js","components/Main.js","components/Login.js","models/Level.js","models/LevelMedia.js","models/Item.js","models/User.js","models/Training.js","models/Player.js","models/Rating.js","models/Stat.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","react_default","a","createElement","onClick","document","getElementById","id","webkitEnterFullscreen","goFullScreen","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","onBack","_React$useState","React","useState","name","description","details","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","ArrowBackIos_default","selectedCategory","TextField","label","onChange","margin","e","file","files","processFile","text","Button","variant","VideoCall_default","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","level","isVisible","videoId","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","_React$useState5","Boolean","_React$useState6","newDrill","setNewDrill","getAvatarColor","category","backgroundColor","selectCategory","filteredLevels","length","AddCircle_default","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","fileType","components_VideoControl","hasSharedPath","lib","cloudName","publicId","Chip","playerCount","Typography","color","component","components_EditDrill","Carousel","require","selectedDrill","_useState","_useState2","selectedItem","index","medias","innerHTML","selectDrill","showThumbs","showArrows","showIndicators","showStatus","Box","padding","textAlign","fontWeight","minPlayers","maxPlayers","organisation","dense","secondary","List","ListItem","lev","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_ViewDrill","root","flexGrow","maxWidth","demo","palette","background","paper","spacing","listCategories","cat","goToDrill","CardActionArea","CardMedia","image","gutterBottom","components_Game2","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","selectProfile","noValidate","autoComplete","disabled","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","hasStats","players","player","toggleTraining","myRatioText","isTraining","VerifiedUserOutlined_default","startTraining","filteredPlayersOnLevel2Teams","teams","rating","filteredPlayersOnNoLevel2Teams","setMenu","setPrevTraining","currentTraining","date","trainingId","setNextTraining","ButtonGroup","components_Presence","components_Division","selectedPlayer","onUpdateRating","setRating","updatePlayer","goToPlayer","selectPlayer","ratings","toggleSelect","selected","filteredPlayers","components_PlayerProfile","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","children","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","Settings_default","Person_default","components_Drills","components_Help","components_Profile","components_Training","components_Trainings","components_Players","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","getRoot","levelMedias","levelStore","some","points","resourceType","LevelMedia","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","Training","Player","ratingText","benchmarkHard","benchmarkHardValue","allStat","stat","stats","myRatio","al","easy","hard","isNaN","failRate","allHard","trainings","diff","val","ratio","nextLevel","currentStat","toggleIsTraining","updateStat","insertStat","Rating","Stat","statId","setLevel","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","filteredPlayersInTraining","filteredPlayersInTrainingEasy","filteredPlayersInTrainingHard","filteredPlayersInTrainingUn","orderedPlayers","teamCount","ratedPlayers","highPlayers","shuffle","lowPlayers","highPlayersHalfCount","lowPlayersHalfCount","playersTeam1High","playersTeam2High","playersTeam1Low","playersTeam2Low","byRating","xx","trainingIndex","orderdPlayers","forEach","initzialize","levelFilter","api","currentSeason","setTrainingIndex","updateLevelOnStat","easyCount","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","fetchUsers","sent","fetchLevels","fetchLevelMedias","fetchItems","fetchPlayers","fetchTrainings","fetchStats","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","findNextTraining","_context3","indexOf","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","temporaryValue","randomIndex","currentIndex","isImage","uploadUrl","insertLevel","base","Airtable","apiKey","configure","config","TrainingApi","_fetchUsers","select","view","all","_fetchLevels","_fetchLevelMedias","_callee3","_fetchTrainings","_callee4","_context4","_fetchStats","_callee5","_context5","_fetchPlayers","_callee6","_context6","_fetchItems","_callee7","_context7","u","table","err","records","record","getId","url","fetch","Request","method","body","headers","Headers","Authorization","Content-Type","update","get","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UA2BeA,kBAtBf,SAAAC,GAA2CA,EAAnBC,MAAmB,IAAZC,EAAYF,EAAZE,SAK7B,OACEC,EAAAC,EAAAC,cAAA,SACEC,QAAS,kBANb,SAAsBJ,GACpBK,SAASC,eAAeN,EAASO,IAAIC,wBAKpBC,CAAaT,IAC5BO,GAAIP,EAASO,GACbG,MAAI,EACJC,aAAW,EACXC,QAAQ,OACRC,OAAK,EACLC,MAAM,OACNC,OAAO,OACPC,OAAQhB,EAASiB,eAEjBhB,EAAAC,EAAAC,cAAA,UAAQe,IAAKlB,EAASmB,YAAaC,KAAK,uGC+C/BvB,kBA9Df,SAAAC,GAAsC,IAAjBC,EAAiBD,EAAjBC,MAAOsB,EAAUvB,EAAVuB,OAAUC,EACRC,IAAMC,SAAS,CACzCC,KAAM,GACNC,YAAa,GACbC,QAAS,KAJyBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC7BS,EAD6BH,EAAA,GACrBI,EADqBJ,EAAA,GAO9BK,EAAe,SAAAR,GAAI,OAAI,SAAAS,GAC3BF,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAANF,OAAAO,EAAA,EAAAP,CAAA,GAAeJ,EAAOS,EAAMG,OAAOC,WAW9C,OACErC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,aACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAMiB,QAEnCpB,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SAASxC,EAAM0C,iBAAiBhB,OAGjDxB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,OACHoC,MAAM,OACNL,MAAOP,EAAON,KACdmB,SAAUX,EAAa,QACvBY,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,cACHoC,MAAM,cACNL,MAAOP,EAAOL,YACdkB,SAAUX,EAAa,eACvBY,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,UACHoC,MAAM,UACNL,MAAOP,EAAOJ,QACdiB,SAAUX,EAAa,WACvBY,OAAO,WAGT5C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,cACbtC,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOmB,UAAU,OAAOK,SAAU,SAAAE,GAAC,OAxCrD,SAAqBA,GACnB,IAAIC,EAAOD,EAAET,OAAOW,MAAM,GAE1BjD,EAAMkD,YAAYF,EAAMhB,EAAQ,SAAAmB,GAC9B7B,MAoCqD4B,CAAYH,MAC/D7C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YACbtC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,YAAhB,aACYnD,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,4BCpChBoD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJC,UAAW,QAEbC,MAAO,CACL5C,OAAQ,EACR6C,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,MAwJKzE,YAnJf,SAAAC,GAAyB,IAATC,EAASD,EAATC,MACRwE,EAAUjB,IADOhC,EAESC,IAAMC,UAAS,GAFxBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAsBvB,SAASsB,EAAS4B,EAAOC,GACvB,IAAID,EAAME,QAAV,CAGAF,EAAMG,cAAcF,GACpB,IAAMG,EAAWvE,SAASC,eAAekE,EAAMjE,IAC3CqE,EACEA,EAASC,OACPJ,EACFG,EAASC,OAETD,EAASE,SAIbC,QAAQC,IAAI,cArCOpD,EAAA,GAAAA,EAAA,GAIvBqD,oBAAU,WACRC,WAAW,WACTnF,EAAMoF,OACHC,OAAO,SAAAC,GAAC,OAAIA,EAAEZ,YACda,IAAI,SAAAd,GACH5B,EAAS4B,GAAO,MAEnB,KAXkB,IAAAe,EAyCShE,IAAMC,SAAS,MAzCxBgE,EAAA3D,OAAAC,EAAA,EAAAD,CAAA0D,EAAA,GAyChBE,EAzCgBD,EAAA,GAAAE,GAAAF,EAAA,GA0CVG,QAAQF,GACWlE,IAAMC,UAAS,IA3CxBoE,EAAA/D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GA2ChBG,EA3CgBD,EAAA,GA2CNE,EA3CMF,EAAA,GA6CvB,SAASG,EAAevB,GACtB,MAAuB,WAAnBA,EAAMwB,SACD,CAAEC,gBAAiB,UAGL,SAAnBzB,EAAMwB,SACD,CAAEC,gBAAiB,OAGrB,CAAEA,gBAAiB,SAO5B,OACEhG,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACXsD,GACA5F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAML,EAAMmG,qBAEzCjG,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACZxC,EAAM0C,iBAAiBhB,KAD1B,KACkC1B,EAAMoG,eAAeC,OADvD,QAGAnG,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,UACbtC,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAeE,QAhB3B,WACE0F,GAAY,QAkBL/F,EAAMoG,eAAeb,IAAI,SAACd,EAAO8B,GAAR,OACxBrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,IAAKhC,EAAMjE,GACXqC,SAAU,SAAA6B,GAAS,OAAI7B,EAAS4B,EAAOC,KAEvCxE,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACED,IAAKhC,EAAMA,MACXjC,UAAWgC,EAAQd,MAGnBxD,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEpC,OACErE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEC,aAAW,SACXC,MAAOd,EAAevB,GACtBjC,UAAWgC,EAAQD,SAGvBwC,MAAOtC,EAAM/C,OAGfxB,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACsB,QAAnBvC,EAAMwC,UACL/G,EAAAC,EAAAC,cAAC8G,EAAD,CAAclH,MAAOA,EAAOC,SAAUwE,KAEnB,QAAnBA,EAAMwC,UAAyC,QAAnBxC,EAAMwC,WAClCxC,EAAM0C,eAAiBjH,EAAAC,EAAAC,cAAA,OAAKe,IAAKsD,EAAMtD,OAEpB,QAAnBsD,EAAMwC,UAAyC,QAAnBxC,EAAMwC,YACjCxC,EAAM0C,eACLjH,EAAAC,EAAAC,cAACgH,EAAA,MAAD,CACEC,UAAU,YACVC,SAAU7C,EAAM6C,SAChBvG,MAAM,OACNC,OAAO,SAIbd,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,gBACbtC,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAM3E,MAAO6B,EAAM+C,cAEnBtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACEpE,QAAQ,QACRqE,MAAM,gBACNC,UAAU,KAETlD,EAAM7C,SAGT1B,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACEpE,QAAQ,QACRqE,MAAM,gBACNC,UAAU,KAETlD,EAAM9C,oBAUtBmE,GACC5F,EAAAC,EAAAC,cAACwH,EAAD,CAAW5H,MAAOA,EAAOsB,OAAQ,kBAAMyE,GAAY,SAM5CjG,mEC5LX+H,UAAWC,EAAQ,KAA6BD,UAiFrC/H,kBA/Ef,SAAAC,GAAsC,IAAjBC,EAAiBD,EAAjBC,MACbyE,GAD8B1E,EAAVuB,OACZtB,EAAM+H,eADgBC,EAEIvG,mBAAS,GAFbwG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAE7BE,EAF6BD,EAAA,GAUpC,SAASpF,EAASsF,GAChB,KAAIA,EAAQ,GAAZ,CAIA,IAAIvE,EAAQ5D,EAAM+H,cAAcK,OAAOD,GAEjCtD,EAAWvE,SAASC,eAAeqD,EAAMpD,IAE3BF,SAASC,eAAe,UAChC8H,UAAYzE,EAAMjC,YAE1BkD,IACFG,QAAQC,IAAI,QACZJ,EAASC,SAIb,OA5BoCmD,EAAA,GAIpC/C,oBAAU,WACRC,WAAW,WACTtC,EAAS,IACR,KAsBH3C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAML,EAAMsI,kBAEzCpI,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SAASxC,EAAM0C,iBAAiBhB,OAEjDxB,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACbtC,EAAAC,EAAAC,cAAA,WAAMJ,EAAM+H,cAAcrG,MAE1BxB,EAAAC,EAAAC,cAACyH,EAAD,CACEK,aAAcA,EACdrF,SAAUA,EACV0F,YAAY,EACZC,YAAY,EACZC,eAAgBhE,EAAM2D,OAAO/B,OAAS,EACtCqC,WAAYjE,EAAM2D,OAAO/B,OAAS,GAEjC5B,EAAM2D,OAAO7C,IAAI,SAAA3B,GAAK,OACrB1D,EAAAC,EAAAC,cAAA,WACsB,QAAnBwD,EAAMqD,UACL/G,EAAAC,EAAAC,cAAC8G,EAAD,CAAclH,MAAOA,EAAOC,SAAU2D,KAEnB,QAAnBA,EAAMqD,UAAyC,QAAnBrD,EAAMqD,WAClC/G,EAAAC,EAAAC,cAAA,OACE0G,MAAO,CAAE/F,MAAO,OAAQC,OAAQ,QAChCG,IAAKyC,EAAMzC,UAMrBjB,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKC,QAAS,GACZ1I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKE,UAAU,SAASrI,GAAG,WAC3BN,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKG,WAAW,kBAAhB,SACA5I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKnG,UAAU,cAAciC,EAAM7C,SACnC1B,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKG,WAAW,kBAAhB,WACA5I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKnG,UAAU,cACZiC,EAAMsE,WADT,IACsBtE,EAAMuE,YAE5B9I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKG,WAAW,kBAAhB,gBACA5I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAKnG,UAAU,cAAciC,EAAMwE,sCCEhCnJ,kBA7Cf,SAAAC,GAA0B,IAATC,EAASD,EAATC,MAASuB,EACEC,IAAMC,UAAS,GADjBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACjB2H,EADiBrH,EAAA,GAAA2D,GAAA3D,EAAA,GAEUL,IAAMC,UAAS,IAFzBgE,EAAA3D,OAAAC,EAAA,EAAAD,CAAA0D,EAAA,GAEjB2D,EAFiB1D,EAAA,GAMxB,OANwBA,EAAA,GAOtBvF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACXxC,EAAM+H,eACN7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAML,EAAMmG,qBAEzCjG,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACZxC,EAAM0C,iBAAiBhB,KAD1B,KACkC1B,EAAMoG,eAAeC,OADvD,SAIFnG,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAMF,MAAOA,GACVlJ,EAAMoG,eAAeb,IAAI,SAAAd,GAAK,OAC7BvE,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAU5C,IAAKhC,EAAMjE,GAAIH,QAAS,kBAjBzBiJ,EAiB2C7E,OAhB9DzE,EAAMsI,YAAYgB,GADpB,IAAqBA,IAkBPpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YAAYrB,IAAI,QAAQqI,IAAI,mBAG/CtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAASjF,EAAM/C,KACfyH,UAAWA,EAAY,iBAAmB,OAE5CjJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACEzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAYC,KAAK,MAAMhD,aAAW,UAChC3G,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,aAQbH,EAAM+H,eAAiB7H,EAAAC,EAAAC,cAAC2J,EAAD,CAAW/J,MAAOA,yBCrD1CuD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJZ,OAAQ,QAEVkH,KAAM,CACJC,SAAU,EACVC,SAAU,KAEZtG,MAAO,CACL5C,OAAQ,IACR6C,WAAY,UAEdsG,KAAM,CACJjE,gBAAiBzC,EAAM2G,QAAQC,WAAWC,OAE5CvD,MAAO,CACLjE,OAAQW,EAAM8G,QAAQ,EAAG,EAAG,IAE9BpH,KAAM,CACJL,OAAQ,WA4EGhD,kBAxEf,SAAAC,GAA2B,IAATC,EAASD,EAATC,MACVwE,EAAUjB,IADShC,EAECC,IAAMC,UAAS,GAFhBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAAAiE,GAAA3D,EAAA,GAAAA,EAAA,GAGSL,IAAMC,UAAS,IAHxBgE,EAAA3D,OAAAC,EAAA,EAAAD,CAAA0D,EAAA,GASzB,OATyBC,EAAA,GAAAA,EAAA,GAUvBvF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,WACXxC,EAAM0C,kBACNxC,EAAAC,EAAAC,cAAA,WACGJ,EAAMwK,eAAejF,IAAI,SAACkF,EAAKlE,GAAN,OACxBrG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACED,IAAKF,EACL/D,UAAWgC,EAAQd,KACnBrD,QAAS,kBAZrB,SAAmBoK,GACjBzK,EAAMmG,eAAesE,GAWIC,CAAUD,KAEzBvK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACEzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CACEpI,UAAWgC,EAAQZ,MACnBiH,MAAOJ,EAAII,MACX9D,MAAO0D,EAAI/I,OAEbxB,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACE9G,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACEjF,UAAWgC,EAAQrB,KACnB2H,cAAY,EACZzH,QAAQ,KACRsE,UAAU,MAET8C,EAAI/I,MAEPxB,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACEjF,UAAWgC,EAAQrB,KACnBE,QAAQ,QACRqE,MAAM,gBACNC,UAAU,YA6BvB3H,EAAM0C,kBAAoBxC,EAAAC,EAAAC,cAAC2K,EAAD,CAAO/K,MAAOA,8GC3GzCuD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuG,KAAM,CACJgB,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVjF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,OAE5Cc,SAAU,CACRrK,MAAO,IACPC,OAAQ,KAEVqK,KAAM,CACJ3D,MAAO,gCA6BI5H,mBAzBf,SAAAC,GAAoCA,EAAfC,MAAe,IAARsL,EAAQvL,EAARuL,KACpB9G,EAAUjB,KAIhB,OACErD,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CAAUC,WAAY,IAAKhJ,UAAWgC,EAAQ4G,UAC5ClL,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CAAchF,IAAI,YAAYiF,KAAM,EAAG5E,MAAO,CAAE9F,OAAQ,SACtDd,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAehE,UAAU,OACtB2D,EAAKM,UAAUvF,OADlB,gBAIDiF,EAAKM,UAAUrG,IAAI,SAAAsG,GAAI,OACtB3L,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CAAchF,IAAKoF,EAAKrL,GAAIH,QAAS,cACnCH,EAAAC,EAAAC,cAAA,OAAKe,IAAK0K,EAAKC,IAAKtC,IAAKqC,EAAK9E,QAC9B7G,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CACEhF,MAAO8E,EAAK9E,MACZiF,SAAU9L,EAAAC,EAAAC,cAAA,YAAOyL,EAAKI,mBClC5B1I,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCyI,UAAW,CACTlB,QAAS,OACTC,SAAU,QAEZkB,UAAW,CACTnI,WAAYP,EAAM8G,QAAQ,GAC1B6B,YAAa3I,EAAM8G,QAAQ,GAC3BxJ,MAAO,KAETmI,MAAO,CACLvF,UAAW,IAEb0I,KAAM,CACJtL,MAAO,QAgFIjB,mBA5Ef,SAAAC,GAAoC,IAATC,EAASD,EAATC,MACnBwE,EAAUjB,KADkBhC,EAENC,IAAMC,SAAS,CACzCjB,GAAIR,EAAMsM,gBAAgB9L,GAC1BkB,KAAM1B,EAAMsM,gBAAgB5K,KAC5B6K,SAAUvM,EAAMsM,gBAAgBC,SAChCC,SAAUxM,EAAMsM,gBAAgBE,SAChCC,aAAczM,EAAMsM,gBAAgBG,aACpCC,aAAc1M,EAAMsM,gBAAgBI,aACpCC,WAAY3M,EAAMsM,gBAAgBK,WAClCC,SAAU5M,EAAMsM,gBAAgBM,SAChCC,YAAa7M,EAAMsM,gBAAgBO,cAXHhL,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAE3BS,EAF2BH,EAAA,GAclC,OAdkCA,EAAA,GAehC3B,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,mBACbtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAML,EAAM8M,oBAEzC5M,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SAASxC,EAAMsM,gBAAgB5K,OAGhDxB,EAAAC,EAAAC,cAAA,QAAMoC,UAAWgC,EAAQ0H,UAAWa,YAAU,EAACC,aAAa,OAC1D9M,EAAAC,EAAAC,cAACgH,EAAA,MAAD,CACEC,UAAU,YACVC,SAAUtH,EAAMsM,gBAAgBG,aAChC1L,MAAM,OACNC,OAAO,SAETd,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEsK,UAAQ,EACRzM,GAAG,gBACHoC,MAAM,OACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAON,KACdoB,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,gBACHoC,MAAM,aACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAO0K,aACdO,UAAQ,EACRnK,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,gBACHoC,MAAM,MACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAO2K,WACdM,UAAQ,EACRnK,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,gBACHoC,MAAM,WACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAO4K,SACdK,UAAQ,EACRnK,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,gBACHoC,MAAM,gBACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAO6K,YACdI,UAAQ,EACRnK,OAAO,WAET5C,EAAAC,EAAAC,cAAC8M,GAAD,CAAWlN,MAAOA,EAAOsL,KAAMtL,EAAMsM,gCC9EvC/I,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJC,UAAW,QAEbC,MAAO,CACL5C,OAAQ,EACR6C,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN2B,gBAAiBiH,IAAI,SAIzB,SAAStK,GAASuK,EAAM1I,GACtB0I,EAAKxI,cAAcF,GACnB,IAAMG,EAAWvE,SAASC,eAAe6M,EAAK5M,IAC1CqE,EACEH,EACFG,EAASC,OAETD,EAASE,QAGXC,QAAQC,IAAI,aA6GDnF,YAnGf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MACZwE,EAAUjB,KAYhB,SAAS8J,EAATC,GAAoC,IAARF,EAAQE,EAARF,KAC1B,GAAIA,EAAKG,OAAQ,CACf,IAAMzG,EAAQ,CAAEY,MAAO,SAQvB,MAP2B,WAAvB0F,EAAKI,KAAKvH,WACZa,EAAMY,MAAQ,UAEW,SAAvB0F,EAAKI,KAAKvH,WACZa,EAAMY,MAAQ,OAGTxH,EAAAC,EAAAC,cAACqN,EAAAtN,EAAD,CAAU2G,MAAOA,IAE1B,OAAIsG,EAAKM,WACAxN,EAAAC,EAAAC,cAACuN,EAAAxN,EAAD,MAGFD,EAAAC,EAAAC,cAACwN,GAAAzN,EAAD,MAGT,OA7BA+E,oBAAU,WACRC,WAAW,WACTnF,EAAM6N,MACHxI,OAAO,SAAAC,GAAC,OAAIA,EAAEZ,YACda,IAAI,SAAAsI,GACHhL,GAASgL,GAAO,MAEnB,KAuBH3N,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,kBACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,aACbtC,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACE2N,OAAQ,CAAEC,IAAK,IACflL,SAAU,SAAA6B,GAAS,OA3C7B,SAAyB1E,EAAO0E,GAC1BA,GACF1E,EAAMgO,UAyCuBC,CAAgBjO,EAAO0E,KAE9CxE,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,eAAf,0BAGAxC,EAAMsM,iBACNtM,EAAMkO,cAAc3I,IAAI,SAAC6H,EAAM7G,GAAP,OACtBrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,IAAK2G,EAAK9F,SACVzE,SAAU,SAAA6B,GAAS,OAAI7B,GAASuK,EAAM1I,KAEtCxE,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMD,IAAK2G,EAAK9F,SAAU9E,UAAWgC,EAAQd,MAC3CxD,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEpC,OACErE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAQC,aAAW,SAASrE,UAAWgC,EAAQD,QAC7CrE,EAAAC,EAAAC,cAACgH,EAAA,MAAD,CACEC,UAAU,YACVC,SAAU8F,EAAK9B,KAAKmB,aACpB1L,MAAM,OACNC,OAAO,UAIbmN,OAAQjO,EAAAC,EAAAC,cAACiN,EAAD,CAAkBD,KAAMA,IAChCrG,MACE7G,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAML,EAAM8M,cAAcM,EAAK9B,QAC1C8B,EAAK9B,KAAK5J,MAGf0M,UAAWhB,EAAKI,KAAK9L,OAEvBxB,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACE9G,EAAAC,EAAAC,cAAC8G,EAAD,CAAclH,MAAOA,EAAOC,SAAUmN,IACrCA,EAAKiB,YACJnO,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YACbtC,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACEpE,QAAQ,WACRyD,MAAO,CAAEY,MAAO,OAAQ4G,SAAU,SAFpC,wBAMApO,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYpE,QAAQ,aACjB+J,EAAKmB,WAMdrO,EAAAC,EAAAC,cAACoO,GAAA,EAAD,KACEtO,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYpE,QAAQ,WAAWyD,MAAO,CAAEY,MAAO,SAC5C0F,EAAKqB,kBAMjBzO,EAAMsM,iBAAmBpM,EAAAC,EAAAC,cAACsO,GAAD,CAAiB1O,MAAOA,QAM3CF,8HCzJTyD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCyI,UAAW,CACTlB,QAAS,OACTC,SAAU,QAEZkB,UAAW,CACTnI,WAAYP,EAAM8G,QAAQ,GAC1B6B,YAAa3I,EAAM8G,QAAQ,GAC3BxJ,MAAO,KAETmI,MAAO,CACLvF,UAAW,IAEb0I,KAAM,CACJtL,MAAO,QAqFIjB,mBAjFf,SAAAC,GAAsC,IAAnBC,EAAmBD,EAAnBC,MAAO2O,EAAY5O,EAAZ4O,SAClBnK,EAAUjB,KADoBhC,EAERC,IAAMC,SAAS,CACzCjB,GAAIR,EAAM4O,SAASpO,GACnBkB,KAAM1B,EAAM4O,SAASlN,KACrB6K,SAAUvM,EAAM4O,SAASrC,SACzBC,SAAUxM,EAAM4O,SAASpC,SACzBC,aAAczM,EAAM4O,SAASnC,aAC7BC,aAAc1M,EAAM4O,SAASlC,aAC7BC,WAAY3M,EAAM4O,SAASjC,WAC3BC,SAAU5M,EAAM4O,SAAShC,SACzBC,YAAa7M,EAAM4O,SAAS/B,cAXMhL,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAE7BS,EAF6BH,EAAA,GAErBI,EAFqBJ,EAAA,GAc9BK,EAAe,SAAAR,GAAI,OAAI,SAAAS,GAC3BF,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAANF,OAAAO,EAAA,EAAAP,CAAA,GAAeJ,EAAOS,EAAMG,OAAOC,WAkB9C,OACErC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,WACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,cACbtC,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOmB,UAAU,OAAOK,SAAU,SAAAE,GAAC,OAlBrD,SAAqBA,EAAG0B,GACtB,IAAIzB,EAAOD,EAAET,OAAOW,MAAM,GAE1BjD,EAAM6O,YAAY7L,EAAM,SAAAG,MAe+BD,CAAYH,MAC/D7C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YACbtC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,YACdnD,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,SAIND,EAAAC,EAAAC,cAAA,QAAMoC,UAAWgC,EAAQ0H,UAAWa,YAAU,EAACC,aAAa,OAC1D9M,EAAAC,EAAAC,cAACgH,EAAA,MAAD,CACEC,UAAU,YACVC,SAAUtH,EAAM4O,SAASnC,aACzB1L,MAAM,OACNC,OAAO,SAETd,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,OACHoC,MAAM,OACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAON,KACdmB,SAAUX,EAAa,QACvBY,OAAO,WAET5C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEnC,GAAG,WACHa,KAAK,WACLuB,MAAM,cACNJ,UAAWgC,EAAQ2H,UACnB5J,MAAOP,EAAOwK,SACd3J,SAAUX,EAAa,YACvBY,OAAO,YAGX5C,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QAvC/B,WACEL,EAAM+O,WAAW/M,KAsCf,SAGA9B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QA/C/B,WACE2O,OAAOC,aAAaC,WAAW,YAC/BP,MA6CE,yBCrFApL,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuG,KAAM,CACJC,SAAU,EACVlJ,MAAO,OACPmF,gBAAiB,cA8CNpG,YA1Cf,SAAAC,GAA8B,IAATC,EAASD,EAATC,MACbwE,EAAUjB,KAChB,OACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,OAAK0G,MAAO,CAAEnD,UAAW,OAAQkF,UAAW,WAC1C3I,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYpE,QAAQ,KAAKyH,cAAY,GAArC,yBAIA5K,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYpE,QAAQ,WAAWyD,MAAO,CAAEY,MAAO,QAAUoD,cAAY,GAArE,qBAIF5K,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,aACbtC,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAM5G,UAAWgC,EAAQwF,MACtBhK,EAAMoP,cAAc7J,IAAI,SAAA+F,GAAI,OAC3BpL,EAAAC,EAAAC,cAAA,OAAKqG,IAAK6E,EAAK9K,IACbN,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAU5C,IAAK6E,EAAK9K,IAClBN,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACgH,EAAA,MAAD,CACEC,UAAU,YACVC,SAAUgE,EAAKmB,aACf1L,MAAM,OACNC,OAAO,WAIbd,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAAS4B,EAAK5J,KACdyH,UAAS,aAAAkG,OAAY/D,EAAKgE,cAG9BpP,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAASlM,QAAQ,QAAQsE,UAAU,eASlC7H,kCCVAA,mBAvCf,SAAAC,GAAyB,IAATC,EAASD,EAATC,MAKd,SAASwP,EAAWC,GAClBzP,EAAM0P,cAAcD,GACpBzP,EAAM2P,cAAc,SAGtB,OACEzP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAAOpN,UAAU,QACftC,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYpE,QAAQ,KAAKwM,WAAS,GAChC3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,MADF,YAIAD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QAAS,kBAAML,EAAM2P,cAAc,YAA9D,UAIAzP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QAAS,kBAAMmP,EAAW,KAArD,qBAIAtP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QAAS,kBAAMmP,EAAW,KAArD,qBAIAtP,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYoI,WAAS,GAArB,2DAIA3P,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,WAAWhD,QA/B/B,WACEC,SAASyP,SAASC,WA8BhB,oDC/BAzM,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuG,KAAM,CACJrG,UAAW,QAEb2G,MAAO,CACLvJ,MAAO,OACPmF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,UA6C/BxK,mBAzCf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MACZwE,EAAUjB,KAGhB,OAFgBvD,EAAMiQ,SAepB/P,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAM5G,UAAWgC,EAAQ8F,OACtBtK,EAAMkQ,QAAQ3K,IAAI,SAAA4K,GAAM,OACvBjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAUhJ,QAAS,kBAAM8P,EAAOC,mBAC9BlQ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,QAGJD,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAASyG,EAAOA,OAChBhH,UAAWgH,EAAOE,cAEpBnQ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACGwG,EAAOG,WAAapQ,EAAAC,EAAAC,cAACmQ,GAAApQ,EAAD,MAA+B,KAGxDD,EAAAC,EAAAC,cAACmP,GAAA,EAAD,UA5BJrP,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAML,EAAMwQ,kBAHvB,uBChBAjN,GAAYC,YAAW,SAACC,GAAD,MAAY,CACvCuG,KAAM,CACJrG,UAAW,QAEb2G,MAAO,CACLvJ,MAAO,OACPmF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,UA4D/BxK,mBAxDf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MACZwE,EAAUjB,KAChB,OACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,qBAEEjP,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAM5G,UAAWgC,EAAQ8F,OACtBtK,EAAMyQ,6BAA6BlL,IAAI,SAACmL,GAAD,OACtCxQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACGuB,EAAMhP,KACNgP,EAAMR,QAAQ3K,IAAI,SAAC4K,GAAD,OACjBjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,QAGJD,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAASyG,EAAOA,OAChBhH,UAAWgH,EAAOQ,UAGtBzQ,EAAAC,EAAAC,cAACmP,GAAA,EAAD,aAnBZ,gBA0BErP,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAM5G,UAAWgC,EAAQ8F,OACtBtK,EAAM4Q,+BAA+BrL,IAAI,SAACmL,GAAD,OACxCxQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACGuB,EAAMhP,KACNgP,EAAMR,QAAQ3K,IAAI,SAAC4K,GAAD,OACjBjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,QAGJD,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAASyG,EAAOA,OAChBhH,UAAWgH,EAAOQ,UAGtBzQ,EAAAC,EAAAC,cAACmP,GAAA,EAAD,gBChDVhM,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuG,KAAM,CACJrG,UAAW,QAEb2G,MAAO,CACLvJ,MAAO,OACPmF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,UAqD/BxK,mBAjDf,SAAAC,GAA8B,IAATC,EAASD,EAATC,MACbwE,EAAUjB,KADYhC,EAEJC,IAAMC,SAAS,GAFXI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAErB8K,EAFqBxK,EAAA,GAEfgP,EAFehP,EAAA,GAQ5B,OACE3B,EAAAC,EAAAC,cAAA,OAAKoC,UAAWgC,EAAQwF,MACtB9J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAML,EAAM8Q,oBAHvB,KAOC9Q,EAAM+Q,gBAAgBC,KARzB,IAQgChR,EAAM+Q,gBAAgBE,WARtD,MAQqE5E,EACnEnM,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAML,EAAMkR,oBAHvB,MAQFhR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,KACEjR,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAMwQ,EAAQ,KAHzB,cAOA3Q,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAMwQ,EAAQ,KAHzB,qBAQQ,IAATxE,GAAcnM,EAAAC,EAAAC,cAACgR,GAAD,CAAU5M,QAASA,EAASxE,MAAOA,IACxC,IAATqM,GAAcnM,EAAAC,EAAAC,cAACiR,GAAD,CAAU7M,QAASA,EAASxE,MAAOA,OC/CzCF,mBAzBf,SAAAC,GAA0C,IAAjBC,EAAiBD,EAAjBC,MAAOsB,EAAUvB,EAAVuB,OACxB6O,EAASnQ,EAAMsR,eAErB,SAASC,EAAeZ,GACtBR,EAAOqB,UAAUb,GACjB3Q,EAAMyR,aAAatB,GAGrB,OACEjQ,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,WACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAkBE,QAAS,kBAAMiB,QAEnCpB,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SAAS2N,EAAOA,SAGjCjQ,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMkR,EAAe,OAAnC,aACArR,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMkR,EAAe,OAAnC,aACArR,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMkR,EAAe,OAAnC,aACArR,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMkR,EAAe,OAAnC,gBCLAhO,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuG,KAAM,CACJrG,UAAW,QAEb2G,MAAO,CACLvJ,MAAO,OACPmF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,UAqD/BxK,mBAjDf,SAAAC,GAA4B,IAATC,EAASD,EAATC,MACXwE,EAAUjB,KAEhB,SAASmO,EAAWvB,GAClBnQ,EAAM2R,aAAaxB,GAGrB,OACEjQ,EAAAC,EAAAC,cAAA,OAAKoC,UAAWgC,EAAQwF,MACtB9J,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,KACGnR,EAAM4R,QAAQrM,IAAI,SAAAoL,GAAM,OACvBzQ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEqD,IAAKkK,EAAOnQ,GACZ6C,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAMsQ,EAAOkB,iBAErBlB,EAAOjP,KANV,MAMmBiP,EAAOmB,SAAW,IAAM,OAI/C5R,EAAAC,EAAAC,cAAA,iBACEJ,EAAMsR,gBACNpR,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAM5G,UAAWgC,EAAQ8F,OACtBtK,EAAM+R,gBAAgBxM,IAAI,SAAA4K,GAAM,OAC/BjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAU5C,IAAK0J,EAAO3P,GAAIH,QAAS,kBAAMqR,EAAWvB,KAClDjQ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,QAGJD,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,QAASyG,EAAOA,OAChBhH,UAAWgH,EAAOE,eAGtBnQ,EAAAC,EAAAC,cAACmP,GAAA,EAAD,UAKPvP,EAAMsR,gBACLpR,EAAAC,EAAAC,cAAC4R,GAAD,CAAehS,MAAOA,EAAOsB,OAAQ,kBAAMoQ,GAAW,2DCrExDO,iNACJC,qBAAuB,SAACC,EAAKC,GAE3B,OADeC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,KAG/DK,cAAgB,WACd,IACMJ,EAA8B,GAAxBK,EAAKC,MAAMC,WACjBJ,EAASF,KAAKC,MAAMD,KAAKE,UAAYH,EAF/B,EAE2C,IAF3C,EAIZ,OAAIG,GAAU,GACL,SAGLA,GAAU,GACL,MAGLA,GAAU,GACL,OAGLA,GAAU,GACL,aADT,KAKFK,MAAQ,CACNC,OAAQJ,EAAKP,qBAAqB,EAAG,GACrCxK,MAAO+K,EAAKD,gBACZM,MAAO,OAeTC,KAAO,WACLN,EAAKO,SAAS,CACZH,OAAQJ,EAAKP,qBAAqB,EAAG,GACrCxK,MAAO+K,EAAKD,wGAfdS,KAAKC,SAAWC,YAAYF,KAAKF,KAAME,KAAKL,MAAME,kDAEjCM,EAAWC,GACxBA,EAAUP,QAAUG,KAAKL,MAAME,QACjCQ,cAAcL,KAAKC,UACnBD,KAAKC,SAAWC,YAAYF,KAAKF,KAAME,KAAKL,MAAME,uDAIpDQ,cAAcL,KAAKC,2CAUZ,IAAAK,EAAAN,KACDvL,EAAQuL,KAAKP,MAAMC,WACrB,CAAEjL,MAAO,SACT,CAAEA,MAAO,UACb,OACExH,EAAAC,EAAAC,cAAA,OACE0G,MAAO,CAAEZ,gBAAiB+M,KAAKL,MAAMlL,OACrClF,UAAU,SACVnC,QAAS,kBAAMkT,EAAKb,MAAM1S,MAAM2P,cAAc,UAE9CzP,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,eAAesE,MAAOY,GAClCuL,KAAKL,MAAMC,gBA/DDW,aAsEN1T,eAASmS,ICnDlB1O,GAAYC,YAAW,SAACC,GAAD,MAAY,CACvCuG,KAAM,CACJrG,UAAW,QAEb2G,MAAO,CACLvJ,MAAO,OACPmF,gBAAiBzC,EAAM2G,QAAQC,WAAWC,UAqD/BxK,mBAjDf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MACZwE,EAAUjB,KADWhC,EAEHC,IAAMC,SAAS,GAFZI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEpB8K,EAFoBxK,EAAA,GAEdgP,EAFchP,EAAA,GAQ3B,OACE3B,EAAAC,EAAAC,cAAA,OAAKoC,UAAWgC,EAAQwF,MACtB9J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAML,EAAM8Q,oBAHvB,KAOC9Q,EAAM+Q,gBAAgBC,KARzB,IAQgChR,EAAM+Q,gBAAgBE,WARtD,MAQqE5E,EACnEnM,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAML,EAAMkR,oBAHvB,MAQFhR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,KACEjR,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAMwQ,EAAQ,KAHzB,cAOA3Q,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRqE,MAAM,YACNrH,QAAS,kBAAMwQ,EAAQ,KAHzB,qBAQQ,IAATxE,GAAcnM,EAAAC,EAAAC,cAACgR,GAAD,CAAU5M,QAASA,EAASxE,MAAOA,IACxC,IAATqM,GAAcnM,EAAAC,EAAAC,cAACiR,GAAD,CAAU7M,QAASA,EAASxE,MAAOA,OCjDxD,SAASyT,GAAaf,GACpB,OACExS,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYE,UAAU,MAAMb,MAAO,CAAE8B,QAAS,KAC3C8J,EAAMgB,UASb,IAAMnQ,GAAYC,YAAW,SAACC,GAAD,MAAY,CACvCuG,KAAM,CACJC,SAAU,EACVlJ,MAAO,OACPmF,gBAAiB,cA0ENpG,oBAtEf,SAAAC,GAAmC,IAAnBC,EAAmBD,EAAnBC,MAAO2O,EAAY5O,EAAZ4O,SACfnK,EAAUjB,KADiByE,EAEDvG,mBAAS,GAFRwG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAE1B2L,EAF0B1L,EAAA,GAEhB2L,EAFgB3L,EAAA,GAQjC,MAAyB,WAArBjI,EAAM6T,WACD3T,EAAAC,EAAAC,cAAC0T,GAAD,CAAQ9T,MAAOA,IAGC,UAArBA,EAAM6T,WACD3T,EAAAC,EAAAC,cAAC0T,GAAD,CAAQ9T,MAAOA,EAAO2S,WAAY3S,EAAM2S,aAI/CzS,EAAAC,EAAAC,cAAA,OAAKoC,UAAWgC,EAAQwF,MACtB9J,EAAAC,EAAAC,cAAC2T,GAAA,EAAD,CAAQnH,SAAS,QAAQlF,MAAM,WAC7BxH,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,CACEzR,MAAOoR,EACP9Q,SAjBR,SAAsBV,EAAO8R,GAC3BL,EAAYK,IAiBN5Q,QAAQ,aACR6Q,cAAc,MACdC,eAAe,UACfC,UAAU,WAEVlU,EAAAC,EAAAC,cAACiU,GAAA,EAAD,CAAKhJ,KAAMnL,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,QACXD,EAAAC,EAAAC,cAACiU,GAAA,EAAD,CAAKhJ,KAAMnL,EAAAC,EAAAC,cAACmU,GAAApU,EAAD,QACXD,EAAAC,EAAAC,cAACiU,GAAA,EAAD,CAAKhJ,KAAMnL,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,QAGXD,EAAAC,EAAAC,cAACiU,GAAA,EAAD,CAAKhJ,KAAMnL,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,UAID,IAAbwT,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAACqU,EAAD,CAAQzU,MAAOA,KAGL,IAAb2T,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAACsU,GAAD,CAAM1U,MAAOA,KAGH,IAAb2T,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAACuU,GAAD,CAAS3U,MAAOA,EAAO2O,SAAUA,KAGvB,IAAbgF,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAACwU,GAAD,CAAU5U,MAAOA,KAGP,IAAb2T,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAACyU,GAAD,CAAW7U,MAAOA,KAGR,IAAb2T,GACCzT,EAAAC,EAAAC,cAACqT,GAAD,KACEvT,EAAAC,EAAAC,cAAC0U,GAAD,CAAS9U,MAAOA,QC1GX,SAAS+U,GAAThV,GAAmC,IAAlBC,EAAkBD,EAAlBC,MAAOgV,EAAWjV,EAAXiV,QAAWhN,EAChBvG,mBAAS,IADOwG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GACzCuE,EADyCtE,EAAA,GAC/BgN,EAD+BhN,EAAA,GAAAiN,EAEhBzT,mBAAS,IAFO0T,EAAArT,OAAAC,EAAA,EAAAD,CAAAoT,EAAA,GAEzC1I,EAFyC2I,EAAA,GAE/BC,EAF+BD,EAAA,GAAAE,EAOhD,SAAyB5O,EAAK6O,GAAc,IAAAC,EAGJ9T,mBAAS,WAC7C,IAEE,IAAM2L,EAAO4B,OAAOC,aAAauG,QAAQ/O,GAEzC,OAAO2G,EAAOqI,KAAKC,MAAMtI,GAAQkI,EACjC,MAAOK,GAGP,OADA3Q,QAAQC,IAAI0Q,GACLL,KAZ+BM,EAAA9T,OAAAC,EAAA,EAAAD,CAAAyT,EAAA,GAGnCM,EAHmCD,EAAA,GAGtBE,EAHsBF,EAAA,GAiC1C,MAAO,CAACC,EAfS,SAAAtT,GACf,IAEE,IAAMwT,EACJxT,aAAiByT,SAAWzT,EAAMsT,GAAetT,EAEnDuT,EAAeC,GAEf/G,OAAOC,aAAagH,QAAQxP,EAAKgP,KAAKS,UAAUH,IAChD,MAAOJ,GAEP3Q,QAAQC,IAAI0Q,MAjCcQ,CAAgB,WAAY,CAC1D5J,cAAU6J,IAJoCC,EAAAvU,OAAAC,EAAA,EAAAD,CAAAuT,EAAA,GAG/BiB,GAH+BD,EAAA,GAAAA,EAAA,IAsDhD,OACEnW,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,SACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YAAYrB,IAAI,gBAAgBqI,IAAI,iBAEnDtJ,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,qBACbtC,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAYoI,WAAS,EAACxM,QAAQ,MAA9B,mBAGAnD,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,mBACbtC,EAAAC,EAAAC,cAAA,SACEmW,YAAY,kBACZ/T,UAAU,cACVD,MAAOgK,EACP1J,SAAU,SAAAE,GAAC,OAAIkS,EAAYlS,EAAET,OAAOC,WAGxCrC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,kBACbtC,EAAAC,EAAAC,cAAA,SACEmW,YAAY,cACZ/T,UAAU,cACVnB,KAAK,WACLkB,MAAOiK,EACP3J,SAAU,SAAAE,GAAC,OAAIqS,EAAYrS,EAAET,OAAOC,WAGxCrC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,YAAYhD,QAAS,SAAA0C,GAAC,OApC5C,SAAiBA,GACfA,EAAEyT,iBACExW,EAAMyW,MAAMlK,EAASmK,cAAelK,IAEtC8J,EAAYtW,EAAM4O,SAASpO,IAC3BwU,KAEA2B,MAAM,mCA6BsCtW,CAAQ0C,KAAlD,oDCjFF6T,GAAa,CACjBC,KAAM,UACNC,OAAQ,SACRC,KAAM,WA+FOC,GA5FDC,KACXC,MAAM,QAAS,CACd1W,GAAIyW,KAAME,OACV1S,MAAOwS,KAAMG,QACbxV,QAASqV,KAAMI,UAAUJ,KAAME,QAC/BlO,aAAcgO,KAAMI,UAAUJ,KAAME,QACpCxV,YAAasV,KAAMI,UAAUJ,KAAME,QACnCzV,KAAMuV,KAAME,OACZlR,SAAUgR,KAAME,OAChB7P,SAAU2P,KAAMI,UAAUJ,KAAME,QAChCG,OAAQL,KAAMG,QACdG,WAAYN,KAAMI,UAAUJ,KAAME,QAClClQ,SAAUgQ,KAAMI,UAAUJ,KAAME,QAChCK,WAAYP,KAAMI,UAAUJ,KAAME,QAClCpO,WAAYkO,KAAMI,UAAUJ,KAAMG,SAClCpO,WAAYiO,KAAMI,UAAUJ,KAAMG,SAClCzS,QAASsS,KAAMI,UAAUJ,KAAME,UAhBrB,SAkBF,SAAAM,GAAI,MAAK,CACjB/S,WAAW,KAEZgT,QAAQ,SAAAD,GAAI,MAAK,CAChBE,YADgB,SACJC,GACVH,EAAKnQ,SAAWsQ,GAElBC,QAJgB,SAIRC,GACNL,EAAK/V,KAAOoW,GAEdlT,cAPgB,SAOFF,GACZ+S,EAAK/S,UAAYA,MAGpBqT,MAAM,SAAAN,GAAI,MAAK,CACdtW,UACE,mCAAAkO,OAAoCoI,EAAKF,WAAzC,WAAAlI,OAA6DoI,EAAKxQ,SAAlE,WAEFO,kBACE,OAAKiQ,EAAK1O,WAGN0O,EAAK1O,aAAe0O,EAAKzO,WAC3B,kBAAAqG,OAAyBoI,EAAK1O,YAEhC,kBAAAsG,OAAyBoI,EAAK1O,WAA9B,OAAAsG,OAA8CoI,EAAKzO,YAL1C,QAOX7B,oBACE,QAAOsQ,EAAKF,YAEdnW,kBACE,mCAAAiO,OAAoCoI,EAAKF,WAAzC,KAAAlI,OAAuDoI,EAAKnQ,SAA5D,KAAA+H,OAAwEoI,EAAKxQ,SAA7E,WAEF/F,oBACE,mCAAAmO,OAAoCoI,EAAKD,WAAzC,0BAEFQ,mBACE,OAAOpB,GAAWa,EAAKxR,WAEzBmC,aAAa,IAAAqK,EAAAQ,KAEX,OADmBgF,aAAQR,GACTS,YAAY7S,OAAO,SAAAC,GAAC,OAAIA,EAAEb,QAAUgO,EAAKhO,SAE7D8I,aACE,IAAM4K,EAAaF,aAAQR,GAC3B,OAAOU,EAAWtK,MAAMuK,KACtB,SAAA9S,GAAC,OACCA,EAAEgG,KAAK9K,KAAO2X,EAAWvJ,SAASpO,IAClC8E,EAAEiI,QACFjI,EAAEb,QAAUgT,EAAKhT,SAGvB4T,aACE,MAAsB,SAAlBZ,EAAKxR,SACA,EAGa,WAAlBwR,EAAKxR,SACA,GAGa,SAAlBwR,EAAKxR,SACA,GAGF,GAETwI,kBACE,SAAAY,OAAUoI,EAAKO,aAAf,OAAA3I,OAAiCoI,EAAKY,OAAtC,cAEFpX,aACE,MAAO,CAAEqG,SAAUmQ,EAAKnQ,SAAW,OAAQgR,aAAc,aCvEhDC,GAxBItB,KAChBC,MAAM,aAAc,CACnB1W,GAAIyW,KAAME,OACV1S,MAAOwS,KAAMG,QACbzV,YAAasV,KAAMI,UAAUJ,KAAME,QACnCI,WAAYN,KAAMI,UAAUJ,KAAME,QAClClQ,SAAUgQ,KAAMI,UAAUJ,KAAME,QAChCK,WAAYP,KAAMI,UAAUJ,KAAME,UAEnCY,MAAM,SAAAN,GAAI,MAAK,CACdtW,UACE,mCAAAkO,OAAoCoI,EAAKF,WAAzC,WAAAlI,OAA6DoI,EAAKxQ,SAAlE,WAEFE,oBACE,OAAO,GAET/F,kBACE,mCAAAiO,OAAoCoI,EAAKF,WAAzC,KAAAlI,OAAuDoI,EAAKnQ,SAA5D,KAAA+H,OAAwEoI,EAAKxQ,SAA7E,WAEF/F,oBACE,mCAAAmO,OAAoCoI,EAAKD,WAAzC,6BCpBN,SAASgB,GAAoBC,GAC3B,OAAIA,GAAK,EACA,IAAMA,EAERA,EAGT,IAyFeC,GAzFFzB,KACVC,MAAM,OAAQ,CACb1W,GAAIyW,KAAME,OACVwB,YAAa1B,KAAM2B,KACnBrM,SAAU0K,KAAME,OAChB7P,SAAU2P,KAAME,OAChB1S,MAAOwS,KAAMG,QACbyB,OAAQ5B,KAAME,OACdI,WAAYN,KAAMI,UAAUJ,KAAME,QAClC5I,QAAS0I,KAAMI,UAAUJ,KAAME,UATtB,SAWD,SAAAM,GAAI,MAAK,CACjB/S,WAAW,KAEZgT,QAAQ,SAAAD,GAAI,MAAK,CAChB7S,cADgB,SACFF,GACZ+S,EAAK/S,UAAYA,MAGpBqT,MAAM,SAAAN,GAAI,MAAK,CACdpJ,iBACE,QAAOoJ,EAAKlJ,SAEdpH,oBACE,QAAOsQ,EAAKF,YAEdnW,kBACE,mCAAAiO,OAAoCoI,EAAKF,WAAzC,KAAAlI,OACEoI,EAAKnQ,SADP,eAIFiG,aACE,MAAuB,SAAhBkK,EAAKoB,QAEdnL,iBACE,MAAuB,aAAhB+J,EAAKoB,QAEdC,2BACE,MAAuB,uBAAhBrB,EAAKoB,QAEd7H,WACE,OACEyG,EAAKkB,YAAYI,cACjB,IACAP,GAAoBf,EAAKkB,YAAYK,WAAa,GAClD,IACAR,GAAoBf,EAAKkB,YAAYM,YAGzC3N,WAEE,OADmB2M,aAAQR,GACTyB,MAAMC,KAAK,SAAA7T,GAAC,OAAIA,EAAEiH,WAAakL,EAAKlL,YAExDiB,WAEE,OADmByK,aAAQR,GACTrS,OAAO+T,KAAK,SAAA7T,GAAC,OAAIA,EAAEb,QAAUgT,EAAKhT,SAEtD4T,aACE,OAAKZ,EAAKlK,OAIiB,SAAvBkK,EAAKjK,KAAKvH,SACL,EAGkB,WAAvBwR,EAAKjK,KAAKvH,SACL,GAGkB,SAAvBwR,EAAKjK,KAAKvH,SACL,GAGF,EAfE,GAiBXwI,kBACE,OAAIgJ,EAAKlK,OACP,GAAA8B,OAAUoI,EAAKzG,KAAf,OAAA3B,OAAyBoI,EAAKjK,KAAKwK,aAAnC,OAAA3I,OACEoI,EAAKY,OADP,aAKF,GAAAhJ,OAAUoI,EAAKzG,OAEjB/P,aACE,MAAO,CAAEqG,SAAUmQ,EAAKnQ,SAAW,OAAQgR,aAAc,aCnBhDc,GA1EFnC,KACVC,MAAM,OAAQ,CACb1W,GAAIyW,KAAME,OACV5K,SAAU0K,KAAME,OAChBzV,KAAMuV,KAAME,OACZ3K,SAAUyK,KAAME,OAChB1K,aAAcwK,KAAME,OACpBzK,aAAcuK,KAAMoC,SAASpC,KAAME,OAAQ,IAC3CxK,WAAYsK,KAAMoC,SAASpC,KAAME,OAAQ,IACzCvK,SAAUqK,KAAMoC,SAASpC,KAAME,OAAQ,IACvCtK,YAAaoK,KAAMoC,SAASpC,KAAME,OAAQ,MAE3CY,MAAM,SAAAN,GAAI,MAAK,CACdU,iBAEE,OADmBF,aAAQR,IAG7B5J,YACE,OAAO4J,EAAKU,WAAWtK,MAAMxI,OAAO,SAAAC,GAAC,OAAIA,EAAEiH,WAAakL,EAAKlL,YAE/DX,gBAIE,OAHkB6L,EAAK5J,MAAMxI,OAC3B,SAAAC,GAAC,OAAIA,EAAEiI,QAAUjI,EAAEiH,WAAakL,EAAKlL,WAEtBhH,IAAI,SAAAD,GAAC,MAAK,CACzB9E,GAAI8E,EAAE9E,GACNsL,IAAG,oDAAAuD,OAAsD/J,EAAEgC,SAAxD,QACHP,MAAOzB,EAAE5D,KACTuK,UAAW3G,EAAEkI,KAAK9L,SAGtB4N,gBACE,OAA0B,IAAtBmI,EAAK5J,MAAMxH,OACN,EAKP,EADAoR,EAAK5J,MAAMxI,OAAO,SAAAC,GAAC,OAAIA,EAAEiI,QAA8B,SAApBjI,EAAEkI,KAAKvH,WAAqBI,OAInD,GADZoR,EAAK5J,MAAMxI,OAAO,SAAAC,GAAC,OAAIA,EAAEiI,QAA8B,WAApBjI,EAAEkI,KAAKvH,WACvCI,OAGH,GADAoR,EAAK5J,MAAMxI,OAAO,SAAAC,GAAC,OAAIA,EAAEiI,QAA8B,SAApBjI,EAAEkI,KAAKvH,WAAqBI,QAKnEiT,oBACE,OAAO7B,EAAKU,WAAW/S,OAAOqS,EAAK5J,MAAMxH,YAG5CqR,QAAQ,SAAAD,GAAI,MAAK,CAChB8B,gBADgB,SACA3B,GACdH,EAAKhL,aAAemL,GAEtB7I,WAJgB,SAAAhP,GAYb,IAPD2B,EAOC3B,EAPD2B,KACA8K,EAMCzM,EANDyM,SACAC,EAKC1M,EALD0M,aACAC,EAIC3M,EAJD2M,aACAC,EAGC5M,EAHD4M,WACAC,EAEC7M,EAFD6M,SACAC,EACC9M,EADD8M,YAEA4K,EAAK/V,KAAOA,EACZ+V,EAAKjL,SAAWA,EAChBiL,EAAKhL,aAAeA,EACpBgL,EAAK/K,aAAeA,EACpB+K,EAAK9K,WAAaA,EAClB8K,EAAK7K,SAAWA,EAChB6K,EAAK5K,YAAcA,MCjEV2M,GANEvC,KAAMC,MAAM,WAAY,CACvC1W,GAAIyW,KAAME,OACVlG,WAAYgG,KAAMG,QAClBpG,KAAMiG,KAAME,SCwMCsC,GA3MAxC,KACZC,MAAM,SAAU,CACf1W,GAAIyW,KAAME,OACVhH,OAAQ8G,KAAME,OACdxG,OAAQsG,KAAME,SAEfY,MAAM,SAAAN,GAAI,MAAK,CACdiC,iBACE,iBAAArK,OAAeoI,EAAK9G,OAApB,OAAAtB,OAAgCoI,EAAKkC,cAArC,MAAAtK,OAAuDoI,EAAKmC,qBAE9DC,cACE,IAAM1B,EAAaF,aAAQR,GACrBqC,EAAO3B,EAAW4B,MAAM1U,OAC5B,SAAAC,GAAC,OACCA,EAAE6K,SAAWsH,EAAKtH,QAClB7K,EAAEgL,YACFhL,EAAE2L,aAAekH,EAAWpH,gBAAgBE,aAEhD,OAAI6I,GAGG,MAETE,cACE,IAAMH,EAAUpC,EAAKoC,QAOfI,GALUJ,EAAQxU,OAAO,SAAAC,GAAC,OAAgB,IAAZA,EAAEb,QAAa4B,OACnCwT,EAAQxU,OAAO,SAAAC,GAAC,OAAgB,IAAZA,EAAEb,QAAa4B,OAEjCwT,EAAQxT,OAES,KAE7BlG,EAAI,CAAE+Z,KAAM,IAAMD,EAAIE,KAAMF,GAUlC,OARIG,MAAMja,EAAE+Z,QACV/Z,EAAE+Z,KAAO,GAGPE,MAAMja,EAAEga,QACVha,EAAEga,KAAO,GAGJha,GAETka,eACE,MAAoB,MAAhB5C,EAAK9G,OACA,IAAM8G,EAAKuC,QAAQE,KAER,MAAhBzC,EAAK9G,OACA,GAAK8G,EAAKuC,QAAQE,KAEP,MAAhBzC,EAAK9G,OACA,GAAK8G,EAAKuC,QAAQE,KAEP,MAAhBzC,EAAK9G,OACA,GAAK8G,EAAKuC,QAAQE,KAEpB,GAETP,oBACE,MAAoB,MAAhBlC,EAAK9G,OACA,EAEW,MAAhB8G,EAAK9G,OACA,GAEW,MAAhB8G,EAAK9G,OACA,GAEW,MAAhB8G,EAAK9G,OACA,GAEF,GAETiJ,yBACE,IAAMC,EAAUpC,EAAKoC,QACf1B,EAAaF,aAAQR,GAC3B,GAAmB,eAAfA,EAAKtH,QAIT,IAAMmK,EAAUT,EAAQxU,OACtB,SAAAC,GAAC,OACa,IAAZA,EAAEb,OACFa,EAAE2L,aAAekH,EAAWpH,gBAAgBE,aAC9C5K,OAEIkU,EAAYV,EAAQxT,OAE1B,OAAKkU,EAIOD,EAAUC,EAAa,IAH1B9C,EAAKkC,eAOhBa,WAEE,IAAIC,EAAMhD,EAAKkC,cAAgBlC,EAAKmC,mBAIpC,OAHIa,EAAM,IACRA,IAAa,GAERA,GAETpK,kBACE,OACEoH,EAAKuC,QAAQE,KACb,cACAzC,EAAKuC,QAAQG,KACb,cACA1C,EAAKiD,MACL,KAGJC,gBACE,IAAMX,EAAUvC,EAAKuC,QACrB,MAAoB,MAAhBvC,EAAK9G,OACA,EAGL8G,EAAKmC,mBAAqBnC,EAAKkC,cAC1B,EAGW,MAAhBlC,EAAK9G,OACAqJ,EAAQE,KAAO,GAAK,EAAI,EAEb,MAAhBzC,EAAK9G,OACAqJ,EAAQE,KAAO,GAAK,EAAI,EAEb,MAAhBzC,EAAK9G,OACAqJ,EAAQE,KAAO,GAAK,EAAI,EAE1B,GAETQ,YACkBjD,EAAKoC,QACrB,MAAoB,MAAhBpC,EAAK9G,OACA,eAEW,MAAhB8G,EAAK9G,OACA,6BAEW,MAAhB8G,EAAK9G,OACA,4BAEW,MAAhB8G,EAAK9G,OACA,2BAEF,OAETiK,kBACE,IAAMzC,EAAaF,aAAQR,GACrBqC,EAAO3B,EAAW4B,MAAMZ,KAC5B,SAAA7T,GAAC,OACCA,EAAE2L,aAAekH,EAAWpH,gBAAgBE,YAC5C3L,EAAE6K,SAAWsH,EAAKtH,SAEtB,OAAI2J,GAGG,MAETxJ,iBACE,IAAM6H,EAAaF,aAAQR,GACrBqC,EAAO3B,EAAW4B,MAAMZ,KAC5B,SAAA7T,GAAC,OACCA,EAAE2L,aAAekH,EAAWpH,gBAAgBE,YAC5C3L,EAAE6K,SAAWsH,EAAKtH,SAEtB,QAAI2J,GACKA,EAAKxJ,eAKjBoH,QAAQ,SAAAD,GAAI,MAAK,CAChBjG,UADgB,SACNb,GACR8G,EAAK9G,OAASA,GAEhBP,eAJgB,WAKd,IAAM+H,EAAaF,aAAQR,GACrBqC,EAAO3B,EAAW4B,MAAMZ,KAC5B,SAAA7T,GAAC,OACCA,EAAE2L,aAAekH,EAAWpH,gBAAgBE,YAC5C3L,EAAE6K,SAAWsH,EAAKtH,SAElB2J,GACFA,EAAKe,mBAEL1C,EAAW2C,WAAWhB,IAEtB3B,EAAW4C,WAAW,CACpB9J,WAAYkH,EAAWpH,gBAAgBE,WACvCd,OAAQsH,EAAKtH,OACbG,YAAY,QCzLP0K,GAZA/D,KACZC,MAAM,SAAU,CACf1W,GAAIyW,KAAME,OACVzV,KAAMuV,KAAME,OACZrF,SAAUmF,KAAK,UAEhBS,QAAQ,SAAAD,GAAI,MAAK,CAChB5F,aADgB,WAEd4F,EAAK3F,UAAY2F,EAAK3F,aCUbmJ,GAlBFhE,KACVC,MAAM,OAAQ,CACb1W,GAAIyW,KAAME,OACV+D,OAAQjE,KAAMG,QACdnG,WAAYgG,KAAMG,QAClBjH,OAAQ8G,KAAME,OACd7G,WAAY2G,KAAMI,UAAUJ,KAAK,SACjCxS,MAAOwS,KAAMI,UAAUJ,KAAMG,WAE9BM,QAAQ,SAAAD,GAAI,MAAK,CAChBoD,iBADgB,WAEdpD,EAAKnH,YAAcmH,EAAKnH,YAE1B6K,SAJgB,SAIP1W,GACPgT,EAAKhT,MAAQA,MCNb2W,GAAe,CACnB,CAAE5a,GAAI,EAAG2C,KAAM,mBACf,CAAE3C,GAAI,EAAG2C,KAAM,yBACf,CAAE3C,GAAI,EAAG2C,KAAM,uBAGXkY,GAAa,CACjB,CACE7a,GAAI,EACJyF,SAAU,cACVvE,KAAM,4BACNmJ,MAAO,WAET,CACErK,GAAI,EACJyF,SAAU,gBACVvE,KAAM,wBACNmJ,MAAO,WAET,CACErK,GAAI,EACJyF,SAAU,YACVvE,KAAM,0BACNmJ,MAAO,YAOLgJ,GAAqB,OA6gBZyH,GA3gBIrE,KAChBC,MAAM,aAAc,CACnB9R,OAAQ6R,KAAMsE,MAAMvE,IACpBkB,YAAajB,KAAMsE,MAAMhD,IACzB1K,MAAOoJ,KAAMsE,MAAM7C,IACnBQ,MAAOjC,KAAMsE,MAAMnC,IACnBmB,UAAWtD,KAAMsE,MAAM/B,IACvBtJ,QAAS+G,KAAMsE,MAAM9B,IACrB7H,QAASqF,KAAMsE,MAAMP,IACrBjB,MAAO9C,KAAMsE,MAAMN,MAEpBlD,MAAM,SAACN,GAAD,MAAW,CAChBjN,qBACE,OAAO6Q,IAETnN,oBACE,OAAOuJ,EAAK5J,MAAMxI,OAChB,SAACC,GAAD,OAAOA,EAAEiI,QAAUjI,EAAEiH,WAAakL,EAAK7I,SAASrC,YAGpD6C,oBAEE,IAAIoM,EAAc/D,EAAKyB,MAAMuC,MAAM,GAMnC,OALAD,EAAYE,KAAK,SAACvb,EAAGwb,GACnB,IAAIrW,EAAInF,EAAEmP,UACNsM,EAAID,EAAErM,UACV,OAAOhK,EAAIsW,GAAK,EAAItW,EAAIsW,EAAI,EAAI,IAE3BJ,EAAYK,WAErBzV,qBACE,OAAOqR,EAAKrS,OAAOC,OACjB,SAACC,GAAD,OAAOA,EAAEW,WAAawR,EAAK/U,iBAAiBuD,YAGhD6V,gCAGE,OAFcrE,EAAKvH,QAAQ7K,OAAO,SAACC,GAAD,OAAOA,EAAEgL,cAI7CyL,oCAKE,OAJctE,EAAKvH,QAAQ7K,OACzB,SAACC,GAAD,OAAOA,EAAEgL,YAAsC,IAAxBhL,EAAEsV,YAAYnW,SAKzCuX,oCAKE,OAJcvE,EAAKvH,QAAQ7K,OACzB,SAACC,GAAD,OAAOA,EAAEgL,YAAsC,IAAxBhL,EAAEsV,YAAYnW,SAKzCwX,kCAKE,OAJcxE,EAAKyE,eAAe7W,OAChC,SAACC,GAAD,OAAOA,EAAEgL,YAAsC,OAAxBhL,EAAEsV,YAAYnW,SAMzCgM,mCACE,IAAIP,EAAUuH,EAAK1F,gBAAgB1M,OACjC,SAACC,GAAD,OAAOA,EAAEgL,YAAsC,OAAxBhL,EAAEsV,YAAYnW,QAGjC0X,EAAYjM,EAAQ7J,OAAS,EAQnC,MAAO,CANO,CAAE3E,KAAM,OAAQwO,QAASA,EAAQuL,MAAM,EAAGU,IAC1C,CACZza,KAAM,OACNwO,QAASA,EAAQuL,MAAMU,EAAWjM,EAAQ7J,WAM9CuK,qCACE,IAAMwL,EAAe3E,EAAKhH,6BAEpB4L,EAAc5E,EAAK6E,QAAQF,EAAa,GAAGlM,SAC3CqM,EAAa9E,EAAK6E,QAAQF,EAAa,GAAGlM,SAE1CsM,EAAuBH,EAAYhW,OAAS,EAC5CoW,EAAsBF,EAAWlW,OAAS,EAE1CqW,EAAmBL,EAAYZ,MAAM,EAAGe,GACxCG,EAAmBN,EAAYZ,MACnCe,EACAH,EAAY5M,OAGRmN,EAAkBL,EAAWd,MAAM,EAAGgB,GACtCI,EAAkBN,EAAWd,MACjCgB,EACAF,EAAW9M,OAYb,MAAO,CATO,CACZ/N,KAAM,OACNwO,QAASwM,EAAiBrN,OAAOwN,IAErB,CACZnb,KAAM,OACNwO,QAASyM,EAAiBtN,OAAOuN,MAMrC7K,sBACE,IAII+K,EAJUrF,EAAKvH,QAAQ7K,OAAO,SAACC,GAAD,OAChCmS,EAAK7F,QAAQuH,KAAK,SAAC4D,GAAD,OAAQA,EAAGjL,UAAYiL,EAAGvc,KAAO8E,EAAEqL,WAGhC8K,MAAM,GAM7B,OALAqB,EAASpB,KAAK,SAACvb,EAAGwb,GAChB,IAAIrW,EAAInF,EAAEwQ,OACNiL,EAAID,EAAEhL,OACV,OAAOrL,EAAIsW,GAAK,EAAItW,EAAIsW,EAAI,EAAI,IAE3BkB,EAASjB,WAElBT,mBACE,OAAOA,IAETrK,sBACE,OAAO0G,EAAK8C,UAAU9C,EAAKuF,gBAE7B/M,eAKE,QAJawH,EAAKsC,MAAMZ,KACtB,SAAC7T,GAAD,OAAOA,EAAE2L,aAAewG,EAAK1G,gBAAgBE,cAKjDiL,qBACE,IAAIe,EAAgBxF,EAAKqE,0BAA0BL,MAAM,GAezD,OAdAwB,EAAcvB,KAAK,SAACvb,EAAGwb,GACrB,IAAIrW,EAAInF,EAAEqa,KACNoB,EAAID,EAAEnB,KACV,OAAOlV,EAAIsW,GAAK,EAAItW,EAAIsW,EAAI,EAAI,IAGlCqB,EAAcpB,UAEdoB,EAAcC,QAAQ,SAAC5X,GACrBN,QAAQC,IAAR,SAAAoK,OACW/J,EAAE6K,OADb,qBAAAd,OACuC/J,EAAEkV,KADzC,gBAAAnL,OAC4D/J,EAAEqU,cAD9D,mBAAAtK,OAC0F/J,EAAEsU,uBAIvFqD,MAzJM,SA4JP,SAACxF,GAAD,MAAW,CACnB7I,SAAU,KACVuO,aAAa,EACbnc,OAAQ,KACR0B,iBAAkB,KAClB4O,eAAgB,KAChBvJ,cAAe,KACfqV,YAAa3F,EAAK2D,aAAa,GAC/BiC,IAAK,KACLxJ,WAAYA,GACZlB,WAAY,EACZ2K,cAAe,EACfN,cAAe,KAEhBtF,QAAQ,SAACD,GAAD,MAAW,CAClB3G,gBADkB,WAEhB9L,QAAQC,IAAIwS,EAAKuF,eACU,IAAvBvF,EAAKuF,eACPvF,EAAKuF,iBAGT9L,gBAPkB,WAQZuG,EAAK8C,UAAUlU,OAAS,IAAMoR,EAAKuF,eACrCvF,EAAKuF,iBAGTO,iBAZkB,SAYDpV,GACfsP,EAAKuF,cAAgB7U,GAEvBqV,kBAfkB,WAgBhB,IACMtD,EADQzC,EAAKqE,0BAA0BzV,OACxB,EACjBoX,EAAY,EAGhBhG,EAAKyE,eACF7W,OAAO,SAACC,GAAD,MAAoB,MAAbA,EAAEqL,SAChBuM,QAAQ,SAAC5X,GACRA,EAAEsV,YAAYO,SAAS,GACvBsC,IAEAhG,EAAKqD,WAAWxV,EAAEsV,eAGtBnD,EAAKyE,eACF7W,OAAO,SAACC,GAAD,MAAoB,MAAbA,EAAEqL,SAChBuM,QAAQ,SAAC5X,GACY,IAAhBA,EAAEqV,WAAmB8C,GAAavD,GACpC5U,EAAEsV,YAAYO,SAAS,GACvBsC,KAEAnY,EAAEsV,YAAYO,SAAS,GAEzB1D,EAAKqD,WAAWxV,EAAEsV,eAiDtBnD,EAAKzJ,WAEPwC,cA1FkB,WA2FhBiH,EAAKvH,QAAQgN,QAAQ,SAAC5X,GACpBmS,EAAK4F,IAAItC,WAAW,CAClB9J,WAAYwG,EAAK1G,gBAAgBE,WACjCd,OAAQ7K,EAAE6K,OACVG,YAAY,MAIhBmH,EAAKzJ,WAEP0B,cArGkB,SAqGJD,GACZgI,EAAK9E,WAAalD,GAEpBE,cAxGkB,SAwGJ+N,GACZjG,EAAK5D,WAAa6J,GAEpBvX,eA3GkB,SA2GHF,GACbwR,EAAK/U,iBAAmBuD,GAE1B0L,aA9GkB,SA8GLxB,GACXsH,EAAKnG,eAAiBnB,GAExB7H,YAjHkB,SAiHN7D,GACVgT,EAAK1P,cAAgBtD,GAEvBkZ,eApHkB,SAoHHtY,GACboS,EAAK2F,YAAc/X,GAEfuY,SAvHY,eAAAC,EAAA/b,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAC,IAAA,IAAA/E,EAAA9T,EAAA8S,EAAArK,EAAAqC,EAAAqK,EAAAR,EAAAmE,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAwHE7G,EAAK4F,IAAIkB,aAxHX,cAwHZrF,EAxHYkF,EAAAI,KAAAJ,EAAAE,KAAA,EAyHG7G,EAAK4F,IAAIoB,cAzHZ,cAyHZrZ,EAzHYgZ,EAAAI,KAAAJ,EAAAE,KAAA,EA0HQ7G,EAAK4F,IAAIqB,mBA1HjB,cA0HZxG,EA1HYkG,EAAAI,KAAAJ,EAAAE,KAAA,GA2HE7G,EAAK4F,IAAIsB,aA3HX,eA2HZ9Q,EA3HYuQ,EAAAI,KAAAJ,EAAAE,KAAA,GA4HI7G,EAAK4F,IAAIuB,eA5Hb,eA4HZ1O,EA5HYkO,EAAAI,KAAAJ,EAAAE,KAAA,GA6HM7G,EAAK4F,IAAIwB,iBA7Hf,eA6HZtE,EA7HY6D,EAAAI,KAAAJ,EAAAE,KAAA,GA8HE7G,EAAK4F,IAAIyB,aA9HX,eA8HZ/E,EA9HYqE,EAAAI,KA+HhBxZ,QAAQC,IAAIiT,GACNgG,EAAO,CACXhF,MAAO,GACPrL,MAAO,GACPzI,OAAQ,GACR8S,YAAa,GACbqC,UAAW,GACXR,MAAO,GACP7J,QAAS,GACT0B,QAAS,CACP,CAAEpR,GAAI,IAAKkB,KAAM,YAAUoQ,UAAU,GACrC,CAAEtR,GAAI,IAAKkB,KAAM,YAAUoQ,UAAU,GACrC,CAAEtR,GAAI,IAAKkB,KAAM,YAAUoQ,UAAU,GACrC,CAAEtR,GAAI,IAAKkB,KAAM,YAAUoQ,UAAU,KAIzCiI,EAAMmD,QAAQ,SAAC6B,GACbA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAKnE,MAAMkF,KAAKF,EAAIC,UAGtBzE,EAAU2C,QAAQ,SAAC6B,GACjBA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAK3D,UAAU0E,KAAKF,EAAIC,UAG1B9O,EAAQgN,QAAQ,SAAC6B,GACfA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAKhO,QAAQ+O,KAAKF,EAAIC,UAGxB5Z,EAAO8X,QAAQ,SAAC6B,GACdA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAK9Y,OAAO6Z,KAAKF,EAAIC,UAGvB9G,EAAYgF,QAAQ,SAAC6B,GACnBA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAKhG,YAAY+G,KAAKF,EAAIC,UAG5B9F,EAAMgE,QAAQ,SAAC6B,GACbA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpB0d,EAAKhF,MAAM+F,KAAKF,EAAIC,UAGtBnR,EAAMgO,UAENhO,EAAMqP,QAAQ,SAAC6B,GACbA,EAAIC,OAAOxe,GAAKue,EAAIve,GACpBue,EAAIC,OAAOrG,YAAc,IAAIC,KAAKmG,EAAIpG,aACtCuF,EAAKrQ,MAAMoR,KAAKF,EAAIC,UAnLNZ,EAAAc,OAAA,SAsLThB,GAtLS,yBAAAE,EAAAe,SAAAlB,MAAA,yBAAAJ,EAAAuB,MAAAnM,KAAAoM,YAAA,GAwLZrR,QAxLY,eAAAsR,EAAAxd,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAuB,IAAA,IAAArB,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EAyLG7G,EAAKmG,WAzLR,cAyLVM,EAzLUsB,EAAAhB,KA2LhBiB,aAAchI,EAAMyG,GA3LJsB,EAAAN,OAAA,UA6LT,GA7LS,wBAAAM,EAAAL,SAAAI,MAAA,yBAAAD,EAAAF,MAAAnM,KAAAoM,YAAA,GA+LlBK,UA/LkB,SA+LR1e,GACRyW,EAAKzW,OAASA,GAEhB2e,OAlMkB,WAmMhBlI,EAAK7I,SAAW,MAElB6H,MArMkB,SAqMZlK,EAAUC,GAKd,OAJAiL,EAAK7I,SAAW6I,EAAKyB,MAAMC,KACzB,SAAC7T,GAAD,OAAOA,EAAEiH,WAAaA,GAAYjH,EAAEkH,WAAaA,MAG/CiL,EAAK7I,UAMXgR,OAhNkB,SAgNXpf,GAGL,OAFAiX,EAAK7I,SAAW6I,EAAKyB,MAAMC,KAAK,SAAC7T,GAAD,OAAOA,EAAE9E,KAAOiV,KAAKC,MAAMlV,OAEvDiX,EAAK7I,UAMXiR,IAzNkB,SAyNdpb,GACFgT,EAAKrS,OAAO6Z,KAAKxa,IAEnBqb,QA5NkB,SA4NV1S,GACNqK,EAAK5J,MAAMoR,KAAK7R,IAElB2B,WA/NkB,SA+NPzD,GACTmM,EAAK4F,IAAItO,WAAWzD,IAEtBmG,aAlOkB,SAkOLtB,GACXsH,EAAK4F,IAAI5L,aAAatB,IAExB4K,WArOkB,SAqOPjB,GACTrC,EAAK4F,IAAItC,WAAWjB,GAEpBrC,EAAKzJ,WAEP8M,WA1OkB,SA0OPhB,GACTrC,EAAK4F,IAAIvC,WAAWhB,IAEtBiG,KAAMC,aAAIjC,GAAA5d,EAAA6d,KAAC,SAAU+B,EAAK1C,EAAK7c,GAApB,IAAA0d,EAAAlN,EAAAiP,EAAA,OAAAlC,GAAA5d,EAAAge,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAEI,OADb7G,EAAK4F,IAAMA,EADF6C,EAAA5B,KAAA,EAEU7G,EAAKmG,WAFf,OAEHM,EAFGgC,EAAA1B,KAIHxN,EAAO,IAAI4H,KACXqH,EAAmB/B,EAAK3D,UAAUpB,KACtC,SAAC7T,GAAD,OAAO,IAAIsT,KAAKtT,EAAE0L,MAAQA,IAG5ByG,EAAKuF,cAAgBkB,EAAK3D,UAAU4F,QAAQF,GAE5CR,aAAchI,EAAMyG,GAEhB1d,GACFiX,EAAKmI,OAAOpf,GAGdiX,EAAK0F,aAAc,EAjBV,yBAAA+C,EAAAf,SAAUY,MAmBrBlR,YAhQkB,SAgQN7L,EAAMod,GAChB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQvd,GACxBqd,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,QAAS9I,EAAK7I,SAASrC,UACvC8T,EAASE,OAAO,OAAQ9I,EAAK7I,SAASrC,UAEtC,IAAIiU,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,0DACA,GAGFF,EAAIG,OAAS,WAGX,IAAIC,EAAQnL,KAAKC,MAAMzC,KAAK4N,cAC5BpJ,EAAK7I,SAAS2K,gBAAgBqH,EAAME,WACpCrJ,EAAK1I,WAAW0I,EAAK7I,UAErBwR,EAAYnN,KAAK4N,eAEnBL,EAAIO,KAAKV,IAEX/D,QA3RkB,SA2RVf,GAMN,IALA,IACEyF,EACAC,EAFEC,EAAe3F,EAAMlV,OAKlB,IAAM6a,GAEXD,EAAc5O,KAAKC,MAAMD,KAAKE,SAAW2O,GAIzCF,EAAiBzF,EAHjB2F,GAAgB,GAIhB3F,EAAM2F,GAAgB3F,EAAM0F,GAC5B1F,EAAM0F,GAAeD,EAGvB,OAAOzF,GAETrY,YA9SkB,SA8SNF,EAAMhB,EAAQoe,GACxB,IAAIC,EAAW,IAAIC,SAEba,EACU,eAAdne,EAAK3B,MAAuC,cAAd2B,EAAK3B,KAErCgf,EAASE,OAAO,OAAQvd,GACxBqd,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YAE5BY,GACHd,EAASE,OAAO,gBAAiB,OAGnCF,EAASE,OAAO,QAAS9I,EAAK7I,SAASrC,UAEvC8T,EAASE,OAAO,OAAQ9I,EAAK7I,SAASrC,UAEtC,IAAM6U,EAAYD,EACd,yDACA,0DAEAX,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQU,GAAW,GAE5BZ,EAAIG,OAAS,WAEX,IAAIC,EAAQnL,KAAKC,MAAMzC,KAAK4N,cAC5B7b,QAAQC,IAAI2b,GAEZ5b,QAAQC,IAAIgO,KAAK4N,cAEjB,IAAMpc,EAAQ,CACZ/C,KAAMM,EAAON,KACbC,YAAaK,EAAOL,YACpB2F,SAAUsZ,EAAME,UAChB7a,SAAUwR,EAAK/U,iBAAiBuD,SAChCrE,QAAS,UACT0V,OAAQ,EACRrQ,SAAUka,EAAU,MAAQ,OAG9B1J,EAAK4F,IAAIgE,YAAY5c,GAErBgT,EAAKzJ,UAELoS,EAAYnN,KAAK4N,eAEnBL,EAAIO,KAAKV,qCC/iBTiB,GAAO,IAAIC,KAAS,CAAEC,OAAQ,sBAAuBF,KACzD,qBAGFC,KAASE,UAAU,CAAED,OAAQ,wBAE7B,IAAME,GAII,oBAJJA,GAMC,gDAGQC,GAAA,CACPpD,WADO,eAAAqD,EAAA9f,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEQgD,GAAK,SACrBO,OAAO,CAAEC,KAAM,cACfC,MAJQ,cAEL7D,EAFKE,EAAAI,KAAAJ,EAAAc,OAAA,SAMJhB,GANI,wBAAAE,EAAAe,SAAAlB,MAAA,yBAAA2D,EAAAxC,MAAAnM,KAAAoM,YAAA,GAQPZ,YARO,eAAAuD,EAAAlgB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAuB,IAAA,IAAArB,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EASQgD,GAAK,UACrBO,OAAO,CAAEC,KAAM,cACfC,MAXQ,cASL7D,EATKsB,EAAAhB,KAAAgB,EAAAN,OAAA,SAaJhB,GAbI,wBAAAsB,EAAAL,SAAAI,MAAA,yBAAAyC,EAAA5C,MAAAnM,KAAAoM,YAAA,GAePX,iBAfO,eAAAuD,EAAAngB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAkE,IAAA,IAAAhE,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EAgBQgD,GAAK,cACrBO,OAAO,CAAEC,KAAM,cACfC,MAlBQ,cAgBL7D,EAhBKgC,EAAA1B,KAAA0B,EAAAhB,OAAA,SAoBJhB,GApBI,wBAAAgC,EAAAf,SAAA+C,MAAA,yBAAAD,EAAA7C,MAAAnM,KAAAoM,YAAA,GAsBPR,eAtBO,eAAAsD,EAAArgB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAoE,IAAA,IAAAlE,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EAuBQgD,GAAK,aACrBO,OAAO,CAAEC,KAAM,cACfC,MAzBQ,cAuBL7D,EAvBKmE,EAAA7D,KAAA6D,EAAAnD,OAAA,SA2BJhB,GA3BI,wBAAAmE,EAAAlD,SAAAiD,MAAA,yBAAAD,EAAA/C,MAAAnM,KAAAoM,YAAA,GA6BPP,WA7BO,eAAAwD,EAAAxgB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAAuE,IAAA,IAAArE,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EA8BQgD,GAAK,QACrBO,OAAO,CAAEC,KAAM,cACfC,MAhCQ,cA8BL7D,EA9BKsE,EAAAhE,KAAAgE,EAAAtD,OAAA,SAkCJhB,GAlCI,wBAAAsE,EAAArD,SAAAoD,MAAA,yBAAAD,EAAAlD,MAAAnM,KAAAoM,YAAA,GAoCPT,aApCO,eAAA6D,EAAA3gB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAA0E,IAAA,IAAAxE,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EAqCQgD,GAAK,WACrBO,OAAO,CAAEC,KAAM,cACfC,MAvCQ,cAqCL7D,EArCKyE,EAAAnE,KAAAmE,EAAAzD,OAAA,SAyCJhB,GAzCI,wBAAAyE,EAAAxD,SAAAuD,MAAA,yBAAAD,EAAArD,MAAAnM,KAAAoM,YAAA,GA2CPV,WA3CO,eAAAiE,EAAA9gB,OAAAgc,GAAA,EAAAhc,CAAAic,GAAA5d,EAAA6d,KAAA,SAAA6E,IAAA,IAAA3E,EAAA,OAAAH,GAAA5d,EAAAge,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EA4CQgD,GAAK,SACrBO,OAAO,CAAEC,KAAM,cACfC,MA9CQ,cA4CL7D,EA5CK4E,EAAAtE,KAAAsE,EAAA5D,OAAA,SAgDJhB,GAhDI,wBAAA4E,EAAA3D,SAAA0D,MAAA,yBAAAD,EAAAxD,MAAAnM,KAAAoM,YAAA,GAkDbgC,YAlDa,SAkDD5c,GACVO,QAAQC,IAAI,gBACZ,IAAM8d,EAAI,CACRviB,GAAIiE,EAAMjE,GACVwe,OAAQva,GAEVwO,KAAK9O,OAAO,SAAU4e,IAExBhI,WA1Da,SA0DFjB,GACT9U,QAAQC,IAAI,eACZ,IAAM8d,EAAI,CACRviB,GAAIsZ,EAAKtZ,GACTwe,OAAQlF,GAGV7G,KAAK9O,OAAO,OAAQ4e,IAEtB5e,OAnEa,SAmEN6e,EAAO5V,GACZkU,GAAK0B,GAAO7e,OAAO,CAACiJ,GAAO,SAAS6V,EAAKC,GACnCD,EACFje,QAAQ2Q,MAAMsN,GAGhBC,EAAQhG,QAAQ,SAASiG,GACvBne,QAAQC,IAAIke,EAAOC,cAIzBtI,WA9Ea,SA8EFhB,GACT,IAAMuJ,EAAG,GAAAhU,OAAMqS,GAAN,UAAArS,OAAyByK,EAAKtZ,IAEvC8iB,MACE,IAAIC,QAAQF,EAAK,CACfG,OAAQ,MACRC,KAAMhO,KAAKS,UAAU,CACnB8I,OAAQ,CACN/N,WAAY6I,EAAK7I,WACjBd,OAAQ2J,EAAK3J,OACbG,WAAYwJ,EAAKxJ,WACjB7L,MAAOqV,EAAKrV,SAGhBif,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAvU,OAAYqS,IACzBmC,eAAgB,wBAbtB,MAgBQ,SAAAZ,GACNtM,MAAMsM,MAGVlU,WArGa,SAqGFzD,GACTtG,QAAQC,IAAIqG,EAAKmK,MACjB,IAAMsN,EAAI,CACRviB,GAAI8K,EAAK9K,GACTwe,OAAQ,CACNtd,KAAM4J,EAAK5J,KACX6K,SAAUjB,EAAKiB,SACfC,SAAUlB,EAAKkB,SACfC,aAAcnB,EAAKmB,aACnBC,aAAcpB,EAAKoB,aACnBC,WAAYrB,EAAKqB,WACjBC,SAAUtB,EAAKsB,SACfC,YAAavB,EAAKuB,cAItBoG,KAAK6Q,OAAO,QAASf,IAEvBtR,aAvHa,SAuHAtB,GACX,IAAM4S,EAAI,CACRviB,GAAI2P,EAAO3P,GACXwe,OAAQ,CACN7O,OAAQA,EAAOA,OACfQ,OAAQR,EAAOQ,SAGnBsC,KAAK6Q,OAAO,UAAWf,IAEzBe,OAjIa,SAiINd,EAAO5V,GACZkU,GAAK0B,GAAOc,OAAO,CAAC1W,GAAO,SAAS6V,EAAKC,GACnCD,EACFje,QAAQ2Q,MAAMsN,GAGhBC,EAAQhG,QAAQ,SAASiG,GACvBne,QAAQC,IAAIke,EAAOY,IAAI,eChJzB/jB,GAAQsb,GAAWnX,SACzBnE,GAAM+f,KAAKiE,GAAKhV,OAAOC,aAAauG,QAAQ,aAsD7B1V,oBAxCf,WAAe,IAAAkI,EAC2BvG,mBAAS,SADpCwG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GACNic,EADMhc,EAAA,GACQic,EADRjc,EAAA,GAYb,GATA/C,oBAAU,WACRlF,GAAM0f,UAAU1Q,OAAOmV,cACtB,KAOEnkB,GAAMmd,YACT,OACEjd,EAAAC,EAAAC,cAAA,OAAK0G,MAAO,CAAEnD,UAAW,QAASkF,UAAW,WAA7C,aAIJ,GAAI7I,GAAMmd,aAAend,GAAM4O,SAC7B,OAAO1O,EAAAC,EAAAC,cAACgkB,GAAD,CAAMpkB,MAAOA,GAAO2O,SAZ7B,WACE3O,GAAM2f,SACNuE,EAAgB,YAalB,IAAMzN,EACa,UAAjBwN,EACE/jB,EAAAC,EAAAC,cAAC2U,GAAD,CAAO/U,MAAOA,GAAOgV,QAASkP,IAE9BhkB,EAAAC,EAAAC,cAACgkB,GAAD,CAAMpkB,MAAOA,KAGjB,OACEE,EAAAC,EAAAC,cAAA,OAAKI,GAAG,mBACNN,EAAAC,EAAAC,cAAA,QAAMI,GAAG,aACPN,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,OACbtC,EAAAC,EAAAC,cAAA,UAAQoC,UAAU,cAAciU,QC9CtB7Q,QACW,cAA7BoJ,OAAOe,SAASsU,UAEe,UAA7BrV,OAAOe,SAASsU,UAEhBrV,OAAOe,SAASsU,SAASC,MACvB,2DCZNC,IAASC,OAAOtkB,EAAAC,EAAAC,cAACqkB,GAAD,MAASnkB,SAASC,eAAe,SD2H3C,kBAAmBmkB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0a2c7932.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  return (\r\n    <video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      loop\r\n      playsInline\r\n      preload=\"none\"\r\n      muted\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      poster={settings.dropboxPoster}\r\n    >\r\n      <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n    </video>\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction EditDrill({ store, onBack }) {\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    details: \"\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, values, text => {\r\n      onBack();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-drill\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Namn\"\r\n        value={values.name}\r\n        onChange={handleChange(\"name\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        value={values.description}\r\n        onChange={handleChange(\"description\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"details\"\r\n        label=\"details\"\r\n        value={values.details}\r\n        onChange={handleChange(\"details\")}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            Ladda upp <VideoIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(EditDrill);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [newDrill, setNewDrill] = React.useState(false);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function addDrill() {\r\n    setNewDrill(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!newDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n            <div className=\"action\">\r\n              <AddCircleIcon onClick={addDrill} />\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    level.hasSharedPath && <img src={level.src} />}\r\n\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    !level.hasSharedPath && (\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={level.publicId}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    )}\r\n\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {newDrill && (\r\n        <EditDrill store={store} onBack={() => setNewDrill(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport styles from \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\r\n\r\nfunction ViewDrill({ store, onBack }) {\r\n  const level = store.selectedDrill;\r\n  const [selectedItem, setSelectedItem] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      onChange(0);\r\n    }, 1);\r\n  });\r\n\r\n  function onChange(index) {\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    var media = store.selectedDrill.medias[index];\r\n\r\n    const videoElm = document.getElementById(media.id);\r\n\r\n    const placeHolder = document.getElementById(\"legend\");\r\n    placeHolder.innerHTML = media.description;\r\n\r\n    if (videoElm) {\r\n      console.log(\"play\");\r\n      videoElm.play();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"back\">\r\n          <div className=\"left\">\r\n            <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n          </div>\r\n          <div className=\"right\">{store.selectedCategory.name}</div>\r\n        </div>\r\n        <div className=\"drill\">\r\n          <div>{store.selectedDrill.name}</div>\r\n\r\n          <Carousel\r\n            selectedItem={selectedItem}\r\n            onChange={onChange}\r\n            showThumbs={false}\r\n            showArrows={true}\r\n            showIndicators={level.medias.length > 1}\r\n            showStatus={level.medias.length > 1}\r\n          >\r\n            {level.medias.map(media => (\r\n              <div>\r\n                {media.fileType === \"mp4\" && (\r\n                  <VideoControl store={store} settings={media} />\r\n                )}\r\n                {(media.fileType === \"jpg\" || media.fileType === \"gif\") && (\r\n                  <img\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                    src={media.src}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n          <Box padding={2}>\r\n            <Box textAlign=\"center\" id=\"legend\"></Box>\r\n            <Box fontWeight=\"fontWeightBold\">Setup</Box>\r\n            <Box className=\"drill-desc\">{level.details}</Box>\r\n            <Box fontWeight=\"fontWeightBold\">Spelare</Box>\r\n            <Box className=\"drill-desc\">\r\n              {level.minPlayers}-{level.maxPlayers}\r\n            </Box>\r\n            <Box fontWeight=\"fontWeightBold\">Organisation</Box>\r\n            <Box className=\"drill-desc\">{level.organisation}</Box>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ViewDrill);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ViewDrill from \"./ViewDrill\";\r\n\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction Game2({ store }) {\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  function selectDrill(lev) {\r\n    store.selectDrill(lev);\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          <List dense={dense}>\r\n            {store.filteredLevels.map(level => (\r\n              <ListItem key={level.id} onClick={() => selectDrill(level)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={level.name}\r\n                  secondary={secondary ? \"Secondary text\" : null}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                    <KeyboardArrowRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {store.selectedDrill && <ViewDrill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game2);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game2 from \"./Game2\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: \"10px\"\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  media: {\r\n    height: 210,\r\n    paddingTop: \"56.25%\"\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  },\r\n  text: {\r\n    margin: \"10px\"\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <div>\r\n          {store.listCategories.map((cat, i) => (\r\n            <Card\r\n              key={i}\r\n              className={classes.card}\r\n              onClick={() => goToDrill(cat)}\r\n            >\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={cat.image}\r\n                  title={cat.name}\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    className={classes.text}\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                  >\r\n                    {cat.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.text}\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  ></Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        // <List dense={dense}>\r\n        //   {store.listCategories.map(cat => (\r\n        //     <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n        //       <ListItemAvatar>\r\n        //         <Avatar>\r\n        //           <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n        //         </Avatar>\r\n        //       </ListItemAvatar>\r\n        //       <ListItemText\r\n        //         primary={cat.name}\r\n        //         secondary={secondary ? \"Secondary text\" : null}\r\n        //       />\r\n        //       <ListItemSecondaryAction>\r\n        //         <IconButton edge=\"end\" aria-label=\"Delete\">\r\n        //           <KeyboardArrowRightIcon />\r\n        //         </IconButton>\r\n        //       </ListItemSecondaryAction>\r\n        //     </ListItem>\r\n        //   ))}\r\n        // </List>\r\n      )}\r\n      {store.selectedCategory && <Game2 store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Presence({ store }) {\r\n  const classes = useStyles();\r\n  const hasStat = store.hasStats;\r\n\r\n  if (!hasStat) {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.startTraining()}\r\n      >\r\n        Starta närvaro\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className={classes.paper}>\r\n      {store.players.map(player => (\r\n        <>\r\n          <ListItem onClick={() => player.toggleTraining()}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ImageIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={player.player}\r\n              secondary={player.myRatioText}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              {player.isTraining ? <VerifiedUserOutlinedIcon /> : \"\"}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default observer(Presence);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"60px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Division({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      Nivå 2 lag\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersOnLevel2Teams.map((teams) => (\r\n          <>\r\n            {teams.name}\r\n            {teams.players.map((player) => (\r\n              <>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <ImageIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={player.player}\r\n                    secondary={player.rating}\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </>\r\n            ))}\r\n          </>\r\n        ))}\r\n      </List>\r\n      Blandat 2 lag\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersOnNoLevel2Teams.map((teams) => (\r\n          <>\r\n            {teams.name}\r\n            {teams.players.map((player) => (\r\n              <>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <ImageIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={player.player}\r\n                    secondary={player.rating}\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </>\r\n            ))}\r\n          </>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Division);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Trainings({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n\r\n  function Roll({ classes, store }) {\r\n    return <div>roll</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setPrevTraining()}\r\n        >\r\n          -\r\n        </Button>\r\n        {store.currentTraining.date} {store.currentTraining.trainingId} - {menu}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setNextTraining()}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(0)}\r\n        >\r\n          Närvaro\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(1)}\r\n        >\r\n          Dagens indelning\r\n        </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store} />}\r\n      {menu === 1 && <Division classes={classes} store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Trainings);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction PlayerProfile({ store, onBack }) {\r\n  const player = store.selectedPlayer;\r\n\r\n  function onUpdateRating(rating) {\r\n    player.setRating(rating);\r\n    store.updatePlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{player.player}</div>\r\n      </div>\r\n\r\n      <div onClick={() => onUpdateRating(\"1\")}>Nivå 1</div>\r\n      <div onClick={() => onUpdateRating(\"2\")}>Nivå 2</div>\r\n      <div onClick={() => onUpdateRating(\"3\")}>Nivå 3</div>\r\n      <div onClick={() => onUpdateRating(\"4\")}>Nivå 4</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PlayerProfile);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport PlayerProfile from \"./PlayerProfile\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Players({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function goToPlayer(player) {\r\n    store.selectPlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup>\r\n        {store.ratings.map(rating => (\r\n          <Button\r\n            key={rating.id}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => rating.toggleSelect()}\r\n          >\r\n            {rating.name} - {rating.selected ? \"x\" : \"\"}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div>-</div>\r\n      {!store.selectedPlayer && (\r\n        <List className={classes.paper}>\r\n          {store.filteredPlayers.map(player => (\r\n            <>\r\n              <ListItem key={player.id} onClick={() => goToPlayer(player)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={player.player}\r\n                  secondary={player.myRatioText}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedPlayer && (\r\n        <PlayerProfile store={store} onBack={() => goToPlayer(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Players);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 0;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random <= 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random <= 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random <= 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random <= 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"60px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Training({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n\r\n  function Roll({ classes, store }) {\r\n    return <div>roll</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setPrevTraining()}\r\n        >\r\n          -\r\n        </Button>\r\n        {store.currentTraining.date} {store.currentTraining.trainingId} - {menu}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setNextTraining()}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(0)}\r\n        >\r\n          Närvaro\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(1)}\r\n        >\r\n          Dagens indelning\r\n        </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store} />}\r\n      {menu === 1 && <Division classes={classes} store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Training);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Trainings from \"./Trainings\";\r\nimport Players from \"./Players\";\r\nimport Number from \"./Number\";\r\nimport Training from \"./Training\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<SettingsIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          {/* <Tab icon={<CalendarTodayIcon />} />\r\n          <Tab icon={<GroupIcon />} /> */}\r\n          <Tab icon={<PersonIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Training store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Trainings store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 5 && (\r\n        <TabContainer>\r\n          <Players store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    organisation: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get medias() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levelMedias.filter(x => x.level === this.level);\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst LevelMedia = types\r\n  .model(\"LevelMedia\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    description: types.maybeNull(types.string),\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string)\r\n  })\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get hasSharedPath() {\r\n      return true;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    }\r\n  }));\r\n\r\nexport default LevelMedia;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${x.publicId}.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Training = types.model(\"Training\", {\r\n  id: types.string,\r\n  trainingId: types.integer,\r\n  date: types.string\r\n});\r\n\r\nexport default Training;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.string,\r\n    player: types.string,\r\n    rating: types.string\r\n  })\r\n  .views(self => ({\r\n    get ratingText() {\r\n      return `Nivå ${self.rating} - ${self.benchmarkHard}, ${self.benchmarkHardValue}`;\r\n    },\r\n    get allStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.filter(\r\n        x =>\r\n          x.player === self.player &&\r\n          x.isTraining &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get myRatio() {\r\n      const allStat = self.allStat;\r\n\r\n      const allEasy = allStat.filter(x => x.level === 1).length;\r\n      const allHard = allStat.filter(x => x.level === 2).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      const a = { easy: 100 - al, hard: al };\r\n\r\n      if (isNaN(a.easy)) {\r\n        a.easy = 0;\r\n      }\r\n\r\n      if (isNaN(a.hard)) {\r\n        a.hard = 0;\r\n      }\r\n\r\n      return a;\r\n    },\r\n    get failRate() {\r\n      if (self.rating === \"1\") {\r\n        return 100 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 75 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 25 - self.myRatio.easy;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHard() {\r\n      if (self.rating === \"1\") {\r\n        return 0;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 25;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 75;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHardValue() {\r\n      const allStat = self.allStat;\r\n      const levelStore = getRoot(self);\r\n      if (self.player == \"Arvid Lilja\") {\r\n        const a = \"b\";\r\n      }\r\n\r\n      const allHard = allStat.filter(\r\n        x =>\r\n          x.level === 2 &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      ).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      if (!trainings) {\r\n        return self.benchmarkHard;\r\n      }\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      return al;\r\n    },\r\n    get diff() {\r\n      // Hur mycket svår tränbing de ska ha minus så mycket de har haft\r\n      let val = self.benchmarkHard - self.benchmarkHardValue;\r\n      if (val < 0) {\r\n        val = val * -1;\r\n      }\r\n      return val;\r\n    },\r\n    get myRatioText() {\r\n      return (\r\n        self.myRatio.easy +\r\n        \"% Lätt, \" +\r\n        self.myRatio.hard +\r\n        \"% Svår (\" +\r\n        self.ratio +\r\n        \")\"\r\n      );\r\n    },\r\n    get nextLevel() {\r\n      const myRatio = self.myRatio;\r\n      if (self.rating === \"1\") {\r\n        return 1;\r\n      }\r\n\r\n      if (self.benchmarkHardValue < self.benchmarkHard) {\r\n        return 2;\r\n      }\r\n\r\n      if (self.rating === \"2\") {\r\n        return myRatio.easy < 75 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return myRatio.easy < 50 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return myRatio.easy < 25 ? 1 : 2;\r\n      }\r\n      return 1;\r\n    },\r\n    get ratio() {\r\n      const allStat = self.allStat;\r\n      if (self.rating === \"1\") {\r\n        return \"100% Lätt\";\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return \"75% Lätt 1, 25% Svår\";\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return \"50% Lätt, 50 % Svår\";\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return \"25% Lätt, 75% Svår\";\r\n      }\r\n      return \"tom\";\r\n    },\r\n    get currentStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get isTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat.isTraining;\r\n      }\r\n      return false;\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setRating(rating) {\r\n      self.rating = rating;\r\n    },\r\n    toggleTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        stat.toggleIsTraining();\r\n        //stat.setLevel(self.nextLevel);\r\n        levelStore.updateStat(stat);\r\n      } else {\r\n        levelStore.insertStat({\r\n          trainingId: levelStore.currentTraining.trainingId,\r\n          player: self.player,\r\n          isTraining: true\r\n        });\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Rating = types\r\n  .model(\"Rating\", {\r\n    id: types.string,\r\n    name: types.string,\r\n    selected: types.boolean\r\n  })\r\n  .actions(self => ({\r\n    toggleSelect() {\r\n      self.selected = !self.selected;\r\n    }\r\n  }));\r\n\r\nexport default Rating;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Stat = types\r\n  .model(\"Stat\", {\r\n    id: types.string,\r\n    statId: types.integer,\r\n    trainingId: types.integer,\r\n    player: types.string,\r\n    isTraining: types.maybeNull(types.boolean),\r\n    level: types.maybeNull(types.integer)\r\n  })\r\n  .actions(self => ({\r\n    toggleIsTraining() {\r\n      self.isTraining = !self.isTraining;\r\n    },\r\n    setLevel(level) {\r\n      self.level = level;\r\n    }\r\n  }));\r\n\r\nexport default Stat;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport LevelMedia from \"./LevelMedia\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Training from \"./Training\";\r\nimport Player from \"./Player\";\r\nimport Rating from \"./Rating\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" },\r\n];\r\n\r\nconst categories = [\r\n  {\r\n    id: 0,\r\n    category: \"BALLMASTERY\",\r\n    name: \"DEL 1 - Teknik/Passningar\",\r\n    image: \"BAL.jpg\",\r\n  },\r\n  {\r\n    id: 1,\r\n    category: \"PASSINGDRILLS\",\r\n    name: \"DEL 2 - Kombinationer\",\r\n    image: \"DRI.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    category: \"POSSESION\",\r\n    name: \"DEL 3 - Possession/spel\",\r\n    image: \"THE.jpg\",\r\n  },\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    levelMedias: types.array(LevelMedia),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    trainings: types.array(Training),\r\n    players: types.array(Player),\r\n    ratings: types.array(Rating),\r\n    stats: types.array(Stat),\r\n  })\r\n  .views((self) => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        (x) => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        (x) => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get filteredPlayersInTraining() {\r\n      var players = self.players.filter((x) => x.isTraining);\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingEasy() {\r\n      var players = self.players.filter(\r\n        (x) => x.isTraining && x.currentStat.level === 1\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingHard() {\r\n      var players = self.players.filter(\r\n        (x) => x.isTraining && x.currentStat.level === 2\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingUn() {\r\n      var players = self.orderedPlayers.filter(\r\n        (x) => x.isTraining && x.currentStat.level === null\r\n      );\r\n\r\n      return players;\r\n    },\r\n\r\n    get filteredPlayersOnLevel2Teams() {\r\n      var players = self.filteredPlayers.filter(\r\n        (x) => x.isTraining && x.currentStat.level === null\r\n      );\r\n\r\n      const teamCount = players.length / 2;\r\n\r\n      const team1 = { name: \"lag1\", players: players.slice(0, teamCount) };\r\n      const team2 = {\r\n        name: \"lag2\",\r\n        players: players.slice(teamCount, players.length),\r\n      };\r\n\r\n      return [team1, team2];\r\n    },\r\n\r\n    get filteredPlayersOnNoLevel2Teams() {\r\n      const ratedPlayers = self.filteredPlayersOnLevel2Teams;\r\n\r\n      const highPlayers = self.shuffle(ratedPlayers[0].players);\r\n      const lowPlayers = self.shuffle(ratedPlayers[1].players);\r\n\r\n      const highPlayersHalfCount = highPlayers.length / 2;\r\n      const lowPlayersHalfCount = lowPlayers.length / 2;\r\n\r\n      const playersTeam1High = highPlayers.slice(0, highPlayersHalfCount);\r\n      const playersTeam2High = highPlayers.slice(\r\n        highPlayersHalfCount,\r\n        highPlayers.count\r\n      );\r\n\r\n      const playersTeam1Low = lowPlayers.slice(0, lowPlayersHalfCount);\r\n      const playersTeam2Low = lowPlayers.slice(\r\n        lowPlayersHalfCount,\r\n        lowPlayers.count\r\n      );\r\n\r\n      const team1 = {\r\n        name: \"lag1\",\r\n        players: playersTeam1High.concat(playersTeam2Low),\r\n      };\r\n      const team2 = {\r\n        name: \"lag2\",\r\n        players: playersTeam2High.concat(playersTeam1Low),\r\n      };\r\n\r\n      return [team1, team2];\r\n    },\r\n\r\n    get filteredPlayers() {\r\n      var players = self.players.filter((x) =>\r\n        self.ratings.find((xx) => xx.selected && xx.id === x.rating)\r\n      );\r\n\r\n      var byRating = players.slice(0);\r\n      byRating.sort((a, b) => {\r\n        var x = a.rating;\r\n        var y = b.rating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byRating.reverse();\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get currentTraining() {\r\n      return self.trainings[self.trainingIndex];\r\n    },\r\n    get hasStats() {\r\n      const stat = self.stats.find(\r\n        (x) => x.trainingId === self.currentTraining.trainingId\r\n      );\r\n\r\n      return stat ? true : false;\r\n    },\r\n    get orderedPlayers() {\r\n      var orderdPlayers = self.filteredPlayersInTraining.slice(0);\r\n      orderdPlayers.sort((a, b) => {\r\n        var x = a.diff;\r\n        var y = b.diff;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n\r\n      orderdPlayers.reverse();\r\n\r\n      orderdPlayers.forEach((x) => {\r\n        console.log(\r\n          `Namn: ${x.player} Nuvarande diff: ${x.diff} _ Ska ha:  ${x.benchmarkHard} svår _ har ${x.benchmarkHardValue}`\r\n        );\r\n      });\r\n\r\n      return orderdPlayers;\r\n    },\r\n  }))\r\n  .volatile((self) => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedPlayer: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1,\r\n    trainingIndex: 3,\r\n  }))\r\n  .actions((self) => ({\r\n    setPrevTraining() {\r\n      console.log(self.trainingIndex);\r\n      if (self.trainingIndex !== 0) {\r\n        self.trainingIndex--;\r\n      }\r\n    },\r\n    setNextTraining() {\r\n      if (self.trainings.length - 1 !== self.trainingIndex) {\r\n        self.trainingIndex++;\r\n      }\r\n    },\r\n    setTrainingIndex(index) {\r\n      self.trainingIndex = index;\r\n    },\r\n    updateLevelOnStat() {\r\n      const count = self.filteredPlayersInTraining.length;\r\n      const easy = count / 2;\r\n      let easyCount = 0;\r\n\r\n      //lägg på rating 1 användare\r\n      self.orderedPlayers\r\n        .filter((x) => x.rating === \"1\")\r\n        .forEach((x) => {\r\n          x.currentStat.setLevel(1);\r\n          easyCount++;\r\n\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      self.orderedPlayers\r\n        .filter((x) => x.rating !== \"1\")\r\n        .forEach((x) => {\r\n          if (x.nextLevel === 1 && easyCount <= easy) {\r\n            x.currentStat.setLevel(1);\r\n            easyCount++;\r\n          } else {\r\n            x.currentStat.setLevel(2);\r\n          }\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      //lägg på rating 2 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"2\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(1);\r\n      //       easyCount++;\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 3 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"3\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 4 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"4\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      self.refresh();\r\n    },\r\n    startTraining() {\r\n      self.players.forEach((x) => {\r\n        self.api.insertStat({\r\n          trainingId: self.currentTraining.trainingId,\r\n          player: x.player,\r\n          isTraining: false,\r\n        });\r\n      });\r\n\r\n      self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectPlayer(player) {\r\n      self.selectedPlayer = player;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.fetchUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var levelMedias = await self.api.fetchLevelMedias();\r\n      var items = await self.api.fetchItems();\r\n      var players = await self.api.fetchPlayers();\r\n      var trainings = await self.api.fetchTrainings();\r\n      var stats = await self.api.fetchStats();\r\n      console.log(levelMedias);\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        levelMedias: [],\r\n        trainings: [],\r\n        stats: [],\r\n        players: [],\r\n        ratings: [\r\n          { id: \"1\", name: \"Nivå 1\", selected: true },\r\n          { id: \"2\", name: \"Nivå 2\", selected: true },\r\n          { id: \"3\", name: \"Nivå 3\", selected: true },\r\n          { id: \"4\", name: \"Nivå 4\", selected: true },\r\n        ],\r\n      };\r\n\r\n      stats.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.stats.push(elm.fields);\r\n      });\r\n\r\n      trainings.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.trainings.push(elm.fields);\r\n      });\r\n\r\n      players.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.players.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      levelMedias.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.levelMedias.push(elm.fields);\r\n      });\r\n\r\n      users.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach((elm) => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        (x) => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find((x) => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    updatePlayer(player) {\r\n      self.api.updatePlayer(player);\r\n    },\r\n    insertStat(stat) {\r\n      self.api.insertStat(stat);\r\n\r\n      self.refresh();\r\n    },\r\n    updateStat(stat) {\r\n      self.api.updateStat(stat);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      const date = new Date();\r\n      const findNextTraining = data.trainings.find(\r\n        (x) => new Date(x.date) > date\r\n      );\r\n\r\n      self.trainingIndex = data.trainings.indexOf(findNextTraining);\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function () {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    shuffle(array) {\r\n      var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n      }\r\n\r\n      return array;\r\n    },\r\n    processFile(file, values, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"raw\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function () {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: values.name,\r\n          description: values.description,\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1,\r\n          fileType: isImage ? \"jpg\" : \"mp4\",\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n  }));\r\nexport default LevelStore;\r\n","import { all } from \"q\";\r\nimport Airtable from \"airtable\";\r\n\r\nconst base = new Airtable({ apiKey: \"keyHQ5GM7ktar7YtG\" }).base(\r\n  \"app9IO48CYcfaIY4Z\"\r\n);\r\n\r\nAirtable.configure({ apiKey: \"YOUR_SECRET_API_KEY\" });\r\n\r\nconst config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  async fetchUsers() {\r\n    const data = await base(\"Users\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevels() {\r\n    const data = await base(\"Levels\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevelMedias() {\r\n    const data = await base(\"LevelMedia\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchTrainings() {\r\n    const data = await base(\"Trainings\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchStats() {\r\n    const data = await base(\"Stat\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchPlayers() {\r\n    const data = await base(\"Players\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchItems() {\r\n    const data = await base(\"Items\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  insertLevel(level) {\r\n    console.log(\"insert level\");\r\n    const u = {\r\n      id: level.id,\r\n      fields: level\r\n    };\r\n    this.create(\"Levels\", u);\r\n  },\r\n  insertStat(stat) {\r\n    console.log(\"insert stat\");\r\n    const u = {\r\n      id: stat.id,\r\n      fields: stat\r\n    };\r\n\r\n    this.create(\"Stat\", u);\r\n  },\r\n  create(table, item) {\r\n    base(table).create([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.getId());\r\n      });\r\n    });\r\n  },\r\n  updateStat(stat) {\r\n    const url = `${config.url}/Stat/${stat.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            trainingId: stat.trainingId,\r\n            player: stat.player,\r\n            isTraining: stat.isTraining,\r\n            level: stat.level\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  updateUser(user) {\r\n    console.log(user.JSON);\r\n    const u = {\r\n      id: user.id,\r\n      fields: {\r\n        name: user.name,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        profileImage: user.profileImage,\r\n        favoriteTeam: user.favoriteTeam,\r\n        playerTeam: user.playerTeam,\r\n        position: user.position,\r\n        shirtNumber: user.shirtNumber\r\n      }\r\n    };\r\n\r\n    this.update(\"Users\", u);\r\n  },\r\n  updatePlayer(player) {\r\n    const u = {\r\n      id: player.id,\r\n      fields: {\r\n        player: player.player,\r\n        rating: player.rating\r\n      }\r\n    };\r\n    this.update(\"Players\", u);\r\n  },\r\n  update(table, item) {\r\n    base(table).update([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.get(\"name\"));\r\n      });\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}