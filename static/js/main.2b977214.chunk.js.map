{"version":3,"sources":["components/VideoControl.js","components/Game.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","level","document","getElementById","id","requestFullscreen","hasSharedPath","react_default","a","createElement","onClick","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Game","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","onChange","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","Boolean","getAvatarColor","category","backgroundColor","className","ArrowBackIos_default","selectCategory","selectedCategory","name","e","file","target","files","processFile","text","alert","Button","variant","VideoCall_default","filteredLevels","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","components_VideoControl","Typography","color","component","details","root","flexGrow","maxWidth","demo","palette","background","paper","margin","spacing","dense","secondary","List","listCategories","cat","ListItem","goToDrill","ListItemAvatar","Folder_default","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","length","tile","img","alt","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","values","selectProfile","noValidate","autoComplete","TextField","disabled","label","value","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","setValues","handleChange","event","objectSpread","defineProperty","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Home_default","Person_default","Tablet_default","location","reload","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","Help_default","components_Drills","components_Profile","components_Help","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","fileType","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","date","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","initzialize","levelFilter","api","currentSeason","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","forEach","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context3","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","insertLevel","config","base","table","view","apiKey","maxRecords","url","TrainingApi","generalRequest","conf","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_x","_getUsers","body","Content-Type","_fetchLevels","_callee3","_fetchItems","_callee4","_context4","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iWA4CeA,kBAxCf,SAAAC,GAA2CA,EAAnBC,MAAmB,IAAZC,EAAYF,EAAZE,SAC7B,SAASC,EAAaC,GACpBC,SAASC,eAAeF,EAAMG,IAAIC,oBAGpC,OAAIN,EAASO,cAETC,EAAAC,EAAAC,cAAA,SACEC,QAAS,kBAAMV,EAAaD,IAC5BK,GAAIL,EAASK,GACbO,MAAI,EACJC,aAAW,EACXC,QAAQ,OACRC,OAAK,EACLC,MAAM,OACNC,OAAO,OACPC,OAAQlB,EAASmB,eAEjBX,EAAAC,EAAAC,cAAA,UAAQU,IAAKpB,EAASqB,YAAaC,KAAK,eAM5Cd,EAAAC,EAAAC,cAACa,EAAA,MAAD,CACEZ,QAAS,kBAAMV,EAAaD,IAC5BK,GAAIL,EAASK,GACbmB,UAAU,YACVC,SAAUzB,EAASyB,SACnBT,MAAM,OACNC,OAAO,OACPL,MAAI,EACJG,OAAK,EACLF,aAAW,EACXC,QAAQ,OACRI,OAAQlB,EAASkB,4BCpBjBQ,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJC,UAAW,QAEbC,MAAO,CACLd,OAAQ,EACRe,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,MAKK,SAASC,EAAT7C,GAAyB,IAATC,EAASD,EAATC,MACvB6C,EAAUlB,IADsBmB,EAENC,IAAMC,UAAS,GAFTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAG,EAAA,GAAAA,EAAA,GAsBtC,SAASG,EAASjD,EAAOkD,GACvBlD,EAAMmD,cAAcD,GACpB,IAAME,EAAWnD,SAASC,eAAeF,EAAMG,IAC3CiD,EACEF,EACFE,EAASC,OAETD,EAASE,QAGXC,QAAQC,IAAI,aA5BhBC,oBAAU,WACRC,WAAW,WACT7D,EAAM8D,OACHC,OAAO,SAAAC,GAAC,OAAIA,EAAEX,YACdY,IAAI,SAAA9D,GACHiD,EAASjD,GAAO,MAEnB,KAXiC,IAAA+D,EAoCNnB,IAAMC,SAAS,MApCTmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAoC/BE,EApC+BD,EAAA,GAAAA,EAAA,GAqCzBE,QAAQD,GAerB,SAASE,EAAenE,GACtB,MAAuB,WAAnBA,EAAMoE,SACD,CAAEC,gBAAiB,UAGL,SAAnBrE,EAAMoE,SACD,CAAEC,gBAAiB,OAGrB,CAAEA,gBAAiB,SAG5B,OACE/D,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,QACbhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,QACbhE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAkBE,QAAS,kBAAMZ,EAAM2E,qBAEzClE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,SAASzE,EAAM4E,iBAAiBC,OAEjDpE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,iBACbhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,cACbhE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOkD,UAAU,OAAOrB,SAAU,SAAA0B,GAAC,OA5DvD,SAAqBA,GACnB,IAAIC,EAAOD,EAAEE,OAAOC,MAAM,GAE1BjF,EAAMkF,YAAYH,EAAM,SAAAI,GACtBC,MAAM,sBAwDiDF,CAAYJ,MAC/DrE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,YACbhE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,YAAhB,aACY7E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,UAKjBV,EAAMwF,eAAevB,IAAI,SAAC9D,EAAOsF,GAAR,OACxBhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEiF,IAAKxF,EAAMG,GACX8C,SAAU,SAAAC,GAAS,OAAID,EAASjD,EAAOkD,KAEvC5C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMD,IAAKxF,EAAMA,MAAOsE,UAAW5B,EAAQf,MACzCrB,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACElD,OACElC,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,aAAW,SACXC,MAAO1B,EAAenE,GACtBsE,UAAW5B,EAAQF,SAGvBsD,MAAO9F,EAAM0E,OAGfpE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,CAAcnG,MAAOA,EAAOC,SAAUE,IACtCM,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,gBACbhE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,QAAQe,MAAM,gBAAgBC,UAAU,KACzDnG,EAAMoG,8GC9HnB5E,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC2E,KAAM,CACJC,SAAU,EACVC,SAAU,KAEZC,KAAM,CACJnC,gBAAiB3C,EAAM+E,QAAQC,WAAWC,OAE5Cb,MAAO,CACLc,OAAQlF,EAAMmF,QAAQ,EAAG,EAAG,OA0CjBlH,kBAtCf,SAAAC,GAA2B,IAATC,EAASD,EAATC,MAAS8C,GACTnB,IACUoB,IAAMC,UAAS,IAFhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAElBmE,EAFkBhE,EAAA,GAAAiB,GAAAjB,EAAA,GAGSF,IAAMC,UAAS,IAHxBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAGlBgD,EAHkB/C,EAAA,GASzB,OATyBA,EAAA,GAUvB1D,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,WACXzE,EAAM4E,kBACNnE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMF,MAAOA,GACVjH,EAAMoH,eAAenD,IAAI,SAAAoD,GAAG,OAC3B5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAU3B,IAAK0B,EAAI/G,GAAIM,QAAS,kBAT1C,SAAmByG,GACjBrH,EAAM2E,eAAe0C,GAQyBE,CAAUF,KAC9C5G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAAC8G,EAAA/G,EAAD,QAGJD,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACEC,QAASN,EAAIxC,KACbqC,UAAWA,EAAY,iBAAmB,OAE5CzG,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACEnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAYC,KAAK,MAAM/B,aAAW,UAChCtF,EAAAC,EAAAC,cAACoH,EAAArH,EAAD,YAOXV,EAAM4E,kBAAoBnE,EAAAC,EAAAC,cAACiC,EAAD,CAAM5C,MAAOA,+GC1DxC2B,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC2E,KAAM,CACJwB,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACV3D,gBAAiB3C,EAAM+E,QAAQC,WAAWC,OAE5CsB,SAAU,CACRnH,MAAO,IACPC,OAAQ,KAEVmH,KAAM,CACJhC,MAAO,gCA6BIvG,kBAzBf,SAAAC,GAAoCA,EAAfC,MAAe,IAARsI,EAAQvI,EAARuI,KACpBzF,EAAUlB,IAIhB,OACElB,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAUC,WAAY,IAAK/D,UAAW5B,EAAQuF,UAC5C3H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAc9C,IAAI,YAAY+C,KAAM,EAAG1C,MAAO,CAAE9E,OAAQ,SACtDT,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAerC,UAAU,OACtBgC,EAAKM,UAAUC,OADlB,gBAIDP,EAAKM,UAAU3E,IAAI,SAAA6E,GAAI,OACtBrI,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAc9C,IAAKmD,EAAKxI,GAAIM,QAAS,cACnCH,EAAAC,EAAAC,cAAA,OAAKU,IAAKyH,EAAKC,IAAKC,IAAKF,EAAK7C,QAC9BxF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACEhD,MAAO6C,EAAK7C,MACZiD,SAAUzI,EAAAC,EAAAC,cAAA,YAAOmI,EAAKK,mBClC5BxH,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuH,UAAW,CACTpB,QAAS,OACTC,SAAU,QAEZoB,UAAW,CACTjH,WAAYP,EAAMmF,QAAQ,GAC1BsC,YAAazH,EAAMmF,QAAQ,GAC3B/F,MAAO,KAETgG,MAAO,CACLlF,UAAW,IAEbwH,KAAM,CACJtI,MAAO,QAgFInB,kBA5Ef,SAAAC,GAAoC,IAATC,EAASD,EAATC,MACnB6C,EAAUlB,IADkBmB,EAENC,IAAMC,SAAS,CACzC1C,GAAIN,EAAMwJ,gBAAgBlJ,GAC1BuE,KAAM7E,EAAMwJ,gBAAgB3E,KAC5B4E,SAAUzJ,EAAMwJ,gBAAgBC,SAChCC,SAAU1J,EAAMwJ,gBAAgBE,SAChCC,aAAc3J,EAAMwJ,gBAAgBG,aACpCC,aAAc5J,EAAMwJ,gBAAgBI,aACpCC,WAAY7J,EAAMwJ,gBAAgBK,WAClCC,SAAU9J,EAAMwJ,gBAAgBM,SAChCC,YAAa/J,EAAMwJ,gBAAgBO,cAXH9G,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE3BkH,EAF2B/G,EAAA,GAclC,OAdkCA,EAAA,GAehCxC,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,mBACbhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,QACbhE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAkBE,QAAS,kBAAMZ,EAAMiK,oBAEzCxJ,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,SAASzE,EAAMwJ,gBAAgB3E,OAGhDpE,EAAAC,EAAAC,cAAA,QAAM8D,UAAW5B,EAAQuG,UAAWc,YAAU,EAACC,aAAa,OAC1D1J,EAAAC,EAAAC,cAACa,EAAA,MAAD,CACEC,UAAU,YACVC,SAAU1B,EAAMwJ,gBAAgBG,aAChC1I,MAAM,OACNC,OAAO,SAETT,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACEC,UAAQ,EACR/J,GAAG,gBACHgK,MAAM,OACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOnF,KACdkC,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,gBACHgK,MAAM,aACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOJ,aACdS,UAAQ,EACRtD,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,gBACHgK,MAAM,MACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOH,WACdQ,UAAQ,EACRtD,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,gBACHgK,MAAM,WACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOF,SACdO,UAAQ,EACRtD,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,gBACHgK,MAAM,gBACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOD,YACdM,UAAQ,EACRtD,OAAO,WAETtG,EAAAC,EAAAC,cAAC6J,EAAD,CAAWxK,MAAOA,EAAOsI,KAAMtI,EAAMwJ,gCC9EvC7H,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJC,UAAW,QAEbC,MAAO,CACLd,OAAQ,EACRe,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN6B,gBAAiBiG,IAAI,SAIzB,SAASrH,GAASsH,EAAMrH,GACtBqH,EAAKpH,cAAcD,GACnB,IAAME,EAAWnD,SAASC,eAAeqK,EAAKpK,IAC1CiD,EACEF,EACFE,EAASC,OAETD,EAASE,QAGXC,QAAQC,IAAI,aA6GD7D,YAnGf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MACZ6C,EAAUlB,KAYhB,SAASgJ,EAATC,GAAoC,IAARF,EAAQE,EAARF,KAC1B,GAAIA,EAAKG,OAAQ,CACf,IAAM7E,EAAQ,CAAEK,MAAO,SAQvB,MAP2B,WAAvBqE,EAAKI,KAAKvG,WACZyB,EAAMK,MAAQ,UAEW,SAAvBqE,EAAKI,KAAKvG,WACZyB,EAAMK,MAAQ,OAGT5F,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAUsF,MAAOA,IAE1B,OAAI0E,EAAKM,WACAvK,EAAAC,EAAAC,cAACsK,EAAAvK,EAAD,MAGFD,EAAAC,EAAAC,cAACuK,EAAAxK,EAAD,MAGT,OA7BAkD,oBAAU,WACRC,WAAW,WACT7D,EAAMmL,MACHpH,OAAO,SAAAC,GAAC,OAAIA,EAAEX,YACdY,IAAI,SAAAkH,GACH/H,GAAS+H,GAAO,MAEnB,KAuBH1K,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,kBACbhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,aACbhE,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACE0K,OAAQ,CAAEC,IAAK,IACfjI,SAAU,SAAAC,GAAS,OA3C7B,SAAyBrD,EAAOqD,GAC1BA,GACFrD,EAAMsL,UAyCuBC,CAAgBvL,EAAOqD,KAE9C5C,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,eAAf,0BAGAzE,EAAMwJ,iBACNxJ,EAAMwL,cAAcvH,IAAI,SAACyG,EAAMjF,GAAP,OACtBhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEiF,IAAK+E,EAAKhJ,SACV0B,SAAU,SAAAC,GAAS,OAAID,GAASsH,EAAMrH,KAEtC5C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMD,IAAK+E,EAAKhJ,SAAU+C,UAAW5B,EAAQf,MAC3CrB,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACElD,OACElC,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAQC,aAAW,SAAStB,UAAW5B,EAAQF,QAC7ClC,EAAAC,EAAAC,cAACa,EAAA,MAAD,CACEC,UAAU,YACVC,SAAUgJ,EAAKpC,KAAKqB,aACpB1I,MAAM,OACNC,OAAO,UAIbuK,OAAQhL,EAAAC,EAAAC,cAACgK,EAAD,CAAkBD,KAAMA,IAChCzE,MACExF,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMZ,EAAMiK,cAAcS,EAAKpC,QAC1CoC,EAAKpC,KAAKzD,MAGf6G,UAAWhB,EAAKI,KAAKjG,OAEvBpE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,CAAcnG,MAAOA,EAAOC,SAAUyK,IACrCA,EAAKiB,YACJlL,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,YACbhE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEd,QAAQ,WACRU,MAAO,CAAEK,MAAO,OAAQuF,SAAU,SAFpC,wBAMAnL,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,aACjBoF,EAAKmB,WAMdpL,EAAAC,EAAAC,cAACmL,GAAA,EAAD,KACErL,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,WAAWU,MAAO,CAAEK,MAAO,SAC5CqE,EAAKqB,kBAMjB/L,EAAMwJ,iBAAmB/I,EAAAC,EAAAC,cAACqL,EAAD,CAAiBhM,MAAOA,QAM3CF,4HCzJT6B,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuH,UAAW,CACTpB,QAAS,OACTC,SAAU,QAEZoB,UAAW,CACTjH,WAAYP,EAAMmF,QAAQ,GAC1BsC,YAAazH,EAAMmF,QAAQ,GAC3B/F,MAAO,KAETgG,MAAO,CACLlF,UAAW,IAEbwH,KAAM,CACJtI,MAAO,QAqHInB,mBAjHf,SAAAC,GAAsC,IAAnBC,EAAmBD,EAAnBC,MAAOiM,EAAYlM,EAAZkM,SAClBpJ,EAAUlB,KADoBmB,EAERC,IAAMC,SAAS,CACzC1C,GAAIN,EAAMkM,SAAS5L,GACnBuE,KAAM7E,EAAMkM,SAASrH,KACrB4E,SAAUzJ,EAAMkM,SAASzC,SACzBC,SAAU1J,EAAMkM,SAASxC,SACzBC,aAAc3J,EAAMkM,SAASvC,aAC7BC,aAAc5J,EAAMkM,SAAStC,aAC7BC,WAAY7J,EAAMkM,SAASrC,WAC3BC,SAAU9J,EAAMkM,SAASpC,SACzBC,YAAa/J,EAAMkM,SAASnC,cAXM9G,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE7BkH,EAF6B/G,EAAA,GAErBkJ,EAFqBlJ,EAAA,GAc9BmJ,EAAe,SAAAvH,GAAI,OAAI,SAAAwH,GAC3BF,EAAUjJ,OAAAoJ,GAAA,EAAApJ,CAAA,GAAK8G,EAAN9G,OAAAqJ,GAAA,EAAArJ,CAAA,GAAe2B,EAAOwH,EAAMrH,OAAOuF,WAkB9C,OACE9J,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,WACbhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,cACbhE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOkD,UAAU,OAAOrB,SAAU,SAAA0B,GAAC,OAlBrD,SAAqBA,EAAG3E,GACtB,IAAI4E,EAAOD,EAAEE,OAAOC,MAAM,GAE1BjF,EAAMwM,YAAYzH,EAAM,SAAAI,MAe+BD,CAAYJ,MAC/DrE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,YACbhE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,YACd7E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,SAIND,EAAAC,EAAAC,cAAA,QAAM8D,UAAW5B,EAAQuG,UAAWc,YAAU,EAACC,aAAa,OAC1D1J,EAAAC,EAAAC,cAACa,EAAA,MAAD,CACEC,UAAU,YACVC,SAAU1B,EAAMkM,SAASvC,aACzB1I,MAAM,OACNC,OAAO,SAETT,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,OACHgK,MAAM,OACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOnF,KACdzB,SAAUgJ,EAAa,QACvBrF,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,WACHiB,KAAK,WACL+I,MAAM,cACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAON,SACdtG,SAAUgJ,EAAa,YACvBrF,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,eACHgK,MAAM,aACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOJ,aACdxG,SAAUgJ,EAAa,gBACvBrF,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,aACHgK,MAAM,MACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOH,WACdzG,SAAUgJ,EAAa,cACvBrF,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,WACHgK,MAAM,WACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOF,SACd1G,SAAUgJ,EAAa,YACvBrF,OAAO,WAETtG,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACE9J,GAAG,cACHgK,MAAM,gBACN7F,UAAW5B,EAAQwG,UACnBkB,MAAOP,EAAOD,YACd3G,SAAUgJ,EAAa,eACvBrF,OAAO,YAGXtG,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QAvE/B,WACEZ,EAAM0M,WAAW1C,KAsEf,SAGAvJ,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QA/E/B,WACE+L,OAAOC,aAAaC,WAAW,YAC/BZ,MA6EE,yBCrHAtK,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC2E,KAAM,CACJC,SAAU,EACVxF,MAAO,OACPuD,gBAAiB,cA8CN1E,YA1Cf,SAAAC,GAA8B,IAATC,EAASD,EAATC,MACb6C,EAAUlB,KAChB,OACElB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoM,SAAA,KACErM,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEjE,UAAW,OAAQgL,UAAW,WAC1CtM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAK0H,cAAY,GAArC,yBAIAvM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,WAAWU,MAAO,CAAEK,MAAO,QAAU2G,cAAY,GAArE,qBAIFvM,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,aACbhE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAM1C,UAAW5B,EAAQ2D,MACtBxG,EAAMiN,cAAchJ,IAAI,SAAAqE,GAAI,OAC3B7H,EAAAC,EAAAC,cAAA,OAAKgF,IAAK2C,EAAKhI,IACbG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAU3B,IAAK2C,EAAKhI,IAClBG,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACa,EAAA,MAAD,CACEC,UAAU,YACVC,SAAU4G,EAAKqB,aACf1I,MAAM,OACNC,OAAO,WAIbT,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACEC,QAASW,EAAKzD,KACdqC,UAAS,aAAAgG,OAAY5E,EAAK6E,cAG9B1M,EAAAC,EAAAC,cAACyM,GAAA,EAAD,CAAS9H,QAAQ,QAAQgB,UAAU,eASlCxG,wDCgEAA,mBAjHf,SAAAC,GAAyB,IAATC,EAASD,EAATC,MAKd,SAASqN,EAAWC,GAClBtN,EAAMuN,cAAcD,GACpBtN,EAAMwN,cAAc,SAGtB,OACE/M,EAAAC,EAAAC,cAAC8M,GAAA,EAAD,CAAOhJ,UAAU,QACfhE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,gBAEAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,sCAEAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAKoI,WAAS,GAChCjN,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,MADF,QAIAD,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEe,OAAQ,SACpBtG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,4EAGAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GACnBjN,EAAAC,EAAAC,cAACuK,EAAAxK,EAAD,MADF,yDAIAD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GACnBjN,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,MADF,mBAIAD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GACnBjN,EAAAC,EAAAC,cAACsK,EAAAvK,EAAD,MADF,8LAMAD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,gEAGAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,yDAKFjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAKoI,WAAS,GAChCjN,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,MADF,eAIAD,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEe,OAAQ,SACpBtG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,mHAIAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,2CACAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,yCACAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,2CACAjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GACnBjN,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,MADF,0FAOFD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAKoI,WAAS,GAChCjN,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,MADF,eAIAD,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEe,OAAQ,SACpBtG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,qGAMFjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAKoI,WAAS,GAChCjN,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,MADF,WAIAD,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEe,OAAQ,SACpBtG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,kFAKFjN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYd,QAAQ,KAAKoI,WAAS,GAChCjN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,MADF,YAIAD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QAAS,kBAAMZ,EAAMwN,cAAc,YAA9D,UAIA/M,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QAAS,kBAAMyM,EAAW,KAArD,qBAIA5M,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QAAS,kBAAMyM,EAAW,KAArD,qBAIA5M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,GAArB,2DAIAjN,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,WAAW1E,QAzG/B,WACER,SAAS0N,SAASC,WAwGhB,wECpHAC,iNACJC,qBAAuB,SAACC,EAAKC,GAE3B,OADeC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,KAG/DK,cAAgB,WACd,IACMJ,EAA8B,GAAxBK,EAAKC,MAAMC,WACjBJ,EAASF,KAAKC,MAAMD,KAAKE,UAAYH,EAF/B,EAE2C,IAF3C,EAIZ,OAAIG,EAAS,GACJ,SAGLA,EAAS,GACJ,MAGLA,EAAS,GACJ,OAGLA,EAAS,GACJ,aADT,KAKFK,MAAQ,CACNC,OAAQJ,EAAKP,qBAAqB,EAAG,GACrC5H,MAAOmI,EAAKD,gBACZM,MAAO,OAeTC,KAAO,WACLN,EAAKO,SAAS,CACZH,OAAQJ,EAAKP,qBAAqB,EAAG,GACrC5H,MAAOmI,EAAKD,wGAfdS,KAAKC,SAAWC,YAAYF,KAAKF,KAAME,KAAKL,MAAME,kDAEjCM,EAAWC,GACxBA,EAAUP,QAAUG,KAAKL,MAAME,QACjCQ,cAAcL,KAAKC,UACnBD,KAAKC,SAAWC,YAAYF,KAAKF,KAAME,KAAKL,MAAME,uDAIpDQ,cAAcL,KAAKC,2CAUZ,IAAAK,EAAAN,KACD3I,EAAQ2I,KAAKP,MAAMC,WACrB,CAAErI,MAAO,SACT,CAAEA,MAAO,UACb,OACE5F,EAAAC,EAAAC,cAAA,OACEqF,MAAO,CAAExB,gBAAiBwK,KAAKL,MAAMtI,OACrC5B,UAAU,SACV7D,QAAS,kBAAM0O,EAAKb,MAAMzO,MAAMwN,cAAc,UAE9C/M,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,eAAeuB,MAAOK,GAClC2I,KAAKL,MAAMC,gBA/DDW,aAsENzP,eAASkO,ICpDxB,SAASwB,GAAaf,GACpB,OACEhO,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYE,UAAU,MAAMN,MAAO,CAAEyJ,QAAS,KAC3ChB,EAAMiB,UASb,IAAM/N,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC2E,KAAM,CACJC,SAAU,EACVxF,MAAO,OACPuD,gBAAiB,cAwDN1E,oBApDf,SAAAC,GAAmC,IAAnBC,EAAmBD,EAAnBC,MAAOiM,EAAYlM,EAAZkM,SACfpJ,EAAUlB,KADiBgO,EAED3M,mBAAS,GAFR4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAE1BE,EAF0BD,EAAA,GAEhBE,EAFgBF,EAAA,GAQjC,MAAyB,WAArB5P,EAAM+P,WACDtP,EAAAC,EAAAC,cAACqP,GAAD,CAAQhQ,MAAOA,IAGC,UAArBA,EAAM+P,WACDtP,EAAAC,EAAAC,cAACqP,GAAD,CAAQhQ,MAAOA,EAAO0O,WAAY1O,EAAM0O,aAI/CjO,EAAAC,EAAAC,cAAA,OAAK8D,UAAW5B,EAAQ2D,MACtB/F,EAAAC,EAAAC,cAACsP,GAAA,EAAD,CAAQnG,SAAS,QAAQzD,MAAM,WAC7B5F,EAAAC,EAAAC,cAACuP,GAAA,EAAD,CACE3F,MAAOsF,EACPzM,SAjBR,SAAsBiJ,EAAO8D,GAC3BL,EAAYK,IAiBN7K,QAAQ,aACR8K,cAAc,MACdC,eAAe,UACfC,UAAU,WAEV7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAKlI,KAAM5H,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,QACXD,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAKlI,KAAM5H,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,QACXD,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAKlI,KAAM5H,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,UAID,IAAbmP,GACCpP,EAAAC,EAAAC,cAAC6O,GAAD,KACE/O,EAAAC,EAAAC,cAAC8P,EAAD,CAAQzQ,MAAOA,KAGL,IAAb6P,GACCpP,EAAAC,EAAAC,cAAC6O,GAAD,KACE/O,EAAAC,EAAAC,cAAC+P,GAAD,CAAS1Q,MAAOA,EAAOiM,SAAUA,KAGvB,IAAb4D,GACCpP,EAAAC,EAAAC,cAAC6O,GAAD,KACE/O,EAAAC,EAAAC,cAACgQ,GAAD,CAAM3Q,MAAOA,QClFR,SAAS4Q,GAAT7Q,GAAmC,IAAlBC,EAAkBD,EAAlBC,MAAO6Q,EAAW9Q,EAAX8Q,QAAWlB,EAChB3M,mBAAS,IADO4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GACzClG,EADyCmG,EAAA,GAC/BkB,EAD+BlB,EAAA,GAAAmB,EAEhB/N,mBAAS,IAFOgO,EAAA9N,OAAAC,EAAA,EAAAD,CAAA6N,EAAA,GAEzCrH,EAFyCsH,EAAA,GAE/BC,EAF+BD,EAAA,GAAAE,EAOhD,SAAyBvL,EAAKwL,GAAc,IAAAC,EAGJpO,mBAAS,WAC7C,IAEE,IAAM0H,EAAOiC,OAAOC,aAAayE,QAAQ1L,GAEzC,OAAO+E,EAAO4G,KAAKC,MAAM7G,GAAQyG,EACjC,MAAOK,GAGP,OADA9N,QAAQC,IAAI6N,GACLL,KAZ+BM,EAAAvO,OAAAC,EAAA,EAAAD,CAAAkO,EAAA,GAGnCM,EAHmCD,EAAA,GAGtBE,EAHsBF,EAAA,GAiC1C,MAAO,CAACC,EAfS,SAAAnH,GACf,IAEE,IAAMqH,EACJrH,aAAiBsH,SAAWtH,EAAMmH,GAAenH,EAEnDoH,EAAeC,GAEfjF,OAAOC,aAAakF,QAAQnM,EAAK2L,KAAKS,UAAUH,IAChD,MAAOJ,GAEP9N,QAAQC,IAAI6N,MAjCcQ,CAAgB,WAAY,CAC1DvI,cAAUwI,IAJoCC,EAAAhP,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAG/BiB,GAH+BD,EAAA,GAAAA,EAAA,IAsDhD,OACEzR,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,SACbhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,YAAYpD,IAAI,qBAAqB2H,IAAI,iBAExDvI,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,qBACbhE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYsH,WAAS,EAACpI,QAAQ,MAA9B,mBAGA7E,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,mBACbhE,EAAAC,EAAAC,cAAA,SACEyR,YAAY,kBACZ3N,UAAU,cACV8F,MAAOd,EACPrG,SAAU,SAAA0B,GAAC,OAAIgM,EAAYhM,EAAEE,OAAOuF,WAGxC9J,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,kBACbhE,EAAAC,EAAAC,cAAA,SACEyR,YAAY,cACZ3N,UAAU,cACVlD,KAAK,WACLgJ,MAAOb,EACPtG,SAAU,SAAA0B,GAAC,OAAImM,EAAYnM,EAAEE,OAAOuF,WAGxC9J,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,QAAQ,YAAY1E,QAAS,SAAAkE,GAAC,OApC5C,SAAiBA,GACfA,EAAEuN,iBACErS,EAAMsS,MAAM7I,EAAS8I,cAAe7I,IAEtCyI,EAAYnS,EAAMkM,SAAS5L,IAC3BuQ,KAEAzL,MAAM,mCA6BsCxE,CAAQkE,KAAlD,oDCjFF0N,GAAa,CACjBC,KAAM,UACNC,OAAQ,SACRC,KAAM,WA8EOC,GA3EDC,KACXC,MAAM,QAAS,CACdxS,GAAIuS,KAAME,OACV5S,MAAO0S,KAAMG,QACbzM,QAASsM,KAAME,OACflO,KAAMgO,KAAME,OACZxO,SAAUsO,KAAME,OAChBrR,SAAUmR,KAAMI,UAAUJ,KAAME,QAChCG,OAAQL,KAAMG,QACdG,WAAYN,KAAMI,UAAUJ,KAAME,QAClCK,SAAUP,KAAMI,UAAUJ,KAAME,QAChCM,WAAYR,KAAMI,UAAUJ,KAAME,UAXxB,SAaF,SAAAO,GAAI,MAAK,CACjBjQ,WAAW,KAEZkQ,QAAQ,SAAAD,GAAI,MAAK,CAChBE,YADgB,SACJC,GACVH,EAAK5R,SAAW+R,GAElBC,QAJgB,SAIRC,GACNL,EAAKzO,KAAO8O,GAEdrQ,cAPgB,SAOFD,GACZiQ,EAAKjQ,UAAYA,MAGpBuQ,MAAM,SAAAN,GAAI,MAAK,CACd9S,oBACE,QAAO8S,EAAKH,YAEd7R,kBACE,mCAAA4L,OAAoCoG,EAAKH,WAAzC,KAAAjG,OAAuDoG,EAAK5R,SAA5D,KAAAwL,OACEoG,EAAKF,SADP,WAIFhS,oBACE,mCAAA8L,OACEoG,EAAKD,WADP,0BAIFQ,mBACE,OAAOrB,GAAWc,EAAK/O,WAEzBsG,aACE,IAAMiJ,EAAaC,aAAQT,GAC3B,OAAOQ,EAAW3I,MAAM6I,KACtB,SAAAhQ,GAAC,OACCA,EAAEsE,KAAKhI,KAAOwT,EAAW5H,SAAS5L,IAClC0D,EAAE6G,QACF7G,EAAE7D,QAAUmT,EAAKnT,SAGvB8T,aACE,MAAsB,SAAlBX,EAAK/O,SACA,EAGa,WAAlB+O,EAAK/O,SACA,GAGa,SAAlB+O,EAAK/O,SACA,GAGF,GAETwH,kBACE,SAAAmB,OAAUoG,EAAKO,aAAf,OAAA3G,OAAiCoG,EAAKW,OAAtC,cAEF9S,aACE,MAAO,CAAEO,SAAU4R,EAAK5R,SAAW,OAAQwS,aAAc,aC9E/D,SAASC,GAAoBC,GAC3B,OAAIA,GAAK,EACA,IAAMA,EAERA,EAGT,IAyFeC,GAzFFxB,KACVC,MAAM,OAAQ,CACbxS,GAAIuS,KAAME,OACVuB,YAAazB,KAAM0B,KACnB9K,SAAUoJ,KAAME,OAChBrR,SAAUmR,KAAME,OAChB5S,MAAO0S,KAAMG,QACbwB,OAAQ3B,KAAME,OACdI,WAAYN,KAAMI,UAAUJ,KAAME,QAClClH,QAASgH,KAAMI,UAAUJ,KAAME,UATtB,SAWD,SAAAO,GAAI,MAAK,CACjBjQ,WAAW,KAEZkQ,QAAQ,SAAAD,GAAI,MAAK,CAChBhQ,cADgB,SACFD,GACZiQ,EAAKjQ,UAAYA,MAGpBuQ,MAAM,SAAAN,GAAI,MAAK,CACd3H,iBACE,QAAO2H,EAAKzH,SAEdrL,oBACE,QAAO8S,EAAKH,YAEd7R,kBACE,mCAAA4L,OAAoCoG,EAAKH,WAAzC,KAAAjG,OACEoG,EAAK5R,SADP,eAIFmJ,aACE,MAAuB,SAAhByI,EAAKkB,QAEdxJ,iBACE,MAAuB,aAAhBsI,EAAKkB,QAEdC,2BACE,MAAuB,uBAAhBnB,EAAKkB,QAEdE,WACE,OACEpB,EAAKgB,YAAYK,cACjB,IACAR,GAAoBb,EAAKgB,YAAYM,WAAa,GAClD,IACAT,GAAoBb,EAAKgB,YAAYO,YAGzCvM,WAEE,OADmByL,aAAQT,GACTwB,MAAMC,KAAK,SAAA/Q,GAAC,OAAIA,EAAEyF,WAAa6J,EAAK7J,YAExDqB,WAEE,OADmBiJ,aAAQT,GACTxP,OAAOiR,KAAK,SAAA/Q,GAAC,OAAIA,EAAE7D,QAAUmT,EAAKnT,SAEtD8T,aACE,OAAKX,EAAKzI,OAIiB,SAAvByI,EAAKxI,KAAKvG,SACL,EAGkB,WAAvB+O,EAAKxI,KAAKvG,SACL,GAGkB,SAAvB+O,EAAKxI,KAAKvG,SACL,GAGF,EAfE,GAiBXwH,kBACE,OAAIuH,EAAKzI,OACP,GAAAqC,OAAUoG,EAAKoB,KAAf,OAAAxH,OAAyBoG,EAAKxI,KAAK+I,aAAnC,OAAA3G,OACEoG,EAAKW,OADP,aAKF,GAAA/G,OAAUoG,EAAKoB,OAEjBvT,aACE,MAAO,CAAEO,SAAU4R,EAAK5R,SAAW,OAAQwS,aAAc,aCjBhDc,GA5EFnC,KACVC,MAAM,OAAQ,CACbxS,GAAIuS,KAAME,OACVtJ,SAAUoJ,KAAME,OAChBlO,KAAMgO,KAAME,OACZrJ,SAAUmJ,KAAME,OAChBpJ,aAAckJ,KAAME,OACpBnJ,aAAciJ,KAAMoC,SAASpC,KAAME,OAAQ,IAC3ClJ,WAAYgJ,KAAMoC,SAASpC,KAAME,OAAQ,IACzCjJ,SAAU+I,KAAMoC,SAASpC,KAAME,OAAQ,IACvChJ,YAAa8I,KAAMoC,SAASpC,KAAME,OAAQ,MAE3Ca,MAAM,SAAAN,GAAI,MAAK,CACdQ,iBAEE,OADmBC,aAAQT,IAG7BnI,YACE,OAAOmI,EAAKQ,WAAW3I,MAAMpH,OAAO,SAAAC,GAAC,OAAIA,EAAEyF,WAAa6J,EAAK7J,YAE/Db,gBAIE,OAHkB0K,EAAKnI,MAAMpH,OAC3B,SAAAC,GAAC,OAAIA,EAAE6G,QAAU7G,EAAEyF,WAAa6J,EAAK7J,WAEtBxF,IAAI,SAAAD,GAAC,MAAK,CACzB1D,GAAI0D,EAAE1D,GACNyI,IAAG,oDAAAmE,OACDlJ,EAAEtC,SADD,QAGHuE,MAAOjC,EAAEa,KACTsE,UAAWnF,EAAE8G,KAAKjG,SAGtBsI,gBACE,OAA0B,IAAtBmG,EAAKnI,MAAMtC,OACN,EAKP,EADAyK,EAAKnI,MAAMpH,OAAO,SAAAC,GAAC,OAAIA,EAAE6G,QAA8B,SAApB7G,EAAE8G,KAAKvG,WAAqBsE,OAInD,GADZyK,EAAKnI,MAAMpH,OAAO,SAAAC,GAAC,OAAIA,EAAE6G,QAA8B,WAApB7G,EAAE8G,KAAKvG,WACvCsE,OAGH,GADAyK,EAAKnI,MAAMpH,OAAO,SAAAC,GAAC,OAAIA,EAAE6G,QAA8B,SAApB7G,EAAE8G,KAAKvG,WAAqBsE,QAKnEqM,oBACE,OAAO5B,EAAKQ,WAAWhQ,OAAOwP,EAAKnI,MAAMtC,YAG5C0K,QAAQ,SAAAD,GAAI,MAAK,CAChB6B,gBADgB,SACA1B,GACdH,EAAK3J,aAAe8J,GAEtB/G,WAJgB,SAAA3M,GAYb,IAPD8E,EAOC9E,EAPD8E,KACA6E,EAMC3J,EAND2J,SACAC,EAKC5J,EALD4J,aACAC,EAIC7J,EAJD6J,aACAC,EAGC9J,EAHD8J,WACAC,EAEC/J,EAFD+J,SACAC,EACChK,EADDgK,YAEAuJ,EAAKzO,KAAOA,EACZyO,EAAK5J,SAAWA,EAChB4J,EAAK3J,aAAeA,EACpB2J,EAAK1J,aAAeA,EACpB0J,EAAKzJ,WAAaA,EAClByJ,EAAKxJ,SAAWA,EAChBwJ,EAAKvJ,YAAcA,MCtEnBqL,GAAe,CACnB,CAAE9U,GAAI,EAAG6E,KAAM,mBACf,CAAE7E,GAAI,EAAG6E,KAAM,yBACf,CAAE7E,GAAI,EAAG6E,KAAM,uBAGXkQ,GAAa,CACjB,CAAE/U,GAAI,EAAGiE,SAAU,aAAcM,KAAM,eACvC,CAAEvE,GAAI,EAAGiE,SAAU,cAAeM,KAAM,iBAGpCkL,GAAqB,OAsNZuF,GApNIzC,KAChBC,MAAM,aAAc,CACnBhP,OAAQ+O,KAAM0C,MAAM3C,IACpBzH,MAAO0H,KAAM0C,MAAMlB,IACnBS,MAAOjC,KAAM0C,MAAMP,MAEpBpB,MAAM,SAAAN,GAAI,MAAK,CACdlM,qBACE,OAAOiO,IAET7J,oBACE,OAAO8H,EAAKnI,MAAMpH,OAChB,SAAAC,GAAC,OAAIA,EAAE6G,QAAU7G,EAAEyF,WAAa6J,EAAKpH,SAASzC,YAGlDwD,oBAEE,IAAIuI,EAAclC,EAAKwB,MAAMW,MAAM,GAMnC,OALAD,EAAYE,KAAK,SAAChV,EAAGiV,GACnB,IAAI3R,EAAItD,EAAEyM,UACNyI,EAAID,EAAExI,UACV,OAAOnJ,EAAI4R,GAAK,EAAI5R,EAAI4R,EAAI,EAAI,IAE3BJ,EAAYK,WAErBrQ,qBACE,OAAO8N,EAAKxP,OAAOC,OACjB,SAAAC,GAAC,OAAIA,EAAEO,WAAa+O,EAAK1O,iBAAiBL,YAG9C6Q,mBACE,OAAOA,OA/BM,SAkCP,SAAA9B,GAAI,MAAK,CACjBpH,SAAU,KACV4J,aAAa,EACb5U,OAAQ,KACR0D,iBAAkB,KAClBmR,YAAazC,EAAK8B,aAAa,GAC/BY,IAAK,KACLjG,WAAYA,GACZrB,WAAY,EACZuH,cAAe,KAEhB1C,QAAQ,SAAAD,GAAI,MAAK,CAChB/F,cADgB,SACFD,GACZgG,EAAK5E,WAAapB,GAEpBE,cAJgB,SAIF0I,GACZ5C,EAAKvD,WAAamG,GAEpBvR,eAPgB,SAODJ,GACb+O,EAAK1O,iBAAmBL,GAE1B4R,eAVgB,SAUDpS,GACbuP,EAAKyC,YAAchS,GAEfqS,SAbU,eAAAC,EAAAnT,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAC,IAAA,IAAA3B,EAAAhR,EAAAqH,EAAAuL,EAAA,OAAAH,GAAA7V,EAAAiW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAcIxD,EAAK0C,IAAIe,WAdb,cAcVjC,EAdU8B,EAAAI,KAAAJ,EAAAE,KAAA,EAeKxD,EAAK0C,IAAIiB,cAfd,cAeVnT,EAfU8S,EAAAI,KAAAJ,EAAAE,KAAA,EAgBIxD,EAAK0C,IAAIkB,aAhBb,cAgBV/L,EAhBUyL,EAAAI,KAkBRN,EAAO,CACX5B,MAAO,GACP3J,MAAO,GACPrH,OAAQ,IAGVA,EAAOqT,QAAQ,SAAAC,GACbA,EAAIC,OAAO/W,GAAK8W,EAAI9W,GACpBoW,EAAK5S,OAAOwT,KAAKF,EAAIC,UAGvBvC,EAAMqC,QAAQ,SAAAC,GACZA,EAAIC,OAAO/W,GAAK8W,EAAI9W,GACpBoW,EAAK5B,MAAMwC,KAAKF,EAAIC,UAGtBlM,EAAM0K,UAEN1K,EAAMgM,QAAQ,SAAAC,GACZA,EAAIC,OAAO/W,GAAK8W,EAAI9W,GACpB8W,EAAIC,OAAO/C,YAAc,IAAIC,KAAK6C,EAAI9C,aACtCoC,EAAKvL,MAAMmM,KAAKF,EAAIC,UAvCRT,EAAAW,OAAA,SA0CPb,GA1CO,yBAAAE,EAAAY,SAAAf,MAAA,yBAAAJ,EAAAoB,MAAAzI,KAAA0I,YAAA,GA4CVpM,QA5CU,eAAAqM,EAAAzU,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAoB,IAAA,IAAAlB,EAAA,OAAAH,GAAA7V,EAAAiW,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EA6CKxD,EAAK8C,WA7CV,cA6CRM,EA7CQmB,EAAAb,KA+Cdc,aAAcxE,EAAMoD,GA/CNmB,EAAAN,OAAA,UAiDP,GAjDO,wBAAAM,EAAAL,SAAAI,MAAA,yBAAAD,EAAAF,MAAAzI,KAAA0I,YAAA,GAmDhBK,UAnDgB,SAmDN7W,GACRoS,EAAKpS,OAASA,GAEhB8W,OAtDgB,WAuDd1E,EAAKpH,SAAW,MAElBoG,MAzDgB,SAyDV7I,EAAUC,GAKd,OAJA4J,EAAKpH,SAAWoH,EAAKwB,MAAMC,KACzB,SAAA/Q,GAAC,OAAIA,EAAEyF,WAAaA,GAAYzF,EAAE0F,WAAaA,MAG7C4J,EAAKpH,UAMX+L,OApEgB,SAoET3X,GAGL,OAFAgT,EAAKpH,SAAWoH,EAAKwB,MAAMC,KAAK,SAAA/Q,GAAC,OAAIA,EAAE1D,KAAOgR,KAAKC,MAAMjR,OAErDgT,EAAKpH,UAMXgM,IA7EgB,SA6EZ/X,GACFmT,EAAKxP,OAAOwT,KAAKnX,IAEnBgY,QAhFgB,SAgFRzN,GACN4I,EAAKnI,MAAMmM,KAAK5M,IAElBgC,WAnFgB,SAmFLpE,GACTgL,EAAK0C,IAAItJ,WAAWpE,IAEtB8P,KAAMC,aAAI9B,GAAA7V,EAAA8V,KAAC,SAAU4B,EAAKpC,EAAK1V,GAApB,IAAAoW,EAAA,OAAAH,GAAA7V,EAAAiW,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OAEI,OADbxD,EAAK0C,IAAMA,EADFsC,EAAAxB,KAAA,EAEUxD,EAAK8C,WAFf,OAEHM,EAFG4B,EAAAtB,KAITc,aAAcxE,EAAMoD,GAEhBpW,GACFgT,EAAK2E,OAAO3X,GAGdgT,EAAKwC,aAAc,EAVV,wBAAAwC,EAAAd,SAAUY,MAYrB5L,YAlGgB,SAkGJzH,EAAMwT,GAChB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQ3T,GACxByT,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,QAASpF,EAAKpH,SAASzC,UACvC+O,EAASE,OAAO,OAAQpF,EAAKpH,SAASzC,UAEtC,IAAIkP,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,0DACA,GAGFF,EAAIG,OAAS,WAGX,IAAIC,EAAQzH,KAAKC,MAAMvC,KAAKgK,cAC5B1F,EAAKpH,SAASiJ,gBAAgB4D,EAAME,WACpC3F,EAAK5G,WAAW4G,EAAKpH,UAErBqM,EAAYvJ,KAAKgK,eAEnBL,EAAIO,KAAKV,IAEXtT,YA7HgB,SA6HJH,EAAMwT,GAChB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQ3T,GACxByT,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,gBAAiB,OACjCF,EAASE,OAAO,QAASpF,EAAKpH,SAASzC,UAEvC+O,EAASE,OAAO,OAAQpF,EAAKpH,SAASzC,UAEtC,IAAIkP,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,2DACA,GAGFF,EAAIG,OAAS,WAEX,IAAIC,EAAQzH,KAAKC,MAAMvC,KAAKgK,cAC5BtV,QAAQC,IAAIoV,GAEZrV,QAAQC,IAAIqL,KAAKgK,cAEjB,IAAM7Y,EAAQ,CACZ0E,KAAM,OACNnD,SAAUqX,EAAME,UAChB1U,SAAU+O,EAAK1O,iBAAiBL,SAChCgC,QAAS,UACT2M,OAAQ,GAGVI,EAAK0C,IAAImD,YAAYhZ,GAErBmT,EAAKhI,UAELiN,EAAYvJ,KAAKgK,eAEnBL,EAAIO,KAAKV,OCnOTY,GAAS,CACbC,KAAM,oBACNC,MAAO,SACPC,KAAM,cACNC,OAAQ,oBACRC,WAAY,IACZC,IAAK,iDAGQC,GAAA,CACbC,eADa,SAAA7Z,GAC+B,IAA3B0Z,EAA2B1Z,EAA3B0Z,WAAYH,EAAevZ,EAAfuZ,MAAOC,EAAQxZ,EAARwZ,KAC5BM,EAAOT,GAWb,OAVIK,IACFI,EAAKJ,WAAaA,GAEhBF,IACFM,EAAKN,KAAOA,GAEVD,IACFO,EAAKP,MAAQA,GAGR,IAAIQ,QAAJ,GAAA5M,OACFkM,GAAOM,IADL,KAAAxM,OACY2M,EAAKP,MADjB,gBAAApM,OACqC2M,EAAKJ,WAD1C,UAAAvM,OAEH2M,EAAKN,MAEP,CACEQ,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAhN,OAAY2M,EAAKL,aAKhCW,SAzBO,eAAAC,EAAAlX,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAC,EAyBEoD,GAzBF,IAAAQ,EAAAC,EAAA,OAAA/D,GAAA7V,EAAAiW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA0BMyD,MAAMvL,KAAK4K,eAAeC,IAA1B,MAAuC,SAAAW,GACtD9W,QAAQC,IAAI6W,KA3BH,aA0BPH,EA1BOzD,EAAAI,MA6BFxC,QAAU,KAAO6F,EAAK7F,OAAS,KA7B7B,CAAAoC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EA8BQuD,EAAKC,OA9Bb,cA8BLA,EA9BK1D,EAAAI,KAAAJ,EAAAW,OAAA,SA+BF+C,EAAKG,SA/BH,wBAAA7D,EAAAY,SAAAf,EAAAzH,SAAA,gBAAA0L,GAAA,OAAAN,EAAA3C,MAAAzI,KAAA0I,YAAA,GAkCPX,SAlCO,eAAA4D,EAAAzX,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAoB,IAAA,OAAArB,GAAA7V,EAAAiW,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAN,OAAA,SAmCJvI,KAAKmL,SAAS,CAAEb,MAAO,WAnCnB,wBAAAzB,EAAAL,SAAAI,EAAA5I,SAAA,yBAAA2L,EAAAlD,MAAAzI,KAAA0I,YAAA,GAqCbhL,WArCa,SAqCFpE,GACT,IAAMoR,EAAG,GAAAxM,OAAMkM,GAAOM,IAAb,WAAAxM,OAA0B5E,EAAKhI,IAExCia,MACE,IAAIT,QAAQJ,EAAK,CACfK,OAAQ,MACRa,KAAMtJ,KAAKS,UAAU,CACnBsF,OAAQ,CACNxS,KAAMyD,EAAKzD,KACX4E,SAAUnB,EAAKmB,SACfC,SAAUpB,EAAKoB,SACfC,aAAcrB,EAAKqB,aACnBC,aAActB,EAAKsB,aACnBC,WAAYvB,EAAKuB,WACjBC,SAAUxB,EAAKwB,SACfC,YAAazB,EAAKyB,eAGtBiQ,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAhN,OAAYkM,GAAOI,QAChCqB,eAAgB,wBAjBtB,MAoBQ,SAAAL,GACNpV,MAAMoV,MAGJvD,YAhEO,eAAA6D,EAAA5X,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAuE,IAAA,OAAAxE,GAAA7V,EAAAiW,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAf,OAAA,SAiEJvI,KAAKmL,SAAS,CAAEb,MAAO,YAjEnB,wBAAAhB,EAAAd,SAAAuD,EAAA/L,SAAA,yBAAA8L,EAAArD,MAAAzI,KAAA0I,YAAA,GAmEPR,WAnEO,eAAA8D,EAAA9X,OAAAoT,GAAA,EAAApT,CAAAqT,GAAA7V,EAAA8V,KAAA,SAAAyE,IAAA,OAAA1E,GAAA7V,EAAAiW,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAA3D,OAAA,SAoEJvI,KAAKmL,SAAS,CAAEb,MAAO,WApEnB,wBAAA4B,EAAA1D,SAAAyD,EAAAjM,SAAA,yBAAAgM,EAAAvD,MAAAzI,KAAA0I,YAAA,GAsEbyB,YAtEa,SAsEDhZ,GACVoa,MACE,IAAIT,QAAJ,GAAA5M,OAAekM,GAAOM,IAAtB,WAAoC,CAClCK,OAAQ,OACRa,KAAMtJ,KAAKS,UAAU,CACnBsF,OAAQlX,IAEV6Z,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAhN,OAAYkM,GAAOI,QAChCqB,eAAgB,wBARtB,MAWQ,SAAAL,GACN9W,QAAQC,IAAI6W,OClFZxa,GAAQsV,GAAW/S,SACzBvC,GAAMoY,KAAK+C,GAAKxO,OAAOC,aAAayE,QAAQ,aAsD7BvR,oBAxCf,WAAe,IAAA6P,EAC2B3M,mBAAS,SADpC4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GACNyL,EADMxL,EAAA,GACQyL,EADRzL,EAAA,GAYb,GATAhM,oBAAU,WACR5D,GAAM+X,UAAUpL,OAAO2O,cACtB,KAOEtb,GAAM8V,YACT,OACErV,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAAEjE,UAAW,QAASgL,UAAW,WAA7C,aAIJ,GAAI/M,GAAM8V,aAAe9V,GAAMkM,SAC7B,OAAOzL,EAAAC,EAAAC,cAAC4a,GAAD,CAAMvb,MAAOA,GAAOiM,SAZ7B,WACEjM,GAAMgY,SACNqD,EAAgB,YAalB,IAAM/I,EACa,UAAjB8I,EACE3a,EAAAC,EAAAC,cAACiQ,GAAD,CAAO5Q,MAAOA,GAAO6Q,QAASwK,IAE9B5a,EAAAC,EAAAC,cAAC4a,GAAD,CAAMvb,MAAOA,KAGjB,OACES,EAAAC,EAAAC,cAAA,OAAKL,GAAG,mBACNG,EAAAC,EAAAC,cAAA,QAAML,GAAG,aACPG,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,OACbhE,EAAAC,EAAAC,cAAA,UAAQ8D,UAAU,cAAc6N,QC9CtBjO,QACW,cAA7BsI,OAAOmB,SAAS0N,UAEe,UAA7B7O,OAAOmB,SAAS0N,UAEhB7O,OAAOmB,SAAS0N,SAASC,MACvB,2DCZNC,IAASC,OAAOlb,EAAAC,EAAAC,cAACib,GAAD,MAASxb,SAASC,eAAe,SD2H3C,kBAAmBwb,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2b977214.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).requestFullscreen();\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    store.setLevelFilter(option);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n      <div className=\"card-content2\">\r\n        <div className=\"fileinputs\">\r\n          <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n          <div className=\"fakefile\">\r\n            <Button variant=\"outlined\">\r\n              Ladda upp <VideoIcon />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {store.filteredLevels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.id}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"Recipe\"\r\n                  style={getAvatarColor(level)}\r\n                  className={classes.avatar}\r\n                />\r\n              }\r\n              title={level.name}\r\n            />\r\n\r\n            <CardContent>\r\n              <VideoControl store={store} settings={level} />\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game from \"./Game\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <FolderIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"favoriteTeam\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          onChange={handleChange(\"favoriteTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"playerTeam\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          onChange={handleChange(\"playerTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"position\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          onChange={handleChange(\"position\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"shirtNumber\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          onChange={handleChange(\"shirtNumber\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography paragraph>Säsong 1:</Typography>\r\n\r\n      <Typography paragraph>Varje säsong har 20 utmaningar.</Typography>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <HomeIcon /> Hem\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens användaruppladde filmer.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <AccountCircleIcon />\r\n          Under utvärdering för att se om man klarat det.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <StarIcon />\r\n          Klarad utmaning\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <ThumbDownIcon />\r\n          Utmaning misslyckad. Bara att försöka igen. Kanske hade du inte flytet\r\n          i utmaningen, eller missförtått något. Kontrollera videon och\r\n          instruktionerna och försök igen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Om du klickar på personens namn så kan du se profilen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Klicka på videon för att se den i helskärm.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Utmaningar\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens utmaningar. Det finns 3 olika\r\n          nivåer. Lätt, medium, svår.\r\n        </Typography>\r\n        <Typography paragraph>10 lätta övningar, 5 poäng var</Typography>\r\n        <Typography paragraph>5 medium övningar, 10 poäng var</Typography>\r\n        <Typography paragraph>5 svåra övningar, 20 poäng var</Typography>\r\n        <Typography paragraph>\r\n          <VideoIcon />\r\n          Klicka på denna för att ladda upp en film. Filma alltid i horisontellt\r\n          läge.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Topplistan\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Varje säsong består av maximalt 200 poäng. Här visas vem som fått\r\n          flest poäng.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <PersonIcon /> Profil\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här kan du ladda upp din profilbild och andra användarinställningar.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<StarIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"soccertraining.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${\r\n        self.fileType\r\n      }?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${\r\n        self.posterPath\r\n      }/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"CONEDRILLS\", name: \"Cone drills\" },\r\n  { id: 1, category: \"BALLMASTERY\", name: \"Ball mastery\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1\r\n  }))\r\n  .actions(self => ({\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: \"Namn\",\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 100,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    return new Request(\r\n      `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${\r\n        conf.view\r\n      }`,\r\n      {\r\n        method: \"get\",\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${conf.apiKey}`\r\n        })\r\n      }\r\n    );\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    return this.response({ table: \"Levels\" });\r\n  },\r\n  async fetchItems() {\r\n    return this.response({ table: \"Items\" });\r\n  },\r\n  insertLevel(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}