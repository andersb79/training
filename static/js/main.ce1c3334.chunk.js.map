{"version":3,"sources":["components/VideoControl.js","components/EditDrill.js","components/Game.js","components/ViewDrill.js","components/Game2.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Presence.js","components/Division.js","components/Trainings.js","components/PlayerProfile.js","components/Players.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/LevelMedia.js","models/Item.js","models/User.js","models/Training.js","models/Player.js","models/Rating.js","models/Stat.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","react_default","a","createElement","onClick","document","getElementById","id","webkitEnterFullscreen","goFullScreen","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","onBack","_React$useState","React","useState","name","description","details","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","ArrowBackIos_default","selectedCategory","TextField","label","onChange","margin","e","file","files","processFile","text","Button","variant","VideoCall_default","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","level","isVisible","videoId","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","_React$useState5","Boolean","_React$useState6","newDrill","setNewDrill","getAvatarColor","category","backgroundColor","selectCategory","filteredLevels","length","AddCircle_default","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","fileType","components_VideoControl","hasSharedPath","lib","cloudName","publicId","Chip","playerCount","Typography","color","component","components_EditDrill","Carousel","require","selectedDrill","_useState","_useState2","selectDrill","index","item","levelMedias","showThumbs","showArrows","showIndicators","medias","showStatus","minPlayers","maxPlayers","organisation","dense","secondary","List","ListItem","lev","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_ViewDrill","root","flexGrow","maxWidth","demo","palette","background","paper","spacing","listCategories","cat","goToDrill","components_Game2","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","selectProfile","noValidate","autoComplete","disabled","components_VideoList","red","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","hasStats","players","player","toggleTraining","myRatioText","isTraining","VerifiedUserOutlined_default","startTraining","updateLevelOnStat","filteredPlayersInTrainingUn","failRate","filteredPlayersInTrainingEasy","currentStat","filteredPlayersInTrainingHard","setMenu","setPrevTraining","currentTraining","date","trainingId","setNextTraining","ButtonGroup","components_Presence","components_Division","selectedPlayer","onUpdateRating","rating","setRating","updatePlayer","goToPlayer","selectPlayer","ratings","toggleSelect","selected","filteredPlayers","components_PlayerProfile","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","Settings_default","Person_default","components_Drills","components_Help","components_Profile","components_Trainings","components_Players","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","getRoot","levelStore","some","points","resourceType","LevelMedia","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","Training","Player","ratingText","benchmarkHard","benchmarkHardValue","allStat","stat","stats","myRatio","al","easy","hard","isNaN","allHard","trainings","diff","val","ratio","nextLevel","toggleIsTraining","updateStat","insertStat","Rating","Stat","statId","setLevel","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","filteredPlayersInTraining","orderedPlayers","byRating","xx","trainingIndex","orderdPlayers","forEach","initzialize","levelFilter","api","currentSeason","setTrainingIndex","easyCount","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","fetchUsers","sent","fetchLevels","fetchLevelMedias","fetchItems","fetchPlayers","fetchTrainings","fetchStats","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","findNextTraining","_context3","indexOf","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","isImage","uploadUrl","insertLevel","base","Airtable","apiKey","configure","config","TrainingApi","_fetchUsers","select","view","all","_fetchLevels","_fetchLevelMedias","_callee3","_fetchTrainings","_callee4","_context4","_fetchStats","_callee5","_context5","_fetchPlayers","_callee6","_context6","_fetchItems","_callee7","_context7","u","table","err","records","record","getId","url","fetch","Request","method","body","headers","Headers","Authorization","Content-Type","update","get","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce1c3334.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  return (\r\n    <video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      loop\r\n      playsInline\r\n      preload=\"none\"\r\n      muted\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      poster={settings.dropboxPoster}\r\n    >\r\n      <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n    </video>\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction EditDrill({ store, onBack }) {\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    details: \"\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, values, text => {\r\n      onBack();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-drill\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Namn\"\r\n        value={values.name}\r\n        onChange={handleChange(\"name\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        value={values.description}\r\n        onChange={handleChange(\"description\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"details\"\r\n        label=\"details\"\r\n        value={values.details}\r\n        onChange={handleChange(\"details\")}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            Ladda upp <VideoIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(EditDrill);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [newDrill, setNewDrill] = React.useState(false);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function addDrill() {\r\n    setNewDrill(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!newDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n            <div className=\"action\">\r\n              <AddCircleIcon onClick={addDrill} />\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    level.hasSharedPath && <img src={level.src} />}\r\n\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    !level.hasSharedPath && (\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={level.publicId}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    )}\r\n\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {newDrill && (\r\n        <EditDrill store={store} onBack={() => setNewDrill(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport styles from \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\r\n\r\nfunction ViewDrill({ store, onBack }) {\r\n  const level = store.selectedDrill;\r\n  const [mediaSelected, setMediaSelected] = useState(\"Login\");\r\n\r\n  function onChange(index, item) {\r\n    console.log(index);\r\n\r\n    if (index < 1) {\r\n      return;\r\n    }\r\n\r\n    var media = store.levelMedias[index - 1];\r\n    console.log(media.id);\r\n    const videoElm = document.getElementById(media.id);\r\n    console.log(videoElm);\r\n    if (videoElm) {\r\n      console.log(\"play\");\r\n      videoElm.play();\r\n    }\r\n    // if (videoElm) {\r\n    //   if (isVisible) {\r\n    //     videoElm.play();\r\n    //   } else {\r\n    //     videoElm.pause();\r\n    //   }\r\n    // } else {\r\n    //   console.log(\"not found\");\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"back\">\r\n          <div className=\"left\">\r\n            <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n          </div>\r\n          <div className=\"right\">{store.selectedCategory.name}</div>\r\n        </div>\r\n        <div className=\"drill\">\r\n          <div>{store.selectedDrill.name}</div>\r\n\r\n          <Carousel\r\n            onChange={onChange}\r\n            showThumbs={false}\r\n            showArrows={true}\r\n            showIndicators={level.medias.length > 1}\r\n            showStatus={level.medias.length > 1}\r\n          >\r\n            {level.medias.map(media => (\r\n              <div>\r\n                {media.fileType === \"mp4\" && (\r\n                  <VideoControl store={store} settings={media} />\r\n                )}\r\n                {(media.fileType === \"jpg\" || media.fileType === \"gif\") && (\r\n                  <img\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                    src={media.src}\r\n                  />\r\n                )}\r\n                {media.description && <p className=\"legend\">{media.id}</p>}\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n\r\n          <div className=\"desc\">Setup</div>\r\n          <div className=\"drill-desc\">{level.details}</div>\r\n          <div className=\"desc\">Spelare</div>\r\n          <div className=\"drill-desc\">\r\n            {level.minPlayers}-{level.maxPlayers}\r\n          </div>\r\n          <div className=\"desc\">Organisation</div>\r\n          <div className=\"drill-desc\">{level.organisation}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ViewDrill);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ViewDrill from \"./ViewDrill\";\r\n\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction Game2({ store }) {\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  function selectDrill(lev) {\r\n    store.selectDrill(lev);\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          <List dense={dense}>\r\n            {store.filteredLevels.map(level => (\r\n              <ListItem key={level.id} onClick={() => selectDrill(level)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={level.name}\r\n                  secondary={secondary ? \"Secondary text\" : null}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                    <KeyboardArrowRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {store.selectedDrill && <ViewDrill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game2);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game2 from \"./Game2\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game2 store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Presence({ store }) {\r\n  const classes = useStyles();\r\n  const hasStat = store.hasStats;\r\n\r\n  if (!hasStat) {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.startTraining()}\r\n      >\r\n        Starta närvaro\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className={classes.paper}>\r\n      {store.players.map(player => (\r\n        <>\r\n          <ListItem onClick={() => player.toggleTraining()}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ImageIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={player.player}\r\n              secondary={player.myRatioText}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              {player.isTraining ? <VerifiedUserOutlinedIcon /> : \"\"}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default observer(Presence);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Division({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.updateLevelOnStat()}\r\n      >\r\n        Dela in\r\n      </Button>\r\n      {store.filteredPlayersInTrainingUn.length > 0 && (\r\n        <span>okatogoriserade</span>\r\n      )}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingUn.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.failRate}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Lätt {store.filteredPlayersInTrainingEasy.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingEasy.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Svår {store.filteredPlayersInTrainingHard.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingHard.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Division);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Trainings({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n\r\n  function Roll({ classes, store }) {\r\n    return <div>roll</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setPrevTraining()}\r\n        >\r\n          -\r\n        </Button>\r\n        {store.currentTraining.date} {store.currentTraining.trainingId} - {menu}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setNextTraining()}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(0)}\r\n        >\r\n          Närvaro\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(1)}\r\n        >\r\n          Dagens indelning\r\n        </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store} />}\r\n      {menu === 1 && <Division classes={classes} store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Trainings);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction PlayerProfile({ store, onBack }) {\r\n  const player = store.selectedPlayer;\r\n\r\n  function onUpdateRating(rating) {\r\n    player.setRating(rating);\r\n    store.updatePlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{player.player}</div>\r\n      </div>\r\n\r\n      <div onClick={() => onUpdateRating(\"1\")}>Nivå 1</div>\r\n      <div onClick={() => onUpdateRating(\"2\")}>Nivå 2</div>\r\n      <div onClick={() => onUpdateRating(\"3\")}>Nivå 3</div>\r\n      <div onClick={() => onUpdateRating(\"4\")}>Nivå 4</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PlayerProfile);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport PlayerProfile from \"./PlayerProfile\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Players({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function goToPlayer(player) {\r\n    store.selectPlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup>\r\n        {store.ratings.map(rating => (\r\n          <Button\r\n            key={rating.id}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => rating.toggleSelect()}\r\n          >\r\n            {rating.name} - {rating.selected ? \"x\" : \"\"}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div>-</div>\r\n      {!store.selectedPlayer && (\r\n        <List className={classes.paper}>\r\n          {store.filteredPlayers.map(player => (\r\n            <>\r\n              <ListItem key={player.id} onClick={() => goToPlayer(player)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={player.player}\r\n                  secondary={player.myRatioText}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedPlayer && (\r\n        <PlayerProfile store={store} onBack={() => goToPlayer(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Players);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 0;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random <= 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random <= 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random <= 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random <= 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Trainings from \"./Trainings\";\r\nimport Players from \"./Players\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<SettingsIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          {/* <Tab icon={<CalendarTodayIcon />} />\r\n          <Tab icon={<GroupIcon />} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Trainings store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Players store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    organisation: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get medias() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levelMedias.filter(x => x.level === this.level);\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst LevelMedia = types\r\n  .model(\"LevelMedia\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    description: types.maybeNull(types.string),\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string)\r\n  })\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get hasSharedPath() {\r\n      return true;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    }\r\n  }));\r\n\r\nexport default LevelMedia;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${x.publicId}.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Training = types.model(\"Training\", {\r\n  id: types.string,\r\n  trainingId: types.integer,\r\n  date: types.string\r\n});\r\n\r\nexport default Training;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.string,\r\n    player: types.string,\r\n    rating: types.string\r\n  })\r\n  .views(self => ({\r\n    get ratingText() {\r\n      return `Nivå ${self.rating} - ${self.benchmarkHard}, ${self.benchmarkHardValue}`;\r\n    },\r\n    get allStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.filter(\r\n        x =>\r\n          x.player === self.player &&\r\n          x.isTraining &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get myRatio() {\r\n      const allStat = self.allStat;\r\n\r\n      const allEasy = allStat.filter(x => x.level === 1).length;\r\n      const allHard = allStat.filter(x => x.level === 2).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      const a = { easy: 100 - al, hard: al };\r\n\r\n      if (isNaN(a.easy)) {\r\n        a.easy = 0;\r\n      }\r\n\r\n      if (isNaN(a.hard)) {\r\n        a.hard = 0;\r\n      }\r\n\r\n      return a;\r\n    },\r\n    get failRate() {\r\n      if (self.rating === \"1\") {\r\n        return 100 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 75 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 25 - self.myRatio.easy;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHard() {\r\n      if (self.rating === \"1\") {\r\n        return 0;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 25;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 75;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHardValue() {\r\n      const allStat = self.allStat;\r\n      const levelStore = getRoot(self);\r\n      if (self.player == \"Arvid Lilja\") {\r\n        const a = \"b\";\r\n      }\r\n\r\n      const allHard = allStat.filter(\r\n        x =>\r\n          x.level === 2 &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      ).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      if (!trainings) {\r\n        return self.benchmarkHard;\r\n      }\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      return al;\r\n    },\r\n    get diff() {\r\n      // Hur mycket svår tränbing de ska ha minus så mycket de har haft\r\n      let val = self.benchmarkHard - self.benchmarkHardValue;\r\n      if (val < 0) {\r\n        val = val * -1;\r\n      }\r\n      return val;\r\n    },\r\n    get myRatioText() {\r\n      return (\r\n        self.myRatio.easy +\r\n        \"% Lätt, \" +\r\n        self.myRatio.hard +\r\n        \"% Svår (\" +\r\n        self.ratio +\r\n        \")\"\r\n      );\r\n    },\r\n    get nextLevel() {\r\n      const myRatio = self.myRatio;\r\n      if (self.rating === \"1\") {\r\n        return 1;\r\n      }\r\n\r\n      if (self.benchmarkHardValue < self.benchmarkHard) {\r\n        return 2;\r\n      }\r\n\r\n      if (self.rating === \"2\") {\r\n        return myRatio.easy < 75 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return myRatio.easy < 50 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return myRatio.easy < 25 ? 1 : 2;\r\n      }\r\n      return 1;\r\n    },\r\n    get ratio() {\r\n      const allStat = self.allStat;\r\n      if (self.rating === \"1\") {\r\n        return \"100% Lätt\";\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return \"75% Lätt 1, 25% Svår\";\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return \"50% Lätt, 50 % Svår\";\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return \"25% Lätt, 75% Svår\";\r\n      }\r\n      return \"tom\";\r\n    },\r\n    get currentStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get isTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat.isTraining;\r\n      }\r\n      return false;\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setRating(rating) {\r\n      self.rating = rating;\r\n    },\r\n    toggleTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        stat.toggleIsTraining();\r\n        //stat.setLevel(self.nextLevel);\r\n        levelStore.updateStat(stat);\r\n      } else {\r\n        levelStore.insertStat({\r\n          trainingId: levelStore.currentTraining.trainingId,\r\n          player: self.player,\r\n          isTraining: true\r\n        });\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Rating = types\r\n  .model(\"Rating\", {\r\n    id: types.string,\r\n    name: types.string,\r\n    selected: types.boolean\r\n  })\r\n  .actions(self => ({\r\n    toggleSelect() {\r\n      self.selected = !self.selected;\r\n    }\r\n  }));\r\n\r\nexport default Rating;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Stat = types\r\n  .model(\"Stat\", {\r\n    id: types.string,\r\n    statId: types.integer,\r\n    trainingId: types.integer,\r\n    player: types.string,\r\n    isTraining: types.maybeNull(types.boolean),\r\n    level: types.maybeNull(types.integer)\r\n  })\r\n  .actions(self => ({\r\n    toggleIsTraining() {\r\n      self.isTraining = !self.isTraining;\r\n    },\r\n    setLevel(level) {\r\n      self.level = level;\r\n    }\r\n  }));\r\n\r\nexport default Stat;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport LevelMedia from \"./LevelMedia\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Training from \"./Training\";\r\nimport Player from \"./Player\";\r\nimport Rating from \"./Rating\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"BALLMASTERY\", name: \"DEL 1 - Teknik/Passningar\" },\r\n  { id: 1, category: \"PASSINGDRILLS\", name: \"DEL 2 - Kombinationer\" },\r\n  { id: 2, category: \"POSSESION\", name: \"DEL 3 - Possession/spel\" }\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    levelMedias: types.array(LevelMedia),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    trainings: types.array(Training),\r\n    players: types.array(Player),\r\n    ratings: types.array(Rating),\r\n    stats: types.array(Stat)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get filteredPlayersInTraining() {\r\n      var players = self.players.filter(x => x.isTraining);\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingEasy() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 1\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingHard() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 2\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingUn() {\r\n      var players = self.orderedPlayers.filter(\r\n        x => x.isTraining && x.currentStat.level === null\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayers() {\r\n      var players = self.players.filter(x =>\r\n        self.ratings.find(xx => xx.selected && xx.id === x.rating)\r\n      );\r\n\r\n      var byRating = players.slice(0);\r\n      byRating.sort((a, b) => {\r\n        var x = a.rating;\r\n        var y = b.rating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byRating.reverse();\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get currentTraining() {\r\n      return self.trainings[self.trainingIndex];\r\n    },\r\n    get hasStats() {\r\n      const stat = self.stats.find(\r\n        x => x.trainingId === self.currentTraining.trainingId\r\n      );\r\n\r\n      return stat ? true : false;\r\n    },\r\n    get orderedPlayers() {\r\n      var orderdPlayers = self.filteredPlayersInTraining.slice(0);\r\n      orderdPlayers.sort((a, b) => {\r\n        var x = a.diff;\r\n        var y = b.diff;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n\r\n      orderdPlayers.reverse();\r\n\r\n      orderdPlayers.forEach(x => {\r\n        console.log(\r\n          `Namn: ${x.player} Nuvarande diff: ${x.diff} _ Ska ha:  ${x.benchmarkHard} svår _ har ${x.benchmarkHardValue}`\r\n        );\r\n      });\r\n\r\n      return orderdPlayers;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedPlayer: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1,\r\n    trainingIndex: 3\r\n  }))\r\n  .actions(self => ({\r\n    setPrevTraining() {\r\n      console.log(self.trainingIndex);\r\n      if (self.trainingIndex !== 0) {\r\n        self.trainingIndex--;\r\n      }\r\n    },\r\n    setNextTraining() {\r\n      if (self.trainings.length - 1 !== self.trainingIndex) {\r\n        self.trainingIndex++;\r\n      }\r\n    },\r\n    setTrainingIndex(index) {\r\n      self.trainingIndex = index;\r\n    },\r\n    updateLevelOnStat() {\r\n      const count = self.filteredPlayersInTraining.length;\r\n      const easy = count / 2;\r\n      let easyCount = 0;\r\n\r\n      //lägg på rating 1 användare\r\n      self.orderedPlayers\r\n        .filter(x => x.rating === \"1\")\r\n        .forEach(x => {\r\n          x.currentStat.setLevel(1);\r\n          easyCount++;\r\n\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      self.orderedPlayers\r\n        .filter(x => x.rating !== \"1\")\r\n        .forEach(x => {\r\n          if (x.nextLevel === 1 && easyCount <= easy) {\r\n            x.currentStat.setLevel(1);\r\n            easyCount++;\r\n          } else {\r\n            x.currentStat.setLevel(2);\r\n          }\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      //lägg på rating 2 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"2\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(1);\r\n      //       easyCount++;\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 3 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"3\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 4 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"4\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      self.refresh();\r\n    },\r\n    startTraining() {\r\n      self.players.forEach(x => {\r\n        self.api.insertStat({\r\n          trainingId: self.currentTraining.trainingId,\r\n          player: x.player,\r\n          isTraining: false\r\n        });\r\n      });\r\n\r\n      self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectPlayer(player) {\r\n      self.selectedPlayer = player;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.fetchUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var levelMedias = await self.api.fetchLevelMedias();\r\n      var items = await self.api.fetchItems();\r\n      var players = await self.api.fetchPlayers();\r\n      var trainings = await self.api.fetchTrainings();\r\n      var stats = await self.api.fetchStats();\r\n      console.log(levelMedias);\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        levelMedias: [],\r\n        trainings: [],\r\n        stats: [],\r\n        players: [],\r\n        ratings: [\r\n          { id: \"1\", name: \"Nivå 1\", selected: true },\r\n          { id: \"2\", name: \"Nivå 2\", selected: true },\r\n          { id: \"3\", name: \"Nivå 3\", selected: true },\r\n          { id: \"4\", name: \"Nivå 4\", selected: true }\r\n        ]\r\n      };\r\n\r\n      stats.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.stats.push(elm.fields);\r\n      });\r\n\r\n      trainings.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.trainings.push(elm.fields);\r\n      });\r\n\r\n      players.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.players.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      levelMedias.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levelMedias.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    updatePlayer(player) {\r\n      self.api.updatePlayer(player);\r\n    },\r\n    insertStat(stat) {\r\n      self.api.insertStat(stat);\r\n\r\n      self.refresh();\r\n    },\r\n    updateStat(stat) {\r\n      self.api.updateStat(stat);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      const date = new Date();\r\n      const findNextTraining = data.trainings.find(\r\n        x => new Date(x.date) > date\r\n      );\r\n\r\n      self.trainingIndex = data.trainings.indexOf(findNextTraining);\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, values, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"raw\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: values.name,\r\n          description: values.description,\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1,\r\n          fileType: isImage ? \"jpg\" : \"mp4\"\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import { all } from \"q\";\r\nimport Airtable from \"airtable\";\r\n\r\nconst base = new Airtable({ apiKey: \"keyHQ5GM7ktar7YtG\" }).base(\r\n  \"app9IO48CYcfaIY4Z\"\r\n);\r\n\r\nAirtable.configure({ apiKey: \"YOUR_SECRET_API_KEY\" });\r\n\r\nconst config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  async fetchUsers() {\r\n    const data = await base(\"Users\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevels() {\r\n    const data = await base(\"Levels\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevelMedias() {\r\n    const data = await base(\"LevelMedia\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchTrainings() {\r\n    const data = await base(\"Trainings\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchStats() {\r\n    const data = await base(\"Stat\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchPlayers() {\r\n    const data = await base(\"Players\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchItems() {\r\n    const data = await base(\"Items\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  insertLevel(level) {\r\n    console.log(\"insert level\");\r\n    const u = {\r\n      id: level.id,\r\n      fields: level\r\n    };\r\n    this.create(\"Levels\", u);\r\n  },\r\n  insertStat(stat) {\r\n    console.log(\"insert stat\");\r\n    const u = {\r\n      id: stat.id,\r\n      fields: stat\r\n    };\r\n\r\n    this.create(\"Stat\", u);\r\n  },\r\n  create(table, item) {\r\n    base(table).create([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.getId());\r\n      });\r\n    });\r\n  },\r\n  updateStat(stat) {\r\n    const url = `${config.url}/Stat/${stat.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            trainingId: stat.trainingId,\r\n            player: stat.player,\r\n            isTraining: stat.isTraining,\r\n            level: stat.level\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  updateUser(user) {\r\n    console.log(user.JSON);\r\n    const u = {\r\n      id: user.id,\r\n      fields: {\r\n        name: user.name,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        profileImage: user.profileImage,\r\n        favoriteTeam: user.favoriteTeam,\r\n        playerTeam: user.playerTeam,\r\n        position: user.position,\r\n        shirtNumber: user.shirtNumber\r\n      }\r\n    };\r\n\r\n    this.update(\"Users\", u);\r\n  },\r\n  updatePlayer(player) {\r\n    const u = {\r\n      id: player.id,\r\n      fields: {\r\n        player: player.player,\r\n        rating: player.rating\r\n      }\r\n    };\r\n    this.update(\"Players\", u);\r\n  },\r\n  update(table, item) {\r\n    base(table).update([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.get(\"name\"));\r\n      });\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}