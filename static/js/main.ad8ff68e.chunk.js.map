{"version":3,"sources":["components/VideoControl.js","components/Drill.js","components/Game.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","videoId","react_default","a","createElement","YouTube","opts","width","playerVars","autoplay","enablejsapi","hasSharedPath","onClick","loop","playsInline","preload","muted","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Drill","classes","drill","selectedDrill","className","ArrowBackIos_default","selectDrill","Card","key","level","CardHeader","Avatar","aria-label","displayIdentifier","title","name","CardContent","fileType","components_VideoControl","Typography","variant","color","component","Chip","label","playerCount","details","description","_React$useState","React","useState","_React$useState2","Object","slicedToArray","onChange","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","getAvatarColor","category","backgroundColor","Boolean","selectCategory","selectedCategory","filteredLevels","length","i","visibility_sensor_default","style","root","flexGrow","maxWidth","demo","palette","background","paper","margin","spacing","dense","secondary","List","listCategories","cat","ListItem","goToDrill","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_Game","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","values","selectProfile","noValidate","autoComplete","TextField","disabled","value","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","setValues","handleChange","event","objectSpread","defineProperty","target","e","file","files","uploadImage","text","processFile","Button","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","Help_default","Person_default","components_Drills","components_Help","components_Profile","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","minPlayers","maxPlayers","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","date","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","initzialize","levelFilter","api","currentSeason","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","forEach","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context3","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","insertLevel","config","base","table","view","apiKey","maxRecords","url","TrainingApi","generalRequest","conf","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_x","_getUsers","body","Content-Type","_fetchLevels","_callee3","_fetchItems","_callee4","_context4","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad8ff68e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.videoId) {\r\n    const opts = {\r\n      width: \"100%\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        enablejsapi: 1\r\n      }\r\n    };\r\n    return <YouTube id={settings.id} videoId=\"7Y9nDetV0us\" opts={opts} />;\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Drill({ store }) {\r\n  const classes = useStyles();\r\n\r\n  const drill = store.selectedDrill;\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n        </div>\r\n        <div className=\"right\">övning</div>\r\n      </div>\r\n      <Card key={drill.level} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              {drill.displayIdentifier}\r\n            </Avatar>\r\n          }\r\n          title={drill.name}\r\n        />\r\n\r\n        <CardContent>\r\n          {drill.fileType === \"mp4\" && (\r\n            <VideoControl store={store} settings={drill} />\r\n          )}\r\n          {drill.fileType === \"jpg\" && <img src={drill.src} />}\r\n\r\n          <div className=\"card-content\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              <Chip label={drill.playerCount} />\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {drill.details}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n              Gör så här\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {drill.description}\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Drill from \"./Drill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function goToDrill(level) {\r\n    store.selectDrill(level);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    >\r\n                      {level.displayIdentifier}\r\n                    </Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") && (\r\n                    <img src={level.src} />\r\n                  )}\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {store.selectedDrill && <Drill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game from \"./Game\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    displayIdentifier: types.integer,\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${\r\n        self.fileType\r\n      }?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${\r\n        self.fileType\r\n      }?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${\r\n        self.posterPath\r\n      }/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"BALLMASTERY\", name: \"DEL 1 - Teknik/Passningar\" },\r\n  { id: 1, category: \"PASSINGDRILLS\", name: \"DEL 2 - Kombinationer\" },\r\n  { id: 2, category: \"POSSESION\", name: \"DEL 3 - Possession/spel\" }\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1\r\n  }))\r\n  .actions(self => ({\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: \"Namn\",\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 100,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    return new Request(\r\n      `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${\r\n        conf.view\r\n      }`,\r\n      {\r\n        method: \"get\",\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${conf.apiKey}`\r\n        })\r\n      }\r\n    );\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    return this.response({ table: \"Levels\" });\r\n  },\r\n  async fetchItems() {\r\n    return this.response({ table: \"Items\" });\r\n  },\r\n  insertLevel(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}