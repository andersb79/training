{"version":3,"sources":["components/VideoControl.js","components/EditDrill.js","components/Game.js","components/ViewDrill.js","components/Game2.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Presence.js","components/Division.js","components/Trainings.js","components/PlayerProfile.js","components/Players.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/Training.js","models/Player.js","models/Rating.js","models/Stat.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","videoId","react_default","a","createElement","YouTube","opts","width","playerVars","autoplay","enablejsapi","hasSharedPath","onClick","loop","playsInline","preload","muted","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","onBack","_React$useState","React","useState","name","description","details","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","ArrowBackIos_default","selectedCategory","TextField","label","onChange","margin","e","file","files","processFile","text","Button","variant","VideoCall_default","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","level","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","_React$useState5","Boolean","_React$useState6","newDrill","setNewDrill","getAvatarColor","category","backgroundColor","selectCategory","filteredLevels","length","AddCircle_default","i","visibility_sensor_default","key","Card","CardHeader","Avatar","aria-label","style","title","CardContent","fileType","components_VideoControl","Chip","playerCount","Typography","color","component","components_EditDrill","selectedDrill","selectDrill","minPlayers","maxPlayers","organisation","dense","secondary","List","ListItem","lev","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_ViewDrill","root","flexGrow","maxWidth","demo","palette","background","paper","spacing","listCategories","cat","goToDrill","components_Game2","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","selectProfile","noValidate","autoComplete","disabled","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","uploadImage","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","hasStats","players","player","toggleTraining","myRatioText","isTraining","VerifiedUserOutlined_default","startTraining","updateLevelOnStat","filteredPlayersInTrainingUn","failRate","filteredPlayersInTrainingEasy","currentStat","filteredPlayersInTrainingHard","setMenu","setPrevTraining","currentTraining","date","trainingId","setNextTraining","ButtonGroup","components_Presence","components_Division","selectedPlayer","onUpdateRating","rating","setRating","updatePlayer","goToPlayer","selectPlayer","ratings","toggleSelect","selected","filteredPlayers","components_PlayerProfile","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListBulleted_default","CalendarToday_default","Group_default","Settings_default","Person_default","components_Drills","components_Trainings","components_Players","components_Help","components_Profile","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","Training","Player","ratingText","benchmarkHard","benchmarkHardValue","allStat","stat","stats","myRatio","al","easy","hard","isNaN","allHard","trainings","diff","val","ratio","nextLevel","toggleIsTraining","updateStat","insertStat","Rating","Stat","statId","setLevel","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","filteredPlayersInTraining","orderedPlayers","byRating","xx","trainingIndex","orderdPlayers","forEach","initzialize","levelFilter","api","currentSeason","setTrainingIndex","index","easyCount","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","fetchUsers","sent","fetchLevels","fetchItems","fetchPlayers","fetchTrainings","fetchStats","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","findNextTraining","_context3","indexOf","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","isImage","uploadUrl","insertLevel","base","Airtable","apiKey","configure","config","TrainingApi","_fetchUsers","select","view","all","_fetchLevels","_fetchTrainings","_callee3","_fetchStats","_callee4","_context4","_fetchPlayers","_callee5","_context5","_fetchItems","_callee6","_context6","u","table","err","records","record","getId","url","fetch","Request","method","body","headers","Headers","Authorization","Content-Type","update","get","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46c36bf3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.videoId) {\r\n    const opts = {\r\n      width: \"100%\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        enablejsapi: 1\r\n      }\r\n    };\r\n    return <YouTube id={settings.id} videoId={settings.videoId} opts={opts} />;\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction EditDrill({ store, onBack }) {\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    details: \"\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, values, text => {\r\n      onBack();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-drill\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedCategory.name}</div>\r\n      </div>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Namn\"\r\n        value={values.name}\r\n        onChange={handleChange(\"name\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        value={values.description}\r\n        onChange={handleChange(\"description\")}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"details\"\r\n        label=\"details\"\r\n        value={values.details}\r\n        onChange={handleChange(\"details\")}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            Ladda upp <VideoIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(EditDrill);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    if (level.videoId) {\r\n      return;\r\n    }\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (videoElm.play) {\r\n        if (isVisible) {\r\n          videoElm.play();\r\n        } else {\r\n          videoElm.pause();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [newDrill, setNewDrill] = React.useState(false);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function addDrill() {\r\n    setNewDrill(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!newDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n            <div className=\"action\">\r\n              <AddCircleIcon onClick={addDrill} />\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                // onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  {level.fileType === \"mp4\" && (\r\n                    <VideoControl store={store} settings={level} />\r\n                  )}\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    level.hasSharedPath && <img src={level.src} />}\r\n\r\n                  {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n                    !level.hasSharedPath && (\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={level.publicId}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    )}\r\n\r\n                  <div className=\"card-content\">\r\n                    <Chip label={level.playerCount} />\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.description}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {newDrill && (\r\n        <EditDrill store={store} onBack={() => setNewDrill(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nfunction ViewDrill({ store, onBack }) {\r\n  const level = store.selectedDrill;\r\n  return (\r\n    <div className=\"game\">\r\n      <div>\r\n        <div className=\"back\">\r\n          <div className=\"left\">\r\n            <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n          </div>\r\n          <div className=\"right\">{store.selectedCategory.name}</div>\r\n        </div>\r\n        <div className=\"drill\">\r\n          <div>{store.selectedDrill.name}</div>\r\n          {level.fileType === \"mp4\" && (\r\n            <VideoControl store={store} settings={level} />\r\n          )}\r\n          {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            level.hasSharedPath && (\r\n              <img style={{ width: \"100%\", height: \"100%\" }} src={level.src} />\r\n            )}\r\n\r\n          {/* {(level.fileType === \"jpg\" || level.fileType === \"gif\") &&\r\n            !level.hasSharedPath && (\r\n              <Image\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            )} */}\r\n          <div className=\"desc\">Setup</div>\r\n          <div className=\"drill-desc\">{level.details}</div>\r\n          <div className=\"desc\">Spelare</div>\r\n          <div className=\"drill-desc\">\r\n            {level.minPlayers}-{level.maxPlayers}\r\n          </div>\r\n          <div className=\"desc\">Organisation</div>\r\n          <div className=\"drill-desc\">{level.organisation}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ViewDrill);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport EditDrill from \"./EditDrill\";\r\nimport { observable } from \"mobx\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ViewDrill from \"./ViewDrill\";\r\n\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction Game2({ store }) {\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  function selectDrill(lev) {\r\n    store.selectDrill(lev);\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          <List dense={dense}>\r\n            {store.filteredLevels.map(level => (\r\n              <ListItem key={level.id} onClick={() => selectDrill(level)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={level.name}\r\n                  secondary={secondary ? \"Secondary text\" : null}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                    <KeyboardArrowRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {store.selectedDrill && <ViewDrill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game2);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game2 from \"./Game2\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game2 store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Presence({ store }) {\r\n  const classes = useStyles();\r\n  const hasStat = store.hasStats;\r\n\r\n  if (!hasStat) {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.startTraining()}\r\n      >\r\n        Starta närvaro\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className={classes.paper}>\r\n      {store.players.map(player => (\r\n        <>\r\n          <ListItem onClick={() => player.toggleTraining()}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ImageIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={player.player}\r\n              secondary={player.myRatioText}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              {player.isTraining ? <VerifiedUserOutlinedIcon /> : \"\"}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default observer(Presence);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Division({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => store.updateLevelOnStat()}\r\n      >\r\n        Dela in\r\n      </Button>\r\n      {store.filteredPlayersInTrainingUn.length > 0 && (\r\n        <span>okatogoriserade</span>\r\n      )}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingUn.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.failRate}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Lätt {store.filteredPlayersInTrainingEasy.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingEasy.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n      Svår {store.filteredPlayersInTrainingHard.length}\r\n      <List className={classes.paper}>\r\n        {store.filteredPlayersInTrainingHard.map(player => (\r\n          <>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={player.player}\r\n                secondary={player.currentStat.level}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Division);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Presence from \"./Presence\";\r\nimport Division from \"./Division\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Trainings({ store }) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = React.useState(0);\r\n\r\n  function Roll({ classes, store }) {\r\n    return <div>roll</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setPrevTraining()}\r\n        >\r\n          -\r\n        </Button>\r\n        {store.currentTraining.date} {store.currentTraining.trainingId} - {menu}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => store.setNextTraining()}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(0)}\r\n        >\r\n          Närvaro\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setMenu(1)}\r\n        >\r\n          Dagens indelning\r\n        </Button>\r\n      </ButtonGroup>\r\n      {menu === 0 && <Presence classes={classes} store={store} />}\r\n      {menu === 1 && <Division classes={classes} store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Trainings);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction PlayerProfile({ store, onBack }) {\r\n  const player = store.selectedPlayer;\r\n\r\n  function onUpdateRating(rating) {\r\n    player.setRating(rating);\r\n    store.updatePlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => onBack()} />\r\n        </div>\r\n        <div className=\"right\">{player.player}</div>\r\n      </div>\r\n\r\n      <div onClick={() => onUpdateRating(\"1\")}>Nivå 1</div>\r\n      <div onClick={() => onUpdateRating(\"2\")}>Nivå 2</div>\r\n      <div onClick={() => onUpdateRating(\"3\")}>Nivå 3</div>\r\n      <div onClick={() => onUpdateRating(\"4\")}>Nivå 4</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PlayerProfile);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport PlayerProfile from \"./PlayerProfile\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: \"60px\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Players({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function goToPlayer(player) {\r\n    store.selectPlayer(player);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup>\r\n        {store.ratings.map(rating => (\r\n          <Button\r\n            key={rating.id}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => rating.toggleSelect()}\r\n          >\r\n            {rating.name} - {rating.selected ? \"x\" : \"\"}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div>-</div>\r\n      {!store.selectedPlayer && (\r\n        <List className={classes.paper}>\r\n          {store.filteredPlayers.map(player => (\r\n            <>\r\n              <ListItem key={player.id} onClick={() => goToPlayer(player)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={player.player}\r\n                  secondary={player.myRatioText}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedPlayer && (\r\n        <PlayerProfile store={store} onBack={() => goToPlayer(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Players);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 0;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random <= 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random <= 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random <= 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random <= 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Trainings from \"./Trainings\";\r\nimport Players from \"./Players\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(2);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<FormatListBulletedIcon />} />\r\n          <Tab icon={<CalendarTodayIcon />} />\r\n          <Tab icon={<GroupIcon />} />\r\n          <Tab icon={<SettingsIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Trainings store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Players store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.maybeNull(types.string),\r\n    organisation: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    minPlayers: types.maybeNull(types.integer),\r\n    maxPlayers: types.maybeNull(types.integer),\r\n    videoId: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get src() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/Lpass.${self.fileType}?raw=1`;\r\n    },\r\n    get playerCount() {\r\n      if (!self.minPlayers) {\r\n        return \"Alla\";\r\n      }\r\n      if (self.minPlayers === self.maxPlayers) {\r\n        return `Antal spelare: ${self.minPlayers}`;\r\n      }\r\n      return `Antal spelare: ${self.minPlayers} - ${self.maxPlayers}`;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${self.fileType}?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${self.posterPath}/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${x.publicId}.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Training = types.model(\"Training\", {\r\n  id: types.string,\r\n  trainingId: types.integer,\r\n  date: types.string\r\n});\r\n\r\nexport default Training;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Player = types\r\n  .model(\"Player\", {\r\n    id: types.string,\r\n    player: types.string,\r\n    rating: types.string\r\n  })\r\n  .views(self => ({\r\n    get ratingText() {\r\n      return `Nivå ${self.rating} - ${self.benchmarkHard}, ${self.benchmarkHardValue}`;\r\n    },\r\n    get allStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.filter(\r\n        x =>\r\n          x.player === self.player &&\r\n          x.isTraining &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get myRatio() {\r\n      const allStat = self.allStat;\r\n\r\n      const allEasy = allStat.filter(x => x.level === 1).length;\r\n      const allHard = allStat.filter(x => x.level === 2).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      const a = { easy: 100 - al, hard: al };\r\n\r\n      if (isNaN(a.easy)) {\r\n        a.easy = 0;\r\n      }\r\n\r\n      if (isNaN(a.hard)) {\r\n        a.hard = 0;\r\n      }\r\n\r\n      return a;\r\n    },\r\n    get failRate() {\r\n      if (self.rating === \"1\") {\r\n        return 100 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 75 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50 - self.myRatio.easy;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 25 - self.myRatio.easy;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHard() {\r\n      if (self.rating === \"1\") {\r\n        return 0;\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return 25;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return 50;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return 75;\r\n      }\r\n      return 1;\r\n    },\r\n    get benchmarkHardValue() {\r\n      const allStat = self.allStat;\r\n      const levelStore = getRoot(self);\r\n      if (self.player == \"Arvid Lilja\") {\r\n        const a = \"b\";\r\n      }\r\n\r\n      const allHard = allStat.filter(\r\n        x =>\r\n          x.level === 2 &&\r\n          x.trainingId !== levelStore.currentTraining.trainingId\r\n      ).length;\r\n\r\n      const trainings = allStat.length;\r\n\r\n      if (!trainings) {\r\n        return self.benchmarkHard;\r\n      }\r\n\r\n      const al = (allHard / trainings) * 100;\r\n\r\n      return al;\r\n    },\r\n    get diff() {\r\n      // Hur mycket svår tränbing de ska ha minus så mycket de har haft\r\n      let val = self.benchmarkHard - self.benchmarkHardValue;\r\n      if (val < 0) {\r\n        val = val * -1;\r\n      }\r\n      return val;\r\n    },\r\n    get myRatioText() {\r\n      return (\r\n        self.myRatio.easy +\r\n        \"% Lätt, \" +\r\n        self.myRatio.hard +\r\n        \"% Svår (\" +\r\n        self.ratio +\r\n        \")\"\r\n      );\r\n    },\r\n    get nextLevel() {\r\n      const myRatio = self.myRatio;\r\n      if (self.rating === \"1\") {\r\n        return 1;\r\n      }\r\n\r\n      if (self.benchmarkHardValue < self.benchmarkHard) {\r\n        return 2;\r\n      }\r\n\r\n      if (self.rating === \"2\") {\r\n        return myRatio.easy < 75 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return myRatio.easy < 50 ? 1 : 2;\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return myRatio.easy < 25 ? 1 : 2;\r\n      }\r\n      return 1;\r\n    },\r\n    get ratio() {\r\n      const allStat = self.allStat;\r\n      if (self.rating === \"1\") {\r\n        return \"100% Lätt\";\r\n      }\r\n      if (self.rating === \"2\") {\r\n        return \"75% Lätt 1, 25% Svår\";\r\n      }\r\n      if (self.rating === \"3\") {\r\n        return \"50% Lätt, 50 % Svår\";\r\n      }\r\n      if (self.rating === \"4\") {\r\n        return \"25% Lätt, 75% Svår\";\r\n      }\r\n      return \"tom\";\r\n    },\r\n    get currentStat() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat;\r\n      }\r\n      return null;\r\n    },\r\n    get isTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        return stat.isTraining;\r\n      }\r\n      return false;\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setRating(rating) {\r\n      self.rating = rating;\r\n    },\r\n    toggleTraining() {\r\n      const levelStore = getRoot(self);\r\n      const stat = levelStore.stats.find(\r\n        x =>\r\n          x.trainingId === levelStore.currentTraining.trainingId &&\r\n          x.player === self.player\r\n      );\r\n      if (stat) {\r\n        stat.toggleIsTraining();\r\n        //stat.setLevel(self.nextLevel);\r\n        levelStore.updateStat(stat);\r\n      } else {\r\n        levelStore.insertStat({\r\n          trainingId: levelStore.currentTraining.trainingId,\r\n          player: self.player,\r\n          isTraining: true\r\n        });\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default Player;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Rating = types\r\n  .model(\"Rating\", {\r\n    id: types.string,\r\n    name: types.string,\r\n    selected: types.boolean\r\n  })\r\n  .actions(self => ({\r\n    toggleSelect() {\r\n      self.selected = !self.selected;\r\n    }\r\n  }));\r\n\r\nexport default Rating;\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst Stat = types\r\n  .model(\"Stat\", {\r\n    id: types.string,\r\n    statId: types.integer,\r\n    trainingId: types.integer,\r\n    player: types.string,\r\n    isTraining: types.maybeNull(types.boolean),\r\n    level: types.maybeNull(types.integer)\r\n  })\r\n  .actions(self => ({\r\n    toggleIsTraining() {\r\n      self.isTraining = !self.isTraining;\r\n    },\r\n    setLevel(level) {\r\n      self.level = level;\r\n    }\r\n  }));\r\n\r\nexport default Stat;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Training from \"./Training\";\r\nimport Player from \"./Player\";\r\nimport Rating from \"./Rating\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"BALLMASTERY\", name: \"DEL 1 - Teknik/Passningar\" },\r\n  { id: 1, category: \"PASSINGDRILLS\", name: \"DEL 2 - Kombinationer\" },\r\n  { id: 2, category: \"POSSESION\", name: \"DEL 3 - Possession/spel\" }\r\n  // { id: 3, category: \"CONEDRILLS\", name: \"slask\" }\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    trainings: types.array(Training),\r\n    players: types.array(Player),\r\n    ratings: types.array(Rating),\r\n    stats: types.array(Stat)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get filteredPlayersInTraining() {\r\n      var players = self.players.filter(x => x.isTraining);\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingEasy() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 1\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingHard() {\r\n      var players = self.players.filter(\r\n        x => x.isTraining && x.currentStat.level === 2\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayersInTrainingUn() {\r\n      var players = self.orderedPlayers.filter(\r\n        x => x.isTraining && x.currentStat.level === null\r\n      );\r\n\r\n      return players;\r\n    },\r\n    get filteredPlayers() {\r\n      var players = self.players.filter(x =>\r\n        self.ratings.find(xx => xx.selected && xx.id === x.rating)\r\n      );\r\n\r\n      var byRating = players.slice(0);\r\n      byRating.sort((a, b) => {\r\n        var x = a.rating;\r\n        var y = b.rating;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byRating.reverse();\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    },\r\n    get currentTraining() {\r\n      return self.trainings[self.trainingIndex];\r\n    },\r\n    get hasStats() {\r\n      const stat = self.stats.find(\r\n        x => x.trainingId === self.currentTraining.trainingId\r\n      );\r\n\r\n      return stat ? true : false;\r\n    },\r\n    get orderedPlayers() {\r\n      var orderdPlayers = self.filteredPlayersInTraining.slice(0);\r\n      orderdPlayers.sort((a, b) => {\r\n        var x = a.diff;\r\n        var y = b.diff;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n\r\n      orderdPlayers.reverse();\r\n\r\n      orderdPlayers.forEach(x => {\r\n        console.log(\r\n          `Namn: ${x.player} Nuvarande diff: ${x.diff} _ Ska ha:  ${x.benchmarkHard} svår _ har ${x.benchmarkHardValue}`\r\n        );\r\n      });\r\n\r\n      return orderdPlayers;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedPlayer: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1,\r\n    trainingIndex: 3\r\n  }))\r\n  .actions(self => ({\r\n    setPrevTraining() {\r\n      console.log(self.trainingIndex);\r\n      if (self.trainingIndex !== 0) {\r\n        self.trainingIndex--;\r\n      }\r\n    },\r\n    setNextTraining() {\r\n      if (self.trainings.length - 1 !== self.trainingIndex) {\r\n        self.trainingIndex++;\r\n      }\r\n    },\r\n    setTrainingIndex(index) {\r\n      self.trainingIndex = index;\r\n    },\r\n    updateLevelOnStat() {\r\n      const count = self.filteredPlayersInTraining.length;\r\n      const easy = count / 2;\r\n      let easyCount = 0;\r\n\r\n      //lägg på rating 1 användare\r\n      self.orderedPlayers\r\n        .filter(x => x.rating === \"1\")\r\n        .forEach(x => {\r\n          x.currentStat.setLevel(1);\r\n          easyCount++;\r\n\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      self.orderedPlayers\r\n        .filter(x => x.rating !== \"1\")\r\n        .forEach(x => {\r\n          if (x.nextLevel === 1 && easyCount <= easy) {\r\n            x.currentStat.setLevel(1);\r\n            easyCount++;\r\n          } else {\r\n            x.currentStat.setLevel(2);\r\n          }\r\n          self.updateStat(x.currentStat);\r\n        });\r\n\r\n      //lägg på rating 2 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"2\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(1);\r\n      //       easyCount++;\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 3 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"3\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      // //lägg på rating 4 användare\r\n      // self.orderedPlayers\r\n      //   .filter(x => x.rating === \"4\")\r\n      //   .forEach(x => {\r\n      //     if (easyCount >= easy) {\r\n      //       x.currentStat.setLevel(2);\r\n      //     } else {\r\n      //       x.currentStat.setLevel(x.nextLevel);\r\n      //       if (x.nextLevel === 1) {\r\n      //         easyCount++;\r\n      //       }\r\n      //     }\r\n\r\n      //     self.updateStat(x.currentStat);\r\n      //   });\r\n\r\n      self.refresh();\r\n    },\r\n    startTraining() {\r\n      self.players.forEach(x => {\r\n        self.api.insertStat({\r\n          trainingId: self.currentTraining.trainingId,\r\n          player: x.player,\r\n          isTraining: false\r\n        });\r\n      });\r\n\r\n      self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectPlayer(player) {\r\n      self.selectedPlayer = player;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.fetchUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n      var players = await self.api.fetchPlayers();\r\n      var trainings = await self.api.fetchTrainings();\r\n      var stats = await self.api.fetchStats();\r\n      console.log(stats);\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        trainings: [],\r\n        stats: [],\r\n        players: [],\r\n        ratings: [\r\n          { id: \"1\", name: \"Nivå 1\", selected: true },\r\n          { id: \"2\", name: \"Nivå 2\", selected: true },\r\n          { id: \"3\", name: \"Nivå 3\", selected: true },\r\n          { id: \"4\", name: \"Nivå 4\", selected: true }\r\n        ]\r\n      };\r\n\r\n      stats.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.stats.push(elm.fields);\r\n      });\r\n\r\n      trainings.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.trainings.push(elm.fields);\r\n      });\r\n\r\n      players.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.players.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    updatePlayer(player) {\r\n      self.api.updatePlayer(player);\r\n    },\r\n    insertStat(stat) {\r\n      self.api.insertStat(stat);\r\n\r\n      self.refresh();\r\n    },\r\n    updateStat(stat) {\r\n      self.api.updateStat(stat);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      const date = new Date();\r\n      const findNextTraining = data.trainings.find(\r\n        x => new Date(x.date) > date\r\n      );\r\n\r\n      self.trainingIndex = data.trainings.indexOf(findNextTraining);\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, values, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      const isImage =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\" ? true : false;\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n\r\n      if (!isImage) {\r\n        formdata.append(\"resource_type\", \"raw\");\r\n      }\r\n\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      const uploadUrl = isImage\r\n        ? \"https://api.cloudinary.com/v1_1/deolievif/image/upload\"\r\n        : \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\";\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", uploadUrl, true);\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: values.name,\r\n          description: values.description,\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1,\r\n          fileType: isImage ? \"jpg\" : \"mp4\"\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import { all } from \"q\";\r\nimport Airtable from \"airtable\";\r\n\r\nconst base = new Airtable({ apiKey: \"keyHQ5GM7ktar7YtG\" }).base(\r\n  \"app9IO48CYcfaIY4Z\"\r\n);\r\n\r\nAirtable.configure({ apiKey: \"YOUR_SECRET_API_KEY\" });\r\n\r\nconst config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  async fetchUsers() {\r\n    const data = await base(\"Users\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchLevels() {\r\n    const data = await base(\"Levels\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchTrainings() {\r\n    const data = await base(\"Trainings\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchStats() {\r\n    const data = await base(\"Stat\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchPlayers() {\r\n    const data = await base(\"Players\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  async fetchItems() {\r\n    const data = await base(\"Items\")\r\n      .select({ view: \"Grid view\" })\r\n      .all();\r\n\r\n    return data;\r\n  },\r\n  insertLevel(level) {\r\n    console.log(\"insert level\");\r\n    const u = {\r\n      id: level.id,\r\n      fields: level\r\n    };\r\n    this.create(\"Levels\", u);\r\n  },\r\n  insertStat(stat) {\r\n    console.log(\"insert stat\");\r\n    const u = {\r\n      id: stat.id,\r\n      fields: stat\r\n    };\r\n\r\n    this.create(\"Stat\", u);\r\n  },\r\n  create(table, item) {\r\n    base(table).create([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.getId());\r\n      });\r\n    });\r\n  },\r\n  updateStat(stat) {\r\n    const url = `${config.url}/Stat/${stat.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            trainingId: stat.trainingId,\r\n            player: stat.player,\r\n            isTraining: stat.isTraining,\r\n            level: stat.level\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  updateUser(user) {\r\n    console.log(user.JSON);\r\n    const u = {\r\n      id: user.id,\r\n      fields: {\r\n        name: user.name,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        profileImage: user.profileImage,\r\n        favoriteTeam: user.favoriteTeam,\r\n        playerTeam: user.playerTeam,\r\n        position: user.position,\r\n        shirtNumber: user.shirtNumber\r\n      }\r\n    };\r\n\r\n    this.update(\"Users\", u);\r\n  },\r\n  updatePlayer(player) {\r\n    const u = {\r\n      id: player.id,\r\n      fields: {\r\n        player: player.player,\r\n        rating: player.rating\r\n      }\r\n    };\r\n    this.update(\"Players\", u);\r\n  },\r\n  update(table, item) {\r\n    base(table).update([item], function(err, records) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      records.forEach(function(record) {\r\n        console.log(record.get(\"name\"));\r\n      });\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}