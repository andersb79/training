{"version":3,"sources":["components/VideoControl.js","components/Game.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","Api/SkillstaApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","level","document","getElementById","id","requestFullscreen","hasSharedPath","react_default","a","createElement","onClick","loop","playsInline","preload","muted","width","height","src","dropboxLink","type","lib","cloudName","publicId","poster","ITEM_HEIGHT","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Game","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","onChange","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","handleClose","option","setLevelFilter","getAvatarColor","category","backgroundColor","className","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","FilterList_default","levelFilter","text","Menu","keepMounted","onClose","PaperProps","style","maxHeight","levelFilters","MenuItem","key","selected","filteredLevels","i","visibility_sensor_default","Card","CardHeader","Avatar","title","name","subheader","displayText","CardContent","components_VideoControl","Typography","variant","color","component","details","Collapse","in","timeout","unmountOnExit","e","file","target","files","processFile","alert","Button","VideoCall_default","root","display","flexWrap","justifyContent","overflow","palette","background","paper","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","length","tile","img","alt","GridListTileBar","subtitle","challange","container","textField","spacing","marginRight","dense","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","values","ArrowBackIos_default","selectProfile","noValidate","autoComplete","TextField","disabled","label","value","margin","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","hasComment","fontSize","comment","CardActions","components_ProfileReadOnly","onLogout","loggedIn","setValues","handleChange","objectSpread","defineProperty","uploadImage","Image_default","updateUser","window","localStorage","removeItem","flexGrow","Fragment","textAlign","gutterBottom","List","highScoreList","ListItem","ListItemAvatar","ListItemText","primary","secondary","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Home_default","Person_default","Tablet_default","location","reload","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListNumbered_default","Help_default","components_ItemList","components_HighScore","components_Profile","components_Help","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","season","sharedPath","maybeNull","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","date","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","LevelStore","array","byHighscore","slice","sort","b","y","reverse","currentSeason","initzialize","api","app","profile","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","forEach","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context3","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","onload","myObj","responseText","public_id","send","insertItem","config","base","table","view","apiKey","maxRecords","url","SkillstaApi","generalRequest","conf","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_x","_getUsers","body","Content-Type","_fetchLevels","_callee3","_fetchItems","_callee4","_context4","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21c2a735.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).requestFullscreen();\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    store.setLevelFilter(option);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <IconButton\r\n        aria-label=\"More\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <FilterListIcon />\r\n        {store.levelFilter.text}\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200\r\n          }\r\n        }}\r\n      >\r\n        {store.levelFilters.map(option => (\r\n          <MenuItem\r\n            key={option.id}\r\n            selected={option.id === store.levelFilter}\r\n            onClick={() => handleClose(option)}\r\n          >\r\n            {option.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n\r\n      {store.filteredLevels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.id}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"Recipe\"\r\n                  style={getAvatarColor(level)}\r\n                  className={classes.avatar}\r\n                >\r\n                  {level.level}\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.displayText}\r\n            />\r\n\r\n            <CardContent>\r\n              <VideoControl store={store} settings={level} />\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <div className=\"card-content2\">\r\n                  <div className=\"fileinputs\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"file\"\r\n                      onChange={e => processFile(e, level)}\r\n                    />\r\n                    <div className=\"fakefile\">\r\n                      <Button variant=\"outlined\">\r\n                        Ladda upp <VideoIcon />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"favoriteTeam\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          onChange={handleChange(\"favoriteTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"playerTeam\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          onChange={handleChange(\"playerTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"position\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          onChange={handleChange(\"position\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"shirtNumber\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          onChange={handleChange(\"shirtNumber\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography paragraph>Säsong 1:</Typography>\r\n\r\n      <Typography paragraph>Varje säsong har 20 utmaningar.</Typography>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <HomeIcon /> Hem\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens användaruppladde filmer.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <AccountCircleIcon />\r\n          Under utvärdering för att se om man klarat det.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <StarIcon />\r\n          Klarad utmaning\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <ThumbDownIcon />\r\n          Utmaning misslyckad. Bara att försöka igen. Kanske hade du inte flytet\r\n          i utmaningen, eller missförtått något. Kontrollera videon och\r\n          instruktionerna och försök igen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Om du klickar på personens namn så kan du se profilen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Klicka på videon för att se den i helskärm.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Utmaningar\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens utmaningar. Det finns 3 olika\r\n          nivåer. Lätt, medium, svår.\r\n        </Typography>\r\n        <Typography paragraph>10 lätta övningar, 5 poäng var</Typography>\r\n        <Typography paragraph>5 medium övningar, 10 poäng var</Typography>\r\n        <Typography paragraph>5 svåra övningar, 20 poäng var</Typography>\r\n        <Typography paragraph>\r\n          <VideoIcon />\r\n          Klicka på denna för att ladda upp en film. Filma alltid i horisontellt\r\n          läge.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Topplistan\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Varje säsong består av maximalt 200 poäng. Här visas vem som fått\r\n          flest poäng.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <PersonIcon /> Profil\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här kan du ladda upp din profilbild och andra användarinställningar.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<HomeIcon />} />\r\n          <Tab icon={<StarIcon />} />\r\n          <Tab icon={<FormatListNumberedIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <HighScore store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"skillsta.jpg\" alt=\"skillsta\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string,\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      if (self.levelFilter.id === 0) {\r\n        return self.levels.filter(x => x.season === self.currentSeason);\r\n      }\r\n\r\n      if (self.levelFilter.id === 1) {\r\n        return self.levels.filter(\r\n          x => !x.isDone && x.season === self.currentSeason\r\n        );\r\n      }\r\n\r\n      if (self.levelFilter.id === 2) {\r\n        return self.levels.filter(\r\n          x => x.isDone && x.season === self.currentSeason\r\n        );\r\n      }\r\n\r\n      return [];\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedProfile: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1\r\n  }))\r\n  .actions(self => ({\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectProfile(profile) {\r\n      self.selectedProfile = profile;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const item = {\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id,\r\n          level: level.level,\r\n          status: \"WAITINGFORAPPROVAL\"\r\n        };\r\n\r\n        self.api.insertItem(item);\r\n\r\n        self.refresh();\r\n        //self.addItem(item);\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 100,\r\n  url: \"https://api.airtable.com/v0/appC7N77wl4iVEXGD\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    return new Request(\r\n      `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${\r\n        conf.view\r\n      }`,\r\n      {\r\n        method: \"get\",\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${conf.apiKey}`\r\n        })\r\n      }\r\n    );\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    return this.response({ table: \"Levels\" });\r\n  },\r\n  async fetchItems() {\r\n    return this.response({ table: \"Items\" });\r\n  },\r\n  insertItem(item) {\r\n    fetch(\r\n      new Request(`${config.url}/Items`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: item\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/SkillstaApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}