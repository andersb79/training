{"version":3,"sources":["components/VideoControl.js","components/Drill.js","components/Game.js","components/Drills.js","components/VideoList.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/HighScore.js","components/Help.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","Api/TrainingApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","hasSharedPath","react_default","a","createElement","onClick","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Drill","classes","drill","selectedDrill","className","ArrowBackIos_default","selectDrill","Card","key","level","CardHeader","Avatar","aria-label","displayIdentifier","title","name","CardContent","components_VideoControl","Typography","variant","color","component","details","_React$useState","React","useState","_React$useState2","Object","slicedToArray","onChange","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","getAvatarColor","category","backgroundColor","Boolean","selectCategory","selectedCategory","filteredLevels","length","i","visibility_sensor_default","goToDrill","style","root","flexGrow","maxWidth","demo","palette","background","paper","margin","spacing","dense","secondary","List","listCategories","cat","ListItem","ListItemAvatar","alt","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","KeyboardArrowRight_default","components_Game","display","flexWrap","justifyContent","overflow","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","tile","img","GridListTileBar","subtitle","challange","container","textField","marginRight","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","position","shirtNumber","values","selectProfile","noValidate","autoComplete","TextField","disabled","label","value","components_VideoList","red","item","ItemStatusAction","_ref2","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","items","offset","top","refresh","onChangeRefresh","filteredItems","action","subheader","hasComment","fontSize","comment","CardActions","displayText","components_ProfileReadOnly","onLogout","loggedIn","setValues","handleChange","event","objectSpread","defineProperty","target","e","file","files","uploadImage","text","processFile","Button","Image_default","updateUser","window","localStorage","removeItem","Fragment","textAlign","gutterBottom","highScoreList","concat","highscore","Divider","startColor","count","setColorCount","setRunningApp","Paper","paragraph","Tablet_default","location","reload","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","Person_default","Help_default","components_Drills","components_Profile","components_Help","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","alert","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","maybeNull","season","sharedPath","fileType","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","levelStore","getRoot","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","date","getFullYear","getMonth","getDate","users","find","User","optional","nextChallange","setProfileImage","levelFilters","categories","LevelStore","array","byHighscore","slice","sort","b","y","reverse","initzialize","levelFilter","api","currentSeason","app","setLevelFilter","fetchAll","_fetchAll","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getUsers","sent","fetchLevels","fetchItems","forEach","elm","fields","push","abrupt","stop","apply","arguments","_refresh","_callee2","_context2","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context3","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","insertLevel","config","base","table","view","apiKey","maxRecords","url","TrainingApi","generalRequest","conf","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_x","_getUsers","body","Content-Type","_fetchLevels","_callee3","_fetchItems","_callee4","_context4","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9d8ef3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Drill({ store }) {\r\n  const classes = useStyles();\r\n\r\n  const drill = store.selectedDrill;\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"back\">\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectDrill()} />\r\n        </div>\r\n        <div className=\"right\">övning</div>\r\n      </div>\r\n      <Card key={drill.level} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              {drill.displayIdentifier}\r\n            </Avatar>\r\n          }\r\n          title={drill.name}\r\n        />\r\n\r\n        <CardContent>\r\n          <VideoControl store={store} settings={drill} />\r\n          <div className=\"card-content\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {drill.details}\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Drill from \"./Drill\";\r\nimport { observable } from \"mobx\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  function goToDrill(level) {\r\n    store.selectDrill(level);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!store.selectedDrill && (\r\n        <div>\r\n          <div className=\"back\">\r\n            <div className=\"left\">\r\n              <ArrowBackIosIcon onClick={() => store.selectCategory()} />\r\n            </div>\r\n            <div className=\"right\">\r\n              {store.selectedCategory.name} ({store.filteredLevels.length} st)\r\n            </div>\r\n          </div>\r\n          {store.filteredLevels.map((level, i) => (\r\n            <VisibilitySensor\r\n              key={level.id}\r\n              onChange={isVisible => onChange(level, isVisible)}\r\n            >\r\n              <Card\r\n                key={level.level}\r\n                className={classes.card}\r\n                onClick={() => goToDrill(level)}\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"Recipe\"\r\n                      style={getAvatarColor(level)}\r\n                      className={classes.avatar}\r\n                    >\r\n                      {level.displayIdentifier}\r\n                    </Avatar>\r\n                  }\r\n                  title={level.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={level} />\r\n                  <div className=\"card-content\">\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {level.details}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {store.selectedDrill && <Drill store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Game from \"./Game\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Drills({ store }) {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  function goToDrill(cat) {\r\n    store.selectCategory(cat);\r\n  }\r\n\r\n  return (\r\n    <div className=\"drills\">\r\n      {!store.selectedCategory && (\r\n        <List dense={dense}>\r\n          {store.listCategories.map(cat => (\r\n            <ListItem key={cat.id} onClick={() => goToDrill(cat)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img className=\"login-img\" src=\"0.jpg\" alt=\"Träningar\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={cat.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                  <KeyboardArrowRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {store.selectedCategory && <Game store={store} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Drills);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <VideoList store={store} user={store.selectedProfile} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile &&\r\n          store.filteredItems.map((item, i) => (\r\n            <VisibilitySensor\r\n              key={item.publicId}\r\n              onChange={isVisible => onChange(item, isVisible)}\r\n            >\r\n              <Card key={item.publicId} className={classes.card}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                      <Image\r\n                        cloudName=\"deolievif\"\r\n                        publicId={item.user.profileImage}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Avatar>\r\n                  }\r\n                  action={<ItemStatusAction item={item} />}\r\n                  title={\r\n                    <div onClick={() => store.selectProfile(item.user)}>\r\n                      {item.user.name}\r\n                    </div>\r\n                  }\r\n                  subheader={item.game.name}\r\n                />\r\n                <CardContent>\r\n                  <VideoControl store={store} settings={item} />\r\n                  {item.hasComment && (\r\n                    <div className=\"comments\">\r\n                      <Typography\r\n                        variant=\"overline\"\r\n                        style={{ color: \"gray\", fontSize: \"10px\" }}\r\n                      >\r\n                        Från tränaren:\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {item.comment}\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                  <Typography variant=\"overline\" style={{ color: \"gray\" }}>\r\n                    {item.displayText}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            </VisibilitySensor>\r\n          ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA SÄSONG 1\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button>\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport Drills from \"./Drills\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<StarIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <Drills store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"loddelogo.jpg\" alt=\"Träningar\" />\r\n\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          IF Lödde P10\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.maybeNull(types.string),\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    displayIdentifier: types.integer\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${\r\n        self.fileType\r\n      }?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${\r\n        self.posterPath\r\n      }/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst categories = [\r\n  { id: 0, category: \"CONEDRILLS\", name: \"Teknik/Passningar\" },\r\n  { id: 1, category: \"BALLMASTERY\", name: \"Kombinationer\" },\r\n  { id: 2, category: \"PASSINGDRILLS\", name: \"Possession/spel\" }\r\n  // { id: 3, category: \"SHOOTING\", name: \"Ball mastery\" },\r\n  // { id: 4, category: \"ATTACKING\", name: \"Attack\" },\r\n  // { id: 5, category: \"POSESSION\", name: \"Posesion\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get listCategories() {\r\n      return categories;\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      return self.levels.filter(\r\n        x => x.category === self.selectedCategory.category\r\n      );\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedCategory: null,\r\n    selectedDrill: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: 1\r\n  }))\r\n  .actions(self => ({\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectCategory(category) {\r\n      self.selectedCategory = category;\r\n    },\r\n    selectDrill(level) {\r\n      self.selectedDrill = level;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var levels = await self.api.fetchLevels();\r\n      var items = await self.api.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const level = {\r\n          name: \"Namn\",\r\n          publicId: myObj.public_id,\r\n          category: self.selectedCategory.category,\r\n          details: \"details\",\r\n          season: 1\r\n        };\r\n\r\n        self.api.insertLevel(level);\r\n\r\n        self.refresh();\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"app9IO48CYcfaIY4Z\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 100,\r\n  url: \"https://api.airtable.com/v0/app9IO48CYcfaIY4Z\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view }) {\r\n    const conf = config;\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    return new Request(\r\n      `${config.url}/${conf.table}?maxRecords=${conf.maxRecords}&view=${\r\n        conf.view\r\n      }`,\r\n      {\r\n        method: \"get\",\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${conf.apiKey}`\r\n        })\r\n      }\r\n    );\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchLevels() {\r\n    return this.response({ table: \"Levels\" });\r\n  },\r\n  async fetchItems() {\r\n    return this.response({ table: \"Items\" });\r\n  },\r\n  insertLevel(level) {\r\n    fetch(\r\n      new Request(`${config.url}/Levels`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: level\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/TrainingApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}